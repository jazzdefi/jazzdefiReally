{"version":3,"sources":["config/index.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","config/constants/nfts.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/teams.ts","state/teams/helpers.ts","config/constants/campaigns.ts","hooks/useRefresh.ts","components/layout/Page.tsx","utils/makeBatchRequest.ts","config/constants/ifo.ts","state/block/index.ts","components/Tags.tsx","state/achievements/helpers.ts","state/achievements/index.ts","contexts/RefreshContext.tsx","state/prices/index.ts","utils/web3React.ts","utils/wallet.ts","contexts/Localisation/translationsContext.ts","config/constants/contracts.ts","utils/addressHelpers.ts","utils/achievements.ts","components/UnlockButton.tsx","config/constants/index.ts","components/layout/Container.tsx","hooks/useApprove.ts","hooks/useHarvest.ts","components/PageLoader.tsx","hooks/useStake.ts","hooks/useUnstake.ts","utils/apy.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","config/constants/tokens.ts","components/layout/Flex.tsx","state/actions.ts","utils/contractHelpers.ts","hooks/useI18n.ts","state/hooks.ts","hooks/useContract.ts","utils/callHelpers.ts","utils/multicall.ts","utils/formatBalance.ts","hooks/useWeb3.ts","config/constants/pools.ts","utils/web3.ts","config/constants/farms.ts","hooks/useEagerConnect.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/teams/index.tsx","config/constants/types.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/toasts/index.ts"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","error","a","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","name","message","logout","nodes","process","getNodeUrl","randomIndex","random","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","bunnyId","blur","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAddress","getAddress","lpAddresses","calls","address","token","params","quoteToken","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","teams","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","id","merge","users","points","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","push","makeBatchRequest","teamData","onChainTeamData","Number","campaigns","campaignMap","Map","campaign","set","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","Page","Container","mediaQueries","batch","getWeb3NoAccount","BatchRequest","promises","resolve","reject","add","request","err","result","execute","ifos","blockSlice","currentBlock","initialBlock","setBlock","CoreTag","variant","outline","startIcon","color","CommunityTag","BinanceTag","DualTag","NoFeeTag","profileSubgraphApi","REACT_APP_SUBGRAPH_PROFILE","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","campaignId","type","title","getAchievementTitle","getAchievementDescription","badge","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","console","kebabCase","toastTypes","DANGER","createContext","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","fetchPrices","createAsyncThunk","fetch","response","json","update_at","prices","Object","keys","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","ethereum","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenSymbol","tokenImage","options","image","tokenAdded","defaultTranslationState","translations","setTranslations","TranslationsContext","97","56","getCakeAddress","tokens","jazz","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryAddress","getLotteryTicketAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","fallback","getClaimableIfoData","ifoCampaigns","ifosList","filter","ifoItem","undefined","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","has","ifoCampaign","UnlockButton","TranslateString","useI18n","onPresentConnectModal","useWalletModal","onClick","communityFarms","isCommunity","useApprove","lpContract","useDispatch","masterChefContract","useMasterchef","onApprove","approve","tx","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","isUsingBnb","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","Wrapper","StyledImage","img","PageLoader","src","alt","width","height","useSousStake","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","useUnstake","getPoolApy","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","apy","isNaN","isFinite","toNumber","getFarmApy","cakePriceUsd","poolLiquidityUsd","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","cakePrice","finalAmount","Math","round","apyModalRoi","amountEarned","amountInvested","toFixed","Grid","GridItem","Description","Text","ApyCalculatorModal","onDismiss","lpLabel","addLiquidityUrl","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","fontSize","bold","textTransform","mb","justifyContent","href","ApyButton","useModal","onPresentApyModal","event","stopPropagation","scale","ml","bnb","projectLink","piano","foam","busd","cake","usdc","btcb","ada","dot","eth","usdt","FlexLayout","getContract","abi","web3","web3NoAccount","Contract","getBep20Contract","bep20Abi","getIfoContract","ifoAbi","getSouschefContract","poolsConfig","pool","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","translationId","foundTranslation","translation","stringId","text","includesVariable","interpolatedText","isEmpty","dataKey","templateKey","RegExp","replace","useFetchPublicData","fetchPoolsPublicDataAsync","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","useFarmFromSymbol","lpSymbol","useFarmUser","usePools","fetchPoolsUserDataAsync","pools","useMemo","toast","pushToast","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useFetchProfile","fetchProfile","useProfile","profile","isInitialized","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","useFetchPriceList","useGetApiPrices","useGetApiPrice","usePriceCakeBusd","ZERO","cakeBnbFarm","bnbBusdFarm","bnbBusdPrice","useBlock","block","useTotalValue","quoteTokenPriceUsd","totalLiquidity","plus","stakingToken","getBalanceNumber","useIfoContract","useWeb3","useERC20","useBunnyFactory","usePancakeRabbits","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","ethers","constants","MaxUint256","send","from","enterStaking","gas","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","balance","displayBalance","dividedBy","getFullDisplayBalance","library","refEth","useRef","Web3","setweb3","current","earningToken","CORE","isFinished","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","useEagerConnect","connectorId","getItem","useGetDocumentTitlePrice","cakePriceUsdString","eq","toLocaleString","minimumFractionDigits","maximumFractionDigits","document","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","listLanguageTranslations","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","e","langObject","setItem","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeContext","label","icon","items","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","this","Component","ToastListener","toasts","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","StyledLabel","Label","Balance","isDisabled","unit","reverse","previousValue","start","end","duration","separator","defaultProps","TokenInput","max","onChange","onSelectMax","minHeight","alignItems","placeholder","mx","DepositModal","onConfirm","tokenName","stakingTokenDecimals","val","setVal","pendingTx","setPendingTx","fullBalance","handleChange","currentTarget","handleSelectMax","disabled","WithdrawModal","CompoundModal","BalanceRow","CardTitle","Card","card","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","primary","Details","Row","Flex","FlexFull","TokenLink","CardFooter","startBlock","endBlock","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","blocksUntilStart","blocksRemaining","imageSrc","role","aria-label","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","stakingLimit","isBnbPool","stakingTokenContract","parseFloat","requestedApproval","setRequestedApproval","stakingTokenBalance","pendingReward","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","isGreaterThan","onPresentDeposit","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","farmAPY","style","marginBottom","display","flex","HarvestButton","PoolTabButtons","stackedOnly","setStackedOnly","useRouteMatch","url","isExact","ToggleWrapper","checked","activeIndex","as","textSubtle","Hero","Farm","path","partition","finishedPools","openPools","stackedOnlyPools","Divider","exact","orderBy","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","values","some","status","createBrowserHistory","bullNft","nftList","nft","hiccupNft","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","ClaimBullHiccupNftModal","collectibleMessage","delay","flexDirection","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","onPresentGiftModal","pathname","useLocation","Home","lazy","Farms","NotFound","App","warn","Global","component","iterations","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","pricesReducer","profileReducer","teamsReducer","achievementsReducer","blockReducer","Providers","store","ReactDOM","render","StrictMode","getElementById","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingJazz","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","rabbitContract","profileApi","REACT_APP_API_PROFILE","getUsername","ok","username","getProfile","getUserProfile","getBunnyId","nfts","nftItem","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints","toastsSlice","toastIndex","splice","unshift"],"mappings":"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","file":"static/js/main.1bbb96f2.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const BASE_URL = 'https://jazzdefi.com/'\nexport const BASE_EXCHANGE_URL = 'https://exchange.jazzdefi.com/'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@mozartfinance/uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError('Provider Error', 'No provider was found')\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError('Authorization Error', 'Please authorize to access your account')\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { Nft } from './types'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    bunnyId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    bunnyId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAddress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'allowance',\n      params: [account, masterChefAdress],\n    }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingJazz',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { Team } from './types'\n\nconst teams: Team[] = []\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = []\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = []\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@mozartfinance/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon color=\"secondary\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon color=\"secondary\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon color=\"secondary\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, NoFeeTag }\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const data = await request(\n      profileSubgraphApi,\n      gql`\n        {\n          user(id: \"${account.toLowerCase()}\") {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n    )\n    return data.user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { toastTypes } from '@mozartfinance/uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data.concat(action.payload)\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: data.prices[token],\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.update_at\n      state.data = action.payload.prices\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@mozartfinance/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","export default {\n  masterChef: {\n    97: '',\n    56: '0xbd59c33C75407CD8218d1B28F5B8f33A6BB9529B',\n  },\n  sousChef: {\n    97: '',\n    56: '0xeE685114AaA400e196B7aa38633a7Cc8E10243D1',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.jazz.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `IFO Shopper: ${campaign.title}`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligble to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@mozartfinance/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.token.symbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst StyledImage = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <StyledImage src=\"/images/music.png\" alt=\"Music notes\" width={300} height={300} />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 78]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APY value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APY is NaN or infinite.\n */\nexport const getPoolApy = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\n/**\n * Get farm APY value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApy = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const apy = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\nexport default null\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\n  const principal = 1000 / cakePrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 1,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 7,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 30,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy: apy,\n    cakePrice,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(864, 'JAZZ per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand1D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand7D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          866,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@mozartfinance/uikit'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  wbnb: {\n    symbol: 'WBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://jazzdefi.com/',\n  },\n  jazz: {\n    symbol: 'JAZZ',\n    address: {\n      56: '0x303ba087356901f4178075C3a4Ca58A97Fae845d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jazzdefi.com/',\n  },\n  piano: {\n    symbol: 'PIANO',\n    address: {\n      56: '0xd46936677b2c1bb696f2b67c55239331e2b7cd42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jazzdefi.com/',\n  },\n  foam: {\n    symbol: 'FOAM',\n    address: {\n      56: '0x5380ce816082d9a01c914cab73eb062f290131d6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jazzdefi.com/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7F30933af890Ec3fBc4364B079C5593c3bCe4738',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n}\n\nexport default tokens\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoAbi from 'config/abi/ifo.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoContract = (address: string, web3?: Web3) => {\n  return getContract(ifoAbi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { Toast, toastTypes } from '@mozartfinance/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport { getBalanceNumber } from '../utils/formatBalance'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description,\n        })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description,\n        })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description,\n        })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description,\n        })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading,\n  }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[token.toLowerCase()]\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const ZERO = new BigNumber(0)\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdFarm = useFarmFromPid(5)\n\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\n\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\nexport const usePoolsEx = (): Pool[] => {\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const prices = useGetApiPrices()\n  const farms = useFarms()\n  const pools = usePoolsEx()\n\n  let value = new BigNumber(0)\n  if (prices) {\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i]\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n      value = value.plus(totalLiquidity)\n    }\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i]\n      const quoteTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()]\n      const totalLiquidity = new BigNumber(getBalanceNumber(pool.totalStaked, pool.stakingToken.decimals)).times(\n        quoteTokenPriceUsd,\n      )\n      value = value.plus(totalLiquidity)\n    }\n  }\n  return value\n}\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoContract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: 200000,\n      value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0x453a75908fb5a36d482d5f8fe88eca836f32ead5') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.jazz,\n    earningToken: tokens.jazz,\n    contractAddress: {\n      56: '0x7CC9Ab212a6eF47Ad0976BdcfCE1A7ee3c27A839',\n      97: '',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2499779405276626',\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, {\n  timeout: 10000,\n} as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'JAZZ',\n    lpAddresses: {\n      56: '0x303ba087356901f4178075C3a4Ca58A97Fae845d',\n      97: '',\n    },\n    token: tokens.jazz,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'JAZZ-BNB LP',\n    lpAddresses: {\n      56: '0x3DeA352B9eC0369EA69F206706DCf8BAcd5Abb9F',\n      97: '',\n    },\n    token: tokens.jazz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'JAZZ-BUSD LP',\n    lpAddresses: {\n      56: '0x600870108f27ab9ca57a7Bf955916564bbd708a6',\n      97: '',\n    },\n    token: tokens.jazz,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'JAZZ-CAKE LP',\n    lpAddresses: {\n      56: '0x27687A6A1d9C213fd376C9265B1FB0AD5b19E8A2',\n      97: '',\n    },\n    token: tokens.jazz,\n    quoteToken: tokens.cake,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'JAZZ-DOT LP',\n    lpAddresses: {\n      56: '0x4BCC3c67D07E23b3C462d2eb1a0dc9B8b4BcfDEb',\n      97: '',\n    },\n    token: tokens.jazz,\n    quoteToken: tokens.dot,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n      97: '',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n      97: '',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\n      97: '',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n      97: '',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n      97: '',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n      97: '',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@mozartfinance/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\nimport { usePriceCakeBusd } from 'state/hooks'\n\nconst useGetDocumentTitlePrice = () => {\n  const cakePriceUsd = usePriceCakeBusd()\n\n  const cakePriceUsdString = cakePriceUsd.eq(0)\n    ? ''\n    : ` - $${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n\n  useEffect(() => {\n    document.title = `Jazz DeFi${cakePriceUsdString}`\n  }, [cakePriceUsdString])\n}\nexport default useGetDocumentTitlePrice\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@mozartfinance/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Red Hat Text', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations([])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          setTranslations([])\n          console.error('Error while loading translations', e)\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        selectedLanguage,\n        setSelectedLanguage: handleLanguageSelect,\n        translatedLanguage,\n        setTranslatedLanguage,\n      }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@mozartfinance/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({\n  isDark: null,\n  toggleTheme: () => null,\n})\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@mozartfinance/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: 'https://wwww.jazzdefi.com',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://www.exchange.jazdefi.com',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://www.exchange.jazdefi.com/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Duets',\n    icon: 'DuetsIcon',\n    href: 'https://wwww.jazzdefi.com/farms',\n  },\n  {\n    label: 'Solos',\n    icon: 'SolosIcon',\n    href: 'https://wwww.jazzdefi.com/pools',\n  },\n  {\n    label: 'Medium',\n    icon: 'MediumIcon',\n    href:\n      'https://jazzdefi.medium.com',\n  },\n  {\n    label: 'Github',\n    icon: 'GithubIcon',\n    href:\n        '/',\n  },\n  {\n    label: 'Contracts',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'JAZZ token',\n        href: 'https://bscscan.com/address/0x303ba087356901f4178075C3a4Ca58A97Fae845d',\n      },\n      {\n        label: 'Masterchef',\n        href: 'https://bscscan.com/address/0xbd59c33C75407CD8218d1B28F5B8f33A6BB9529B',\n      },\n      {\n        label: 'Timelock',\n        href: 'https://bscscan.com/address/0x7642f6894Df8360f38fCd8eB9b5a76799F91Ebd5',\n      },\n      {\n        label: 'Liquidity lock',\n        href: '/',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@mozartfinance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = {\n        ...window.history.state,\n        isRecoveringFromChunkError: true,\n      }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@mozartfinance/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@mozartfinance/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text } from '@mozartfinance/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n  reverse?: boolean\n}\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit, reverse = false }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text bold color={isDisabled ? 'textDisabled' : color} fontSize={fontSize}>\n      {reverse && value && unit ? <span>{unit}</span> : ''}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {!reverse && value && unit ? <span>{unit}</span> : ''}\n    </Text>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport { Box, Button, Flex, Text, Input, InputProps } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Box>\n      <Flex justifyContent=\"flex-end\" minHeight=\"21px\" mb=\"8px\">\n        <Text color=\"primary\" fontSize=\"14px\">\n          {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <Flex alignItems=\"center\">\n          <Text bold color=\"primary\" textTransform=\"uppercase\" mx=\"8px\">\n            {symbol}\n          </Text>\n          <div>\n            <Button scale=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@mozartfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@mozartfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@mozartfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { multiBuy } from '../../../utils/lotteryUtils'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({\n  earnings,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings, stakingTokenDecimals)\n  }, [earnings, stakingTokenDecimals])\n\n  return (\n    <Modal\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 16px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#751113` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#751113` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Flex, MetamaskIcon } from '@mozartfinance/uikit'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { useBlock, useGetApiPrices } from 'state/hooks'\nimport { PoolCategory } from 'config/constants/types'\nimport { registerToken } from 'utils/wallet'\nimport { BASE_URL } from 'config'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  decimals: number\n  totalStaked: BigNumber\n  tokenName: string\n  tokenAddress: string\n  tokenDecimals: number\n  startBlock: number\n  endBlock: number\n  isFinished: boolean\n  poolCategory: PoolCategory\n  stakingTokenPrice: number\n  rewardTokenPrice: number\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled(Flex)`\n  align-items: center;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  decimals,\n  tokenAddress,\n  totalStaked,\n  tokenName,\n  tokenDecimals,\n  isFinished,\n  startBlock,\n  endBlock,\n  poolCategory,\n  stakingTokenPrice,\n  rewardTokenPrice,\n}) => {\n  const { currentBlock } = useBlock()\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenName.toLowerCase()}.png`\n\n  const totalLiquidity = new BigNumber(getBalanceNumber(totalStaked, decimals)).times(rewardTokenPrice)\n\n  const totalLiquidityUnitReverse = true\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  {' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\n          </Row>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  {' '}\n                </span>\n                {TranslateString(408, 'Total Liquidity')}\n              </Label>\n            </FlexFull>\n            <Balance\n              fontSize=\"14px\"\n              isDisabled={isFinished}\n              value={totalLiquidity.toNumber()}\n              unit=\"$\"\n              reverse={totalLiquidityUnitReverse}\n            />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(1212, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          {tokenAddress && (\n            <Flex mb=\"4px\">\n              <TokenLink onClick={() => registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)}>\n                Add {tokenName} to Metamask\n              </TokenLink>\n              <MetamaskIcon height={15} width={15} ml=\"4px\" />\n            </Flex>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image, Text, Skeleton, Flex } from '@mozartfinance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApy, getFarmApy } from 'utils/apy'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\nimport { Pool } from 'state/types'\nimport { useGetApiPrice, useGetApiPrices } from 'state/hooks'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\nimport ApyButton from '../../Farms/components/FarmCard/ApyButton'\nimport { BASE_ADD_LIQUIDITY_URL } from '../../../config'\n\ninterface HarvestProps {\n  pool: Pool\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { account } = useWeb3React()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  // APY\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol)\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol)\n  const apy = getPoolApy(\n    stakingTokenPrice,\n    rewardTokenPrice,\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\n    parseFloat(pool.tokenPerBlock),\n  )\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const isOldSyrup = stakingToken.symbol === tokens.foam.symbol\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol} />,\n  )\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase()\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  const farmAPY = apy && apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const addLiquidityUrl = `https://bscscan.com/address/${pool.earningToken.address[56]}`\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {earningToken.symbol} {TranslateString(348, 'Pool')}\n          {stakingToken.symbol === 'JAZZ' ? (\n            <Text fontSize=\"12px\">You need at least 1% in your wallet for computing</Text>\n          ) : (\n            ''\n          )}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/pools/${poolImage}`} alt={earningToken.symbol} width={64} height={64} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? TranslateString(999, 'Collecting') : TranslateString(562, 'Harvest')}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${earningToken.symbol} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\n                  {`Approve ${stakingToken.symbol}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0', stakingToken.decimals)\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingToken.symbol}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"white\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div>{TranslateString(736, 'APR')}:</div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            {apy ? (\n              <>\n                <ApyButton\n                  lpLabel=\"\"\n                  addLiquidityUrl={addLiquidityUrl}\n                  cakePrice={new BigNumber(stakingTokenPrice)}\n                  apy={apy}\n                />\n                <Text bold fontSize=\"14px\">\n                  {farmAPY}%\n                </Text>\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </div>\n        </StyledDetails>\n        <StyledDetails>\n          <div>{TranslateString(384, 'Your Stake')}:</div>\n          <Balance\n            fontSize=\"14px\"\n            isDisabled={isFinished}\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\n          />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={earningToken.projectLink}\n        decimals={stakingToken.decimals}\n        totalStaked={totalStaked}\n        startBlock={startBlock}\n        endBlock={endBlock}\n        isFinished={isFinished}\n        poolCategory={poolCategory}\n        tokenName={earningToken.symbol}\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\n        tokenDecimals={earningToken.decimals}\n        stakingTokenPrice={stakingTokenPrice}\n        rewardTokenPrice={rewardTokenPrice}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@mozartfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\n        <Text> {TranslateString(999, 'Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(388, 'Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useState, useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading } from '@mozartfinance/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { currentBlock } = useBlock()\n  const [stackedOnly, setStackedOnly] = useState(false)\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || currentBlock > pool.endBlock),\n    [currentBlock, pools],\n  )\n  const stackedOnlyPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(738, 'JAZZ Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake JAZZ to earn new tokens.')}</li>\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <object type=\"image/svg+xml\" width={256} height={256} data=\"/images/saxophone-pool-full.svg\">\n          <img src=\"images/saxophone-pool-full.svg\" alt=\"JAZZ saxophone\" />\n        </object>\n      </Hero>\n      <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stackedOnly\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\n\nexport const BULL_NFT = 11\nexport const HICCUP_NFT = 10\n\nconst bunnySpecialContract = getBunnySpecialContract()\n\nconst useGetBullHiccupClaimableStatus = () => {\n  const [hasChecked, setHasChecked] = useState(false)\n  const [claimables, setClaimables] = useState({\n    [BULL_NFT]: false,\n    [HICCUP_NFT]: false,\n  })\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const checkClaimableStatus = async () => {\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\n        .call()) as boolean[]\n\n      setClaimables({\n        [BULL_NFT]: isBullClaimable,\n        [HICCUP_NFT]: isHiccupClaimable,\n      })\n      setHasChecked(true)\n    }\n\n    if (account) {\n      checkClaimableStatus()\n    }\n  }, [account, setClaimables, setHasChecked])\n\n  return {\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\n    isBullClaimable: claimables[BULL_NFT],\n    isHiccupClaimable: claimables[HICCUP_NFT],\n    hasChecked,\n  }\n}\n\nexport default useGetBullHiccupClaimableStatus\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@mozartfinance/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport useI18n from 'hooks/useI18n'\nimport confetti from 'canvas-confetti'\nimport nftList from 'config/constants/nfts'\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\n\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\n  isBullClaimable: boolean\n  isHiccupClaimable: boolean\n}\n\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  margin-bottom: 24px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\n  if (isBullClaimable && isHiccupClaimable) {\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\n  }\n\n  if (isBullClaimable) {\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n  }\n\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n}\n\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\n  isBullClaimable,\n  isHiccupClaimable,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const collectibleMessage =\n    isBullClaimable && isHiccupClaimable\n      ? TranslateString(999, 'You won two Collectibles!')\n      : TranslateString(999, 'You won a collectible!')\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {collectibleMessage}\n        </Text>\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimBullHiccupNftModal\n","import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@mozartfinance/uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n","import React, { useEffect, lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@mozartfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n  useGetDocumentTitlePrice()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <GlobalCheckBullHiccupClaimStatus />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    achievements: achievementsReducer,\n    block: blockReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@mozartfinance/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ThemeContextProvider>\n          <LanguageContextProvider>\n            <RefreshContextProvider>\n              <ModalProvider>{children}</ModalProvider>\n            </RefreshContextProvider>\n          </LanguageContextProvider>\n        </ThemeContextProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { TranslatableText } from 'state/types'\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  tokenSymbol: string\n  releaseBlockNumber: number\n  campaignId?: string\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n  depositFeeBP?: number\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  stakingLimit?: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(allowances[index]).toJSON(),\n    }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(bnbBalance).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingJazz('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = {\n        ...state.data[index],\n        userData: { ...state.data[index].userData, [field]: value },\n      }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(\n    updatePoolsUserData({\n      sousId,\n      field: 'allowance',\n      value: allowances[sousId],\n    }),\n  )\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(\n    updatePoolsUserData({\n      sousId,\n      field: 'stakingTokenBalance',\n      value: tokenBalances[sousId],\n    }),\n  )\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(\n    updatePoolsUserData({\n      sousId,\n      field: 'stakedBalance',\n      value: stakedBalances[sousId],\n    }),\n  )\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(\n    updatePoolsUserData({\n      sousId,\n      field: 'pendingReward',\n      value: pendingRewards[sousId],\n    }),\n  )\n}\n\nexport default PoolsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport nfts from 'config/constants/nfts'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst rabbitContract = getPancakeRabbitContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\n        },\n        { domain: 'mozartfinance.io', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile = (address: string) => async (dispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@mozartfinance/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n"],"sourceRoot":""}