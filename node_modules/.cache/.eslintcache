[{"/home/drab/Documents/jazzdefi/src/index.tsx":"1","/home/drab/Documents/jazzdefi/src/Providers.tsx":"2","/home/drab/Documents/jazzdefi/src/App.tsx":"3","/home/drab/Documents/jazzdefi/src/routerHistory.ts":"4","/home/drab/Documents/jazzdefi/src/hooks/useGetDocumentTitlePrice.ts":"5","/home/drab/Documents/jazzdefi/src/style/Global.tsx":"6","/home/drab/Documents/jazzdefi/src/components/PageLoader.tsx":"7","/home/drab/Documents/jazzdefi/src/views/NotFound.tsx":"8","/home/drab/Documents/jazzdefi/src/views/Teams/Team.tsx":"9","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx":"10","/home/drab/Documents/jazzdefi/src/hooks/useEagerConnect.ts":"11","/home/drab/Documents/jazzdefi/src/state/hooks.ts":"12","/home/drab/Documents/jazzdefi/src/views/Home/index.ts":"13","/home/drab/Documents/jazzdefi/src/components/EasterEgg/index.ts":"14","/home/drab/Documents/jazzdefi/src/views/Lottery/index.ts":"15","/home/drab/Documents/jazzdefi/src/views/Farms/index.ts":"16","/home/drab/Documents/jazzdefi/src/views/Pools/index.ts":"17","/home/drab/Documents/jazzdefi/src/utils/web3React.ts":"18","/home/drab/Documents/jazzdefi/src/views/Collectibles/index.tsx":"19","/home/drab/Documents/jazzdefi/src/views/Teams/index.tsx":"20","/home/drab/Documents/jazzdefi/src/components/Menu/index.tsx":"21","/home/drab/Documents/jazzdefi/src/components/ToastListener/index.tsx":"22","/home/drab/Documents/jazzdefi/src/components/SuspenseWithChunkError/index.tsx":"23","/home/drab/Documents/jazzdefi/src/views/Ifos/index.tsx":"24","/home/drab/Documents/jazzdefi/src/views/Profile/index.tsx":"25","/home/drab/Documents/jazzdefi/src/contexts/ThemeContext.tsx":"26","/home/drab/Documents/jazzdefi/src/contexts/RefreshContext.tsx":"27","/home/drab/Documents/jazzdefi/src/contexts/Localisation/languageContext.tsx":"28","/home/drab/Documents/jazzdefi/src/views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts":"29","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/ClaimBullHiccupNftModal.tsx":"30","/home/drab/Documents/jazzdefi/src/components/layout/Page.tsx":"31","/home/drab/Documents/jazzdefi/src/views/Teams/components/TeamCard.tsx":"32","/home/drab/Documents/jazzdefi/src/views/Teams/components/TeamHeader.tsx":"33","/home/drab/Documents/jazzdefi/src/state/index.ts":"34","/home/drab/Documents/jazzdefi/src/state/actions.ts":"35","/home/drab/Documents/jazzdefi/src/utils/formatBalance.ts":"36","/home/drab/Documents/jazzdefi/src/utils/getRpcUrl.ts":"37","/home/drab/Documents/jazzdefi/src/components/Menu/config.ts":"38","/home/drab/Documents/jazzdefi/src/views/Home/Home.tsx":"39","/home/drab/Documents/jazzdefi/src/components/EasterEgg/EasterEgg.tsx":"40","/home/drab/Documents/jazzdefi/src/views/Lottery/Lottery.tsx":"41","/home/drab/Documents/jazzdefi/src/views/Pools/Syrup.tsx":"42","/home/drab/Documents/jazzdefi/src/views/Farms/Farms.tsx":"43","/home/drab/Documents/jazzdefi/src/hooks/useI18n.ts":"44","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftList.tsx":"45","/home/drab/Documents/jazzdefi/src/views/Teams/components/TeamListCard.tsx":"46","/home/drab/Documents/jazzdefi/src/views/Profile/PublicProfile.tsx":"47","/home/drab/Documents/jazzdefi/src/views/Profile/TaskCenter.tsx":"48","/home/drab/Documents/jazzdefi/src/views/Ifos/PastIfo.tsx":"49","/home/drab/Documents/jazzdefi/src/views/Ifos/CurrentIfo.tsx":"50","/home/drab/Documents/jazzdefi/src/config/constants/teams.ts":"51","/home/drab/Documents/jazzdefi/src/views/Profile/components/Header.tsx":"52","/home/drab/Documents/jazzdefi/src/views/Ifos/components/Hero.tsx":"53","/home/drab/Documents/jazzdefi/src/components/layout/Container.tsx":"54","/home/drab/Documents/jazzdefi/src/views/Teams/components/NoProfileCard.tsx":"55","/home/drab/Documents/jazzdefi/src/hooks/useAuth.ts":"56","/home/drab/Documents/jazzdefi/src/utils/web3.ts":"57","/home/drab/Documents/jazzdefi/src/hooks/useRefresh.ts":"58","/home/drab/Documents/jazzdefi/src/state/prices/index.ts":"59","/home/drab/Documents/jazzdefi/src/state/achievements/index.ts":"60","/home/drab/Documents/jazzdefi/src/hooks/useTheme.ts":"61","/home/drab/Documents/jazzdefi/src/contexts/Localisation/translationsContext.ts":"62","/home/drab/Documents/jazzdefi/src/state/profile/index.tsx":"63","/home/drab/Documents/jazzdefi/src/state/teams/index.tsx":"64","/home/drab/Documents/jazzdefi/src/views/Farms/components/types.ts":"65","/home/drab/Documents/jazzdefi/src/config/localisation/languageCodes.ts":"66","/home/drab/Documents/jazzdefi/src/utils/contractHelpers.ts":"67","/home/drab/Documents/jazzdefi/src/config/constants/nfts.ts":"68","/home/drab/Documents/jazzdefi/src/views/Farms/components/SearchInput.tsx":"69","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/index.tsx":"70","/home/drab/Documents/jazzdefi/src/views/Farms/components/Select/Select.tsx":"71","/home/drab/Documents/jazzdefi/src/views/Farms/components/ToggleView/ToggleView.tsx":"72","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/FarmTable.tsx":"73","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/FarmCard.tsx":"74","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftGrid.tsx":"75","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoTabButtons/index.tsx":"76","/home/drab/Documents/jazzdefi/src/views/Pools/components/Divider.tsx":"77","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementsList.tsx":"78","/home/drab/Documents/jazzdefi/src/views/Profile/components/Menu.tsx":"79","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCards.tsx":"80","/home/drab/Documents/jazzdefi/src/views/Ifos/components/Title.tsx":"81","/home/drab/Documents/jazzdefi/src/views/Profile/components/HeaderWrapper.tsx":"82","/home/drab/Documents/jazzdefi/src/views/Profile/components/ClaimGiftModal.tsx":"83","/home/drab/Documents/jazzdefi/src/views/Profile/components/StatBox.tsx":"84","/home/drab/Documents/jazzdefi/src/views/Profile/components/ComingSoon.tsx":"85","/home/drab/Documents/jazzdefi/src/views/Profile/components/ClaimPointsCallout .tsx":"86","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileAvatar.tsx":"87","/home/drab/Documents/jazzdefi/src/views/Profile/components/WalletNotConnected.tsx":"88","/home/drab/Documents/jazzdefi/src/views/Profile/components/Collectibles.tsx":"89","/home/drab/Documents/jazzdefi/src/state/block/index.ts":"90","/home/drab/Documents/jazzdefi/src/state/achievements/helpers.ts":"91","/home/drab/Documents/jazzdefi/src/state/profile/getProfile.ts":"92","/home/drab/Documents/jazzdefi/src/state/teams/helpers.ts":"93","/home/drab/Documents/jazzdefi/src/utils/apy.ts":"94","/home/drab/Documents/jazzdefi/src/components/layout/Flex.tsx":"95","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTabButtons/index.tsx":"96","/home/drab/Documents/jazzdefi/src/views/Pools/components/PoolTabButtons/index.tsx":"97","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftCard/index.tsx":"98","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/Steps.tsx":"99","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Row.tsx":"100","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/ApyButton.tsx":"101","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/index.tsx":"102","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/CardActionsContainer.tsx":"103","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/CardHeading.tsx":"104","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/DetailsSection.tsx":"105","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx":"106","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementCard.tsx":"107","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/Header.tsx":"108","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/index.tsx":"109","/home/drab/Documents/jazzdefi/src/views/Profile/components/SecondaryCard.tsx":"110","/home/drab/Documents/jazzdefi/src/views/Profile/components/ProfileAvatar.tsx":"111","/home/drab/Documents/jazzdefi/src/utils/wallet.ts":"112","/home/drab/Documents/jazzdefi/src/views/Profile/components/CollectibleCard.tsx":"113","/home/drab/Documents/jazzdefi/src/state/profile/helpers.ts":"114","/home/drab/Documents/jazzdefi/src/config/constants/index.ts":"115","/home/drab/Documents/jazzdefi/src/utils/getLiquidityUrlPathParts.ts":"116","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftCard/Preview.tsx":"117","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/ClaimNftModal.tsx":"118","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/config.ts":"119","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/reducer.ts":"120","/home/drab/Documents/jazzdefi/src/hooks/useContract.ts":"121","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/TransferNftModal.tsx":"122","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/InfoRow.tsx":"123","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/UserName.tsx":"124","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/CellLayout.tsx":"125","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx":"126","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardTime.tsx":"127","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardProgress.tsx":"128","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardActions.tsx":"129","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/HarvestAction.tsx":"130","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/StakeAction.tsx":"131","/home/drab/Documents/jazzdefi/src/utils/achievements.ts":"132","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementDescription.tsx":"133","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementTitle.tsx":"134","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/ApproveCakeView.tsx":"135","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx":"136","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx":"137","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/StartView.tsx":"138","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementAvatar.tsx":"139","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardDetails.tsx":"140","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardHeader.tsx":"141","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Liquidity.tsx":"142","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Multiplier.tsx":"143","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementRow/index.tsx":"144","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/ActionPanel.tsx":"145","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Details.tsx":"146","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Earned.tsx":"147","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Farm.tsx":"148","/home/drab/Documents/jazzdefi/src/components/UnlockButton.tsx":"149","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Apr.tsx":"150","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/TeamSelection.tsx":"151","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/ProfilePicture.tsx":"152","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/Mint.tsx":"153","/home/drab/Documents/jazzdefi/src/config/constants/campaigns.ts":"154","/home/drab/Documents/jazzdefi/src/state/toasts/index.ts":"155","/home/drab/Documents/jazzdefi/src/utils/makeBatchRequest.ts":"156","/home/drab/Documents/jazzdefi/src/config/constants/ifo.ts":"157","/home/drab/Documents/jazzdefi/src/hooks/useGetWalletNfts.ts":"158","/home/drab/Documents/jazzdefi/src/config/constants/pools.ts":"159","/home/drab/Documents/jazzdefi/src/config/constants/farms.ts":"160","/home/drab/Documents/jazzdefi/src/config/index.ts":"161","/home/drab/Documents/jazzdefi/src/utils/addressHelpers.ts":"162","/home/drab/Documents/jazzdefi/src/components/ExpandableSectionButton/index.ts":"163","/home/drab/Documents/jazzdefi/src/hooks/useWeb3.ts":"164","/home/drab/Documents/jazzdefi/src/hooks/useApprove.ts":"165","/home/drab/Documents/jazzdefi/src/hooks/useGetPublicIfoData.ts":"166","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/contexts/hook.ts":"167","/home/drab/Documents/jazzdefi/src/components/Tags.tsx":"168","/home/drab/Documents/jazzdefi/src/views/Profile/components/ConfirmProfileCreationModal.tsx":"169","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/InactiveSkeleton.tsx":"170","/home/drab/Documents/jazzdefi/src/views/Farms/components/WithdrawModal.tsx":"171","/home/drab/Documents/jazzdefi/src/views/Farms/components/DepositModal.tsx":"172","/home/drab/Documents/jazzdefi/src/views/Profile/components/ApproveConfirmButtons.tsx":"173","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementRow/PointsLabel.tsx":"174","/home/drab/Documents/jazzdefi/src/views/Profile/components/ActionColumn.tsx":"175","/home/drab/Documents/jazzdefi/src/views/Farms/components/Tooltip/Tooltip.tsx":"176","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/StakedAction.tsx":"177","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/HarvestAction.tsx":"178","/home/drab/Documents/jazzdefi/src/views/Profile/components/NextStepButton.tsx":"179","/home/drab/Documents/jazzdefi/src/views/Profile/components/SelectionCard.tsx":"180","/home/drab/Documents/jazzdefi/src/config/constants/types.ts":"181","/home/drab/Documents/jazzdefi/src/config/constants/tokens.ts":"182","/home/drab/Documents/jazzdefi/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx":"183","/home/drab/Documents/jazzdefi/src/hooks/useHasCakeBalance.ts":"184","/home/drab/Documents/jazzdefi/src/utils/compoundApyHelpers.ts":"185","/home/drab/Documents/jazzdefi/src/utils/getTimePeriods.ts":"186","/home/drab/Documents/jazzdefi/src/hooks/useHarvest.ts":"187","/home/drab/Documents/jazzdefi/src/hooks/useUnstake.ts":"188","/home/drab/Documents/jazzdefi/src/hooks/useGetProfileCosts.ts":"189","/home/drab/Documents/jazzdefi/src/hooks/useApproveConfirmTransaction.ts":"190","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/styles.ts":"191","/home/drab/Documents/jazzdefi/src/utils/callHelpers.ts":"192","/home/drab/Documents/jazzdefi/src/hooks/useTokenBalance.ts":"193","/home/drab/Documents/jazzdefi/src/config/constants/contracts.ts":"194","/home/drab/Documents/jazzdefi/src/hooks/useStake.ts":"195","/home/drab/Documents/jazzdefi/src/components/ModalInput/index.ts":"196","/home/drab/Documents/jazzdefi/src/components/ModalActions/index.ts":"197","/home/drab/Documents/jazzdefi/src/components/ModalInput/ModalInput.tsx":"198","/home/drab/Documents/jazzdefi/src/components/ModalActions/ModalActions.tsx":"199","/home/drab/Documents/jazzdefi/src/components/Spacer/index.ts":"200","/home/drab/Documents/jazzdefi/src/components/Spacer/Spacer.tsx":"201","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/ActiveSkeleton.tsx":"202","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/Claim.tsx":"203","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/Contribute.tsx":"204","/home/drab/Documents/jazzdefi/src/views/Profile/components/CardHeader.tsx":"205","/home/drab/Documents/jazzdefi/src/views/Pools/components/PoolCard.tsx":"206","/home/drab/Documents/jazzdefi/src/hooks/useGetWalletIfoData.ts":"207","/home/drab/Documents/jazzdefi/src/views/Lottery/PastDrawsPage.tsx":"208","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/MetaLabel.tsx":"209","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/PercentageOfTotal.tsx":"210","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/ContributeModal.tsx":"211","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/BalanceInUsd.tsx":"212","/home/drab/Documents/jazzdefi/src/views/Lottery/NextDrawPage.tsx":"213","/home/drab/Documents/jazzdefi/src/views/Lottery/components/Divider.tsx":"214","/home/drab/Documents/jazzdefi/src/views/Lottery/components/Hero.tsx":"215","/home/drab/Documents/jazzdefi/src/views/Pools/components/CardFooter.tsx":"216","/home/drab/Documents/jazzdefi/src/views/Pools/components/HarvestButton.tsx":"217","/home/drab/Documents/jazzdefi/src/views/Pools/components/OldSyrupTitle.tsx":"218","/home/drab/Documents/jazzdefi/src/views/Pools/components/Card.tsx":"219","/home/drab/Documents/jazzdefi/src/views/Pools/components/CardTitle.tsx":"220","/home/drab/Documents/jazzdefi/src/views/Pools/components/CompoundModal.tsx":"221","/home/drab/Documents/jazzdefi/src/views/Pools/components/WithdrawModal.tsx":"222","/home/drab/Documents/jazzdefi/src/views/Pools/components/DepositModal.tsx":"223","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx":"224","/home/drab/Documents/jazzdefi/src/utils/lotteryUtils.ts":"225","/home/drab/Documents/jazzdefi/src/contexts/PastLotteryDataContext.tsx":"226","/home/drab/Documents/jazzdefi/src/views/Lottery/components/HowItWorks.tsx":"227","/home/drab/Documents/jazzdefi/src/views/Lottery/components/WinningNumbers.tsx":"228","/home/drab/Documents/jazzdefi/src/views/Lottery/components/UnlockWalletCard.tsx":"229","/home/drab/Documents/jazzdefi/src/state/pools/index.ts":"230","/home/drab/Documents/jazzdefi/src/state/farms/index.ts":"231","/home/drab/Documents/jazzdefi/src/views/Home/components/EarnAPYCard.tsx":"232","/home/drab/Documents/jazzdefi/src/views/Home/components/EarnAssetCard.tsx":"233","/home/drab/Documents/jazzdefi/src/views/Home/components/CakeStats.tsx":"234","/home/drab/Documents/jazzdefi/src/views/Home/components/TotalValueLockedCard.tsx":"235","/home/drab/Documents/jazzdefi/src/views/Home/components/FarmStakingCard.tsx":"236","/home/drab/Documents/jazzdefi/src/views/Lottery/components/LotteryProgress.tsx":"237","/home/drab/Documents/jazzdefi/src/hooks/useAllowance.ts":"238","/home/drab/Documents/jazzdefi/src/components/Balance.tsx":"239","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx":"240","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/Legend.tsx":"241","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/HistoryChart.tsx":"242","/home/drab/Documents/jazzdefi/src/hooks/useTickets.ts":"243","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TotalPrizesCard/index.tsx":"244","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/index.tsx":"245","/home/drab/Documents/jazzdefi/src/state/pools/fetchPoolsUser.ts":"246","/home/drab/Documents/jazzdefi/src/state/farms/fetchFarmUser.ts":"247","/home/drab/Documents/jazzdefi/src/state/farms/fetchFarms.ts":"248","/home/drab/Documents/jazzdefi/src/views/Lottery/components/YourPrizesCard/index.tsx":"249","/home/drab/Documents/jazzdefi/src/state/pools/fetchPools.ts":"250","/home/drab/Documents/jazzdefi/src/views/Lottery/helpers/CountdownHelpers.ts":"251","/home/drab/Documents/jazzdefi/src/views/Home/components/CardValue.tsx":"252","/home/drab/Documents/jazzdefi/src/views/Home/components/CakeWalletBalance.tsx":"253","/home/drab/Documents/jazzdefi/src/views/Home/components/CakeHarvestBalance.tsx":"254","/home/drab/Documents/jazzdefi/src/components/Label/index.ts":"255","/home/drab/Documents/jazzdefi/src/components/BalanceInput/index.ts":"256","/home/drab/Documents/jazzdefi/src/views/Lottery/components/Loading.tsx":"257","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx":"258","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx":"259","/home/drab/Documents/jazzdefi/src/hooks/useGetLotteryHasDrawn.ts":"260","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/LineChartWrapper.tsx":"261","/home/drab/Documents/jazzdefi/src/hooks/useTimer.ts":"262","/home/drab/Documents/jazzdefi/src/hooks/useFarmsWithBalance.ts":"263","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PrizeGrid.tsx":"264","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/TicketActions.tsx":"265","/home/drab/Documents/jazzdefi/src/views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx":"266","/home/drab/Documents/jazzdefi/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx":"267","/home/drab/Documents/jazzdefi/src/views/Home/components/CardBusdValue.tsx":"268","/home/drab/Documents/jazzdefi/src/components/TokenInput/index.ts":"269","/home/drab/Documents/jazzdefi/src/components/Label/Label.tsx":"270","/home/drab/Documents/jazzdefi/src/hooks/useGetRecentLotteryRoundData.ts":"271","/home/drab/Documents/jazzdefi/src/utils/getLotteryRoundData.ts":"272","/home/drab/Documents/jazzdefi/src/components/BalanceInput/BalanceInput.tsx":"273","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx":"274","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx":"275","/home/drab/Documents/jazzdefi/src/utils/multicall.ts":"276","/home/drab/Documents/jazzdefi/src/hooks/useAllEarnings.ts":"277","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/PurchaseWarningModal.tsx":"278","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/UserTicketsModal.tsx":"279","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx":"280","/home/drab/Documents/jazzdefi/src/components/TokenInput/TokenInput.tsx":"281","/home/drab/Documents/jazzdefi/src/views/Lottery/components/Timestamp.tsx":"282","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx":"283","/home/drab/Documents/jazzdefi/src/views/Lottery/components/LotteryCardHeading.tsx":"284","/home/drab/Documents/jazzdefi/src/hooks/useBuyLottery.ts":"285","/home/drab/Documents/jazzdefi/src/hooks/useApproval.ts":"286","/home/drab/Documents/jazzdefi/src/views/Lottery/helpers/formatLotteryDate.ts":"287","/home/drab/Documents/jazzdefi/src/components/TicketInput/index.ts":"288","/home/drab/Documents/jazzdefi/src/components/TicketInput/TicketInput.tsx":"289","/home/drab/Documents/jazzdefi/src/views/Home/components/TwitterCard.tsx":"290","/home/drab/Documents/jazzdefi/src/views/Farms/components/RainbowLight.tsx":"291"},{"size":265,"mtime":1617406599181,"results":"292","hashOfConfig":"293"},{"size":924,"mtime":1617690901610,"results":"294","hashOfConfig":"293"},{"size":2597,"mtime":1617690901610,"results":"295","hashOfConfig":"293"},{"size":200,"mtime":1617406599193,"results":"296","hashOfConfig":"293"},{"size":511,"mtime":1617406599013,"results":"297","hashOfConfig":"293"},{"size":581,"mtime":1617690901610,"results":"298","hashOfConfig":"293"},{"size":495,"mtime":1617406598609,"results":"299","hashOfConfig":"293"},{"size":819,"mtime":1617690901610,"results":"300","hashOfConfig":"293"},{"size":1175,"mtime":1617690901610,"results":"301","hashOfConfig":"293"},{"size":1422,"mtime":1617690901610,"results":"302","hashOfConfig":"293"},{"size":733,"mtime":1617690901610,"results":"303","hashOfConfig":"293"},{"size":7617,"mtime":1617690901610,"results":"304","hashOfConfig":"293"},{"size":33,"mtime":1617406600305,"results":"305","hashOfConfig":"293"},{"size":38,"mtime":1617406598469,"results":"306","hashOfConfig":"293"},{"size":36,"mtime":1617406600869,"results":"307","hashOfConfig":"293"},{"size":34,"mtime":1617406600177,"results":"308","hashOfConfig":"293"},{"size":34,"mtime":1617406601053,"results":"309","hashOfConfig":"293"},{"size":1042,"mtime":1617690901610,"results":"310","hashOfConfig":"293"},{"size":703,"mtime":1617690901610,"results":"311","hashOfConfig":"293"},{"size":978,"mtime":1617690901610,"results":"312","hashOfConfig":"293"},{"size":1135,"mtime":1617690901610,"results":"313","hashOfConfig":"293"},{"size":489,"mtime":1617690901610,"results":"314","hashOfConfig":"293"},{"size":1410,"mtime":1617406598641,"results":"315","hashOfConfig":"293"},{"size":646,"mtime":1617406600509,"results":"316","hashOfConfig":"293"},{"size":1002,"mtime":1617406601317,"results":"317","hashOfConfig":"293"},{"size":906,"mtime":1617690901610,"results":"318","hashOfConfig":"293"},{"size":912,"mtime":1617406598873,"results":"319","hashOfConfig":"293"},{"size":2998,"mtime":1617406598849,"results":"320","hashOfConfig":"293"},{"size":1252,"mtime":1617406599725,"results":"321","hashOfConfig":"293"},{"size":2533,"mtime":1617690901610,"results":"322","hashOfConfig":"293"},{"size":406,"mtime":1617406598533,"results":"323","hashOfConfig":"293"},{"size":2698,"mtime":1617690901610,"results":"324","hashOfConfig":"293"},{"size":921,"mtime":1617690901610,"results":"325","hashOfConfig":"293"},{"size":679,"mtime":1617406599313,"results":"326","hashOfConfig":"293"},{"size":518,"mtime":1617406599225,"results":"327","hashOfConfig":"293"},{"size":390,"mtime":1617406599505,"results":"328","hashOfConfig":"293"},{"size":325,"mtime":1617406599525,"results":"329","hashOfConfig":"293"},{"size":579,"mtime":1617690901610,"results":"330","hashOfConfig":"293"},{"size":3196,"mtime":1617690901610,"results":"331","hashOfConfig":"293"},{"size":543,"mtime":1617690901610,"results":"332","hashOfConfig":"293"},{"size":2566,"mtime":1617690901610,"results":"333","hashOfConfig":"293"},{"size":3213,"mtime":1617690901610,"results":"334","hashOfConfig":"293"},{"size":10603,"mtime":1617690901610,"results":"335","hashOfConfig":"293"},{"size":1231,"mtime":1617406599105,"results":"336","hashOfConfig":"293"},{"size":2123,"mtime":1617406599689,"results":"337","hashOfConfig":"293"},{"size":3245,"mtime":1617690901610,"results":"338","hashOfConfig":"293"},{"size":3436,"mtime":1617690901610,"results":"339","hashOfConfig":"293"},{"size":1677,"mtime":1617690901610,"results":"340","hashOfConfig":"293"},{"size":459,"mtime":1617406600513,"results":"341","hashOfConfig":"293"},{"size":3686,"mtime":1617690901610,"results":"342","hashOfConfig":"293"},{"size":79,"mtime":1617406598785,"results":"343","hashOfConfig":"293"},{"size":1562,"mtime":1617690901610,"results":"344","hashOfConfig":"293"},{"size":946,"mtime":1617690901610,"results":"345","hashOfConfig":"293"},{"size":305,"mtime":1617406598517,"results":"346","hashOfConfig":"293"},{"size":1038,"mtime":1617690901610,"results":"347","hashOfConfig":"293"},{"size":2189,"mtime":1617690901610,"results":"348","hashOfConfig":"293"},{"size":419,"mtime":1617406599597,"results":"349","hashOfConfig":"293"},{"size":251,"mtime":1617406599113,"results":"350","hashOfConfig":"293"},{"size":1245,"mtime":1617406599373,"results":"351","hashOfConfig":"293"},{"size":1450,"mtime":1617690901610,"results":"352","hashOfConfig":"293"},{"size":358,"mtime":1617406599129,"results":"353","hashOfConfig":"293"},{"size":391,"mtime":1617406598861,"results":"354","hashOfConfig":"293"},{"size":1424,"mtime":1617406599389,"results":"355","hashOfConfig":"293"},{"size":1753,"mtime":1617406599409,"results":"356","hashOfConfig":"293"},{"size":1683,"mtime":1617406600125,"results":"357","hashOfConfig":"293"},{"size":1914,"mtime":1617406598829,"results":"358","hashOfConfig":"293"},{"size":3377,"mtime":1617406599501,"results":"359","hashOfConfig":"293"},{"size":5108,"mtime":1617406598773,"results":"360","hashOfConfig":"293"},{"size":978,"mtime":1617690901610,"results":"361","hashOfConfig":"293"},{"size":379,"mtime":1617406601349,"results":"362","hashOfConfig":"293"},{"size":3949,"mtime":1617690901610,"results":"363","hashOfConfig":"293"},{"size":1059,"mtime":1617690901610,"results":"364","hashOfConfig":"293"},{"size":2161,"mtime":1617690901610,"results":"365","hashOfConfig":"293"},{"size":4937,"mtime":1617690901610,"results":"366","hashOfConfig":"293"},{"size":388,"mtime":1617406599681,"results":"367","hashOfConfig":"293"},{"size":748,"mtime":1617690901610,"results":"368","hashOfConfig":"293"},{"size":185,"mtime":1617406600977,"results":"369","hashOfConfig":"293"},{"size":1054,"mtime":1617690901610,"results":"370","hashOfConfig":"293"},{"size":1124,"mtime":1617690901610,"results":"371","hashOfConfig":"293"},{"size":571,"mtime":1617406600481,"results":"372","hashOfConfig":"293"},{"size":233,"mtime":1617690901610,"results":"373","hashOfConfig":"293"},{"size":223,"mtime":1617406601265,"results":"374","hashOfConfig":"293"},{"size":3384,"mtime":1617690901610,"results":"375","hashOfConfig":"293"},{"size":944,"mtime":1617690901610,"results":"376","hashOfConfig":"293"},{"size":628,"mtime":1617690901610,"results":"377","hashOfConfig":"293"},{"size":2397,"mtime":1617690901610,"results":"378","hashOfConfig":"293"},{"size":1304,"mtime":1617690901610,"results":"379","hashOfConfig":"293"},{"size":539,"mtime":1617690901610,"results":"380","hashOfConfig":"293"},{"size":2338,"mtime":1617690901610,"results":"381","hashOfConfig":"293"},{"size":598,"mtime":1617406599229,"results":"382","hashOfConfig":"293"},{"size":1695,"mtime":1617406599209,"results":"383","hashOfConfig":"293"},{"size":2360,"mtime":1617690843446,"results":"384","hashOfConfig":"293"},{"size":1866,"mtime":1617406599401,"results":"385","hashOfConfig":"293"},{"size":1540,"mtime":1617406599461,"results":"386","hashOfConfig":"293"},{"size":282,"mtime":1617406598525,"results":"387","hashOfConfig":"293"},{"size":978,"mtime":1617690901610,"results":"388","hashOfConfig":"293"},{"size":1271,"mtime":1617690901610,"results":"389","hashOfConfig":"293"},{"size":2999,"mtime":1617690901610,"results":"390","hashOfConfig":"293"},{"size":905,"mtime":1617406601385,"results":"391","hashOfConfig":"293"},{"size":4736,"mtime":1617690901610,"results":"392","hashOfConfig":"293"},{"size":845,"mtime":1617690901610,"results":"393","hashOfConfig":"293"},{"size":2490,"mtime":1617690901610,"results":"394","hashOfConfig":"293"},{"size":3165,"mtime":1617690901610,"results":"395","hashOfConfig":"293"},{"size":1561,"mtime":1617690901610,"results":"396","hashOfConfig":"293"},{"size":1533,"mtime":1617690901610,"results":"397","hashOfConfig":"293"},{"size":2820,"mtime":1617406601333,"results":"398","hashOfConfig":"293"},{"size":1085,"mtime":1617690901610,"results":"399","hashOfConfig":"293"},{"size":1525,"mtime":1617690901610,"results":"400","hashOfConfig":"293"},{"size":1726,"mtime":1617690901610,"results":"401","hashOfConfig":"293"},{"size":278,"mtime":1617690901610,"results":"402","hashOfConfig":"293"},{"size":1289,"mtime":1617690901610,"results":"403","hashOfConfig":"293"},{"size":1827,"mtime":1617406599589,"results":"404","hashOfConfig":"293"},{"size":634,"mtime":1617690901610,"results":"405","hashOfConfig":"293"},{"size":521,"mtime":1617406599385,"results":"406","hashOfConfig":"293"},{"size":273,"mtime":1617406598749,"results":"407","hashOfConfig":"293"},{"size":874,"mtime":1617406599517,"results":"408","hashOfConfig":"293"},{"size":1527,"mtime":1617406599673,"results":"409","hashOfConfig":"293"},{"size":2220,"mtime":1617690901610,"results":"410","hashOfConfig":"293"},{"size":222,"mtime":1617406601321,"results":"411","hashOfConfig":"293"},{"size":1608,"mtime":1617406601241,"results":"412","hashOfConfig":"293"},{"size":2194,"mtime":1617406598985,"results":"413","hashOfConfig":"293"},{"size":3424,"mtime":1617690901610,"results":"414","hashOfConfig":"293"},{"size":168,"mtime":1617406599645,"results":"415","hashOfConfig":"293"},{"size":8483,"mtime":1617690901610,"results":"416","hashOfConfig":"293"},{"size":571,"mtime":1617583000710,"results":"417","hashOfConfig":"293"},{"size":4436,"mtime":1617690901610,"results":"418","hashOfConfig":"293"},{"size":1532,"mtime":1617690901610,"results":"419","hashOfConfig":"293"},{"size":328,"mtime":1617690901610,"results":"420","hashOfConfig":"293"},{"size":1778,"mtime":1617406600381,"results":"421","hashOfConfig":"293"},{"size":1265,"mtime":1617690901610,"results":"422","hashOfConfig":"293"},{"size":2239,"mtime":1617690901610,"results":"423","hashOfConfig":"293"},{"size":2830,"mtime":1617406599441,"results":"424","hashOfConfig":"293"},{"size":1061,"mtime":1617690901610,"results":"425","hashOfConfig":"293"},{"size":687,"mtime":1617690901610,"results":"426","hashOfConfig":"293"},{"size":2433,"mtime":1617690901610,"results":"427","hashOfConfig":"293"},{"size":4159,"mtime":1617690901610,"results":"428","hashOfConfig":"293"},{"size":3181,"mtime":1617690901610,"results":"429","hashOfConfig":"293"},{"size":4043,"mtime":1617690901610,"results":"430","hashOfConfig":"293"},{"size":890,"mtime":1617690901610,"results":"431","hashOfConfig":"293"},{"size":2917,"mtime":1617690901610,"results":"432","hashOfConfig":"293"},{"size":916,"mtime":1617690901610,"results":"433","hashOfConfig":"293"},{"size":1218,"mtime":1617690901610,"results":"434","hashOfConfig":"293"},{"size":1438,"mtime":1617690901610,"results":"435","hashOfConfig":"293"},{"size":2780,"mtime":1617690901610,"results":"436","hashOfConfig":"293"},{"size":4122,"mtime":1617690901610,"results":"437","hashOfConfig":"293"},{"size":995,"mtime":1617690901610,"results":"438","hashOfConfig":"293"},{"size":691,"mtime":1617406599985,"results":"439","hashOfConfig":"293"},{"size":2266,"mtime":1617690901610,"results":"440","hashOfConfig":"293"},{"size":493,"mtime":1617690901610,"results":"441","hashOfConfig":"293"},{"size":1819,"mtime":1617406599949,"results":"442","hashOfConfig":"293"},{"size":2605,"mtime":1617690901610,"results":"443","hashOfConfig":"293"},{"size":5485,"mtime":1617690901610,"results":"444","hashOfConfig":"293"},{"size":4810,"mtime":1617690901610,"results":"445","hashOfConfig":"293"},{"size":615,"mtime":1617406598721,"results":"446","hashOfConfig":"293"},{"size":1134,"mtime":1617690901610,"results":"447","hashOfConfig":"293"},{"size":787,"mtime":1617406599577,"results":"448","hashOfConfig":"293"},{"size":75,"mtime":1617406598741,"results":"449","hashOfConfig":"293"},{"size":3144,"mtime":1617406599081,"results":"450","hashOfConfig":"293"},{"size":460,"mtime":1617673442300,"results":"451","hashOfConfig":"293"},{"size":2304,"mtime":1617673442300,"results":"452","hashOfConfig":"293"},{"size":628,"mtime":1617663256961,"results":"453","hashOfConfig":"293"},{"size":1427,"mtime":1617515156401,"results":"454","hashOfConfig":"293"},{"size":52,"mtime":1617406598493,"results":"455","hashOfConfig":"293"},{"size":734,"mtime":1617406599181,"results":"456","hashOfConfig":"293"},{"size":2322,"mtime":1617406598925,"results":"457","hashOfConfig":"293"},{"size":3071,"mtime":1617406599041,"results":"458","hashOfConfig":"293"},{"size":219,"mtime":1617406601321,"results":"459","hashOfConfig":"293"},{"size":828,"mtime":1617690901610,"results":"460","hashOfConfig":"293"},{"size":2902,"mtime":1617690901610,"results":"461","hashOfConfig":"293"},{"size":582,"mtime":1617690901610,"results":"462","hashOfConfig":"293"},{"size":1950,"mtime":1617690901610,"results":"463","hashOfConfig":"293"},{"size":2319,"mtime":1617690901610,"results":"464","hashOfConfig":"293"},{"size":2311,"mtime":1617690901610,"results":"465","hashOfConfig":"293"},{"size":614,"mtime":1617690901610,"results":"466","hashOfConfig":"293"},{"size":247,"mtime":1617406601117,"results":"467","hashOfConfig":"293"},{"size":1251,"mtime":1617406600117,"results":"468","hashOfConfig":"293"},{"size":4594,"mtime":1617690901610,"results":"469","hashOfConfig":"293"},{"size":2216,"mtime":1617690901610,"results":"470","hashOfConfig":"293"},{"size":274,"mtime":1617690901610,"results":"471","hashOfConfig":"293"},{"size":1913,"mtime":1617690901610,"results":"472","hashOfConfig":"293"},{"size":2151,"mtime":1617406598809,"results":"473","hashOfConfig":"293"},{"size":2600,"mtime":1617673442300,"results":"474","hashOfConfig":"293"},{"size":1011,"mtime":1617690901610,"results":"475","hashOfConfig":"293"},{"size":419,"mtime":1617406599093,"results":"476","hashOfConfig":"293"},{"size":1293,"mtime":1617406599489,"results":"477","hashOfConfig":"293"},{"size":1237,"mtime":1617406599533,"results":"478","hashOfConfig":"293"},{"size":1998,"mtime":1617406599089,"results":"479","hashOfConfig":"293"},{"size":2000,"mtime":1617406599173,"results":"480","hashOfConfig":"293"},{"size":1391,"mtime":1617406599025,"results":"481","hashOfConfig":"293"},{"size":4355,"mtime":1617406598945,"results":"482","hashOfConfig":"293"},{"size":1147,"mtime":1617406599937,"results":"483","hashOfConfig":"293"},{"size":4546,"mtime":1617406599485,"results":"484","hashOfConfig":"293"},{"size":1828,"mtime":1617406599165,"results":"485","hashOfConfig":"293"},{"size":1324,"mtime":1617673442300,"results":"486","hashOfConfig":"293"},{"size":1665,"mtime":1617406599125,"results":"487","hashOfConfig":"293"},{"size":39,"mtime":1617406598565,"results":"488","hashOfConfig":"293"},{"size":41,"mtime":1617406598553,"results":"489","hashOfConfig":"293"},{"size":2805,"mtime":1617690901610,"results":"490","hashOfConfig":"293"},{"size":744,"mtime":1617406598561,"results":"491","hashOfConfig":"293"},{"size":35,"mtime":1617406598613,"results":"492","hashOfConfig":"293"},{"size":686,"mtime":1617406598625,"results":"493","hashOfConfig":"293"},{"size":291,"mtime":1617690901610,"results":"494","hashOfConfig":"293"},{"size":4527,"mtime":1617690901610,"results":"495","hashOfConfig":"293"},{"size":2343,"mtime":1617690901610,"results":"496","hashOfConfig":"293"},{"size":511,"mtime":1617690901610,"results":"497","hashOfConfig":"293"},{"size":10274,"mtime":1617690901610,"results":"498","hashOfConfig":"293"},{"size":2661,"mtime":1617406599065,"results":"499","hashOfConfig":"293"},{"size":1182,"mtime":1617690901610,"results":"500","hashOfConfig":"293"},{"size":349,"mtime":1617690901610,"results":"501","hashOfConfig":"293"},{"size":840,"mtime":1617690901610,"results":"502","hashOfConfig":"293"},{"size":3458,"mtime":1617690901610,"results":"503","hashOfConfig":"293"},{"size":614,"mtime":1617406600329,"results":"504","hashOfConfig":"293"},{"size":1789,"mtime":1617690901610,"results":"505","hashOfConfig":"293"},{"size":185,"mtime":1617406600525,"results":"506","hashOfConfig":"293"},{"size":1866,"mtime":1617690901610,"results":"507","hashOfConfig":"293"},{"size":5342,"mtime":1617690901610,"results":"508","hashOfConfig":"293"},{"size":3083,"mtime":1617406600993,"results":"509","hashOfConfig":"293"},{"size":842,"mtime":1617406600997,"results":"510","hashOfConfig":"293"},{"size":677,"mtime":1617406600909,"results":"511","hashOfConfig":"293"},{"size":344,"mtime":1617406600941,"results":"512","hashOfConfig":"293"},{"size":1999,"mtime":1617690901610,"results":"513","hashOfConfig":"293"},{"size":1996,"mtime":1617690901610,"results":"514","hashOfConfig":"293"},{"size":2061,"mtime":1617690901610,"results":"515","hashOfConfig":"293"},{"size":504,"mtime":1617690901610,"results":"516","hashOfConfig":"293"},{"size":7680,"mtime":1617406599573,"results":"517","hashOfConfig":"293"},{"size":321,"mtime":1617406598861,"results":"518","hashOfConfig":"293"},{"size":1250,"mtime":1617690901610,"results":"519","hashOfConfig":"293"},{"size":7126,"mtime":1617690901610,"results":"520","hashOfConfig":"293"},{"size":896,"mtime":1617690901610,"results":"521","hashOfConfig":"293"},{"size":3878,"mtime":1617406599365,"results":"522","hashOfConfig":"293"},{"size":2070,"mtime":1617520105925,"results":"523","hashOfConfig":"293"},{"size":2389,"mtime":1617690901610,"results":"524","hashOfConfig":"293"},{"size":1618,"mtime":1617690901610,"results":"525","hashOfConfig":"293"},{"size":2371,"mtime":1617690901610,"results":"526","hashOfConfig":"293"},{"size":925,"mtime":1617690901610,"results":"527","hashOfConfig":"293"},{"size":2708,"mtime":1617690901610,"results":"528","hashOfConfig":"293"},{"size":1948,"mtime":1617690901610,"results":"529","hashOfConfig":"293"},{"size":1458,"mtime":1617406598909,"results":"530","hashOfConfig":"293"},{"size":1014,"mtime":1617690901610,"results":"531","hashOfConfig":"293"},{"size":2809,"mtime":1617690901610,"results":"532","hashOfConfig":"293"},{"size":909,"mtime":1617690901610,"results":"533","hashOfConfig":"293"},{"size":2793,"mtime":1617690901610,"results":"534","hashOfConfig":"293"},{"size":3232,"mtime":1617406599141,"results":"535","hashOfConfig":"293"},{"size":3070,"mtime":1617690901610,"results":"536","hashOfConfig":"293"},{"size":2309,"mtime":1617690901610,"results":"537","hashOfConfig":"293"},{"size":3386,"mtime":1617515156401,"results":"538","hashOfConfig":"293"},{"size":2345,"mtime":1617515156401,"results":"539","hashOfConfig":"293"},{"size":3339,"mtime":1617520105925,"results":"540","hashOfConfig":"293"},{"size":1098,"mtime":1617690901610,"results":"541","hashOfConfig":"293"},{"size":2279,"mtime":1617406599329,"results":"542","hashOfConfig":"293"},{"size":2579,"mtime":1617406600865,"results":"543","hashOfConfig":"293"},{"size":1008,"mtime":1617690901610,"results":"544","hashOfConfig":"293"},{"size":1131,"mtime":1617690901610,"results":"545","hashOfConfig":"293"},{"size":1195,"mtime":1617690901610,"results":"546","hashOfConfig":"293"},{"size":34,"mtime":1617406598497,"results":"547","hashOfConfig":"293"},{"size":97,"mtime":1617406598453,"results":"548","hashOfConfig":"293"},{"size":671,"mtime":1617406600553,"results":"549","hashOfConfig":"293"},{"size":548,"mtime":1617690901610,"results":"550","hashOfConfig":"293"},{"size":2123,"mtime":1617690901610,"results":"551","hashOfConfig":"293"},{"size":810,"mtime":1617406599021,"results":"552","hashOfConfig":"293"},{"size":60,"mtime":1617406600593,"results":"553","hashOfConfig":"293"},{"size":428,"mtime":1617406599157,"results":"554","hashOfConfig":"293"},{"size":1309,"mtime":1617515156401,"results":"555","hashOfConfig":"293"},{"size":3662,"mtime":1617690901610,"results":"556","hashOfConfig":"293"},{"size":2558,"mtime":1617690901610,"results":"557","hashOfConfig":"293"},{"size":1285,"mtime":1617690901610,"results":"558","hashOfConfig":"293"},{"size":2718,"mtime":1617690901610,"results":"559","hashOfConfig":"293"},{"size":310,"mtime":1617406600209,"results":"560","hashOfConfig":"293"},{"size":39,"mtime":1617406598685,"results":"561","hashOfConfig":"293"},{"size":460,"mtime":1617406598509,"results":"562","hashOfConfig":"293"},{"size":1192,"mtime":1617406599045,"results":"563","hashOfConfig":"293"},{"size":822,"mtime":1617406599521,"results":"564","hashOfConfig":"293"},{"size":1708,"mtime":1617690901610,"results":"565","hashOfConfig":"293"},{"size":2368,"mtime":1617690901610,"results":"566","hashOfConfig":"293"},{"size":303,"mtime":1617690901610,"results":"567","hashOfConfig":"293"},{"size":956,"mtime":1617559062240,"results":"568","hashOfConfig":"293"},{"size":934,"mtime":1617515156401,"results":"569","hashOfConfig":"293"},{"size":1312,"mtime":1617690901610,"results":"570","hashOfConfig":"293"},{"size":1993,"mtime":1617690901610,"results":"571","hashOfConfig":"293"},{"size":4405,"mtime":1617690901610,"results":"572","hashOfConfig":"293"},{"size":1228,"mtime":1617690901610,"results":"573","hashOfConfig":"293"},{"size":496,"mtime":1617690901610,"results":"574","hashOfConfig":"293"},{"size":1574,"mtime":1617690901610,"results":"575","hashOfConfig":"293"},{"size":897,"mtime":1617690901610,"results":"576","hashOfConfig":"293"},{"size":1546,"mtime":1617406598969,"results":"577","hashOfConfig":"293"},{"size":698,"mtime":1617406598913,"results":"578","hashOfConfig":"293"},{"size":344,"mtime":1617406600869,"results":"579","hashOfConfig":"293"},{"size":40,"mtime":1617406598657,"results":"580","hashOfConfig":"293"},{"size":1719,"mtime":1617690901610,"results":"581","hashOfConfig":"293"},{"size":1325,"mtime":1617690901610,"results":"582","hashOfConfig":"293"},{"size":1452,"mtime":1617582023312,"results":"583","hashOfConfig":"293"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},"122nled",{"filePath":"587","messages":"588","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589"},{"filePath":"590","messages":"591","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"601","messages":"602","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603"},{"filePath":"604","messages":"605","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606"},{"filePath":"607","messages":"608","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609"},{"filePath":"610","messages":"611","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},{"filePath":"613","messages":"614","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"626","messages":"627","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628"},{"filePath":"629","messages":"630","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631"},{"filePath":"632","messages":"633","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634"},{"filePath":"635","messages":"636","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637"},{"filePath":"638","messages":"639","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"647","messages":"648","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"656","messages":"657","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"661","messages":"662","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663"},{"filePath":"664","messages":"665","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"675","messages":"676","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677"},{"filePath":"678","messages":"679","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680"},{"filePath":"681","messages":"682","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683"},{"filePath":"684","messages":"685","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686"},{"filePath":"687","messages":"688","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689"},{"filePath":"690","messages":"691","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"697","messages":"698","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699"},{"filePath":"700","messages":"701","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702"},{"filePath":"703","messages":"704","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"708","messages":"709","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"713","messages":"714","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715"},{"filePath":"716","messages":"717","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"721","messages":"722","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723"},{"filePath":"724","messages":"725","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"733","messages":"734","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"752","messages":"753","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"757","messages":"758","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759"},{"filePath":"760","messages":"761","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762"},{"filePath":"763","messages":"764","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765"},{"filePath":"766","messages":"767","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"768"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"771","messages":"772","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"776","messages":"777","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778"},{"filePath":"779","messages":"780","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"784","messages":"785","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"789","messages":"790","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791"},{"filePath":"792","messages":"793","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794"},{"filePath":"795","messages":"796","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797"},{"filePath":"798","messages":"799","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800"},{"filePath":"801","messages":"802","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803"},{"filePath":"804","messages":"805","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806"},{"filePath":"807","messages":"808","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"822","messages":"823","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824"},{"filePath":"825","messages":"826","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827"},{"filePath":"828","messages":"829","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"833","messages":"834","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835"},{"filePath":"836","messages":"837","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"838"},{"filePath":"839","messages":"840","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"841"},{"filePath":"842","messages":"843","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844"},{"filePath":"845","messages":"846","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847"},{"filePath":"848","messages":"849","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"853","messages":"854","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855"},{"filePath":"856","messages":"857","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858"},{"filePath":"859","messages":"860","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861"},{"filePath":"862","messages":"863","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864"},{"filePath":"865","messages":"866","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"870","messages":"871","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"881","messages":"882","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"890","messages":"891","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"895","messages":"896","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"900","messages":"901","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902"},{"filePath":"903","messages":"904","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905"},{"filePath":"906","messages":"907","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"911","messages":"912","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913"},{"filePath":"914","messages":"915","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"919","messages":"920","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921"},{"filePath":"922","messages":"923","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924"},{"filePath":"925","messages":"926","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927"},{"filePath":"928","messages":"929","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930"},{"filePath":"931","messages":"932","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933"},{"filePath":"934","messages":"935","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936"},{"filePath":"937","messages":"938","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939"},{"filePath":"940","messages":"941","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942"},{"filePath":"943","messages":"944","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945"},{"filePath":"946","messages":"947","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948"},{"filePath":"949","messages":"950","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951"},{"filePath":"952","messages":"953","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954"},{"filePath":"955","messages":"956","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957"},{"filePath":"958","messages":"959","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"963","messages":"964","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965"},{"filePath":"966","messages":"967","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"971","messages":"972","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"973"},{"filePath":"974","messages":"975","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976"},{"filePath":"977","messages":"978","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"982","messages":"983","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1009","messages":"1010","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011"},{"filePath":"1012","messages":"1013","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014"},{"filePath":"1015","messages":"1016","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017"},{"filePath":"1018","messages":"1019","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020"},{"filePath":"1021","messages":"1022","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023"},{"filePath":"1024","messages":"1025","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026"},{"filePath":"1027","messages":"1028","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1034","messages":"1035","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1036"},{"filePath":"1037","messages":"1038","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039"},{"filePath":"1040","messages":"1041","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1042"},{"filePath":"1043","messages":"1044","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1050","messages":"1051","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1052"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1081","messages":"1082","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1083"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1090","messages":"1091","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1092"},{"filePath":"1093","messages":"1094","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1095"},{"filePath":"1096","messages":"1097","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098"},{"filePath":"1099","messages":"1100","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1101"},{"filePath":"1102","messages":"1103","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1107","messages":"1108","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1109"},{"filePath":"1110","messages":"1111","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1112"},{"filePath":"1113","messages":"1114","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1115"},{"filePath":"1116","messages":"1117","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1121","messages":"1122","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1126","messages":"1127","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128"},{"filePath":"1129","messages":"1130","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1131"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1140","messages":"1141","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142"},{"filePath":"1143","messages":"1144","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145"},{"filePath":"1146","messages":"1147","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148"},{"filePath":"1149","messages":"1150","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1156","messages":"1157","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158"},{"filePath":"1159","messages":"1160","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1161"},{"filePath":"1162","messages":"1163","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1164"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1169","usedDeprecatedRules":"586"},{"filePath":"1170","messages":"1171","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1172"},{"filePath":"1173","messages":"1174","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1175"},{"filePath":"1176","messages":"1177","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1178"},{"filePath":"1179","messages":"1180","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1181"},{"filePath":"1182","messages":"1183","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1184"},{"filePath":"1185","messages":"1186","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1187"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1190","messages":"1191","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192"},{"filePath":"1193","messages":"1194","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195"},{"filePath":"1196","messages":"1197","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198"},{"filePath":"1199","messages":"1200","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1201"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1204","messages":"1205","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1206"},{"filePath":"1207","messages":"1208","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1209"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1216","usedDeprecatedRules":"586"},{"filePath":"1217","messages":"1218","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1224","messages":"1225","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1226"},{"filePath":"1227","messages":"1228","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229"},{"filePath":"1230","messages":"1231","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1239","messages":"1240","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241"},{"filePath":"1242","messages":"1243","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1253","messages":"1254","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255"},{"filePath":"1256","messages":"1257","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258"},{"filePath":"1259","messages":"1260","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261"},{"filePath":"1262","messages":"1263","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1264"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1275","messages":"1276","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1277"},{"filePath":"1278","messages":"1279","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1280"},{"filePath":"1281","messages":"1282","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1288","messages":"1289","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290"},{"filePath":"1291","messages":"1292","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293"},{"filePath":"1294","messages":"1295","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296"},{"filePath":"1297","messages":"1298","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299"},{"filePath":"1300","messages":"1301","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302"},{"filePath":"1303","messages":"1304","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305"},{"filePath":"1306","messages":"1307","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1308"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"1317","messages":"1318","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319"},{"filePath":"1320","messages":"1321","errorCount":1,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},"/home/drab/Documents/jazzdefi/src/index.tsx",[],["1325","1326","1327","1328","1329"],"/home/drab/Documents/jazzdefi/src/Providers.tsx",["1330"],"import React from 'react'\nimport { ModalProvider } from '@jazzdefi/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ThemeContextProvider>\n          <LanguageContextProvider>\n            <RefreshContextProvider>\n              <ModalProvider>{children}</ModalProvider>\n            </RefreshContextProvider>\n          </LanguageContextProvider>\n        </ThemeContextProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","/home/drab/Documents/jazzdefi/src/App.tsx",["1331","1332","1333","1334","1335","1336","1337","1338"],"import React, { useEffect, lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@jazzdefi/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n  useGetDocumentTitlePrice()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <GlobalCheckBullHiccupClaimStatus />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","/home/drab/Documents/jazzdefi/src/routerHistory.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useGetDocumentTitlePrice.ts",[],"/home/drab/Documents/jazzdefi/src/style/Global.tsx",[],"/home/drab/Documents/jazzdefi/src/components/PageLoader.tsx",[],"/home/drab/Documents/jazzdefi/src/views/NotFound.tsx",["1339"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Text, LogoIcon } from '@jazzdefi/uikit'\nimport Page from 'components/layout/Page'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`\n\nconst NotFound = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Heading size=\"xxl\">404</Heading>\n        <Text mb=\"16px\">{TranslateString(1122, 'Oops, page not found.')}</Text>\n        <Button as=\"a\" href=\"/\" scale=\"sm\">\n          {TranslateString(1124, 'Back Home')}\n        </Button>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default NotFound\n","/home/drab/Documents/jazzdefi/src/views/Teams/Team.tsx",["1340"],"import React from 'react'\nimport Page from 'components/layout/Page'\nimport { Link, Redirect, useParams } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text } from '@jazzdefi/uikit'\nimport PageLoader from 'components/PageLoader'\nimport teams from 'config/constants/teams'\nimport useI18n from 'hooks/useI18n'\nimport { useTeam } from 'state/hooks'\nimport TeamCard from './components/TeamCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Team = () => {\n  const { id: idStr }: { id: string } = useParams()\n  const id = Number(idStr)\n  const TranslateString = useI18n()\n  const isValidTeamId = teams.findIndex((team) => team.id === id) !== -1\n  const team = useTeam(id)\n\n  if (!isValidTeamId) {\n    return <Redirect to=\"/404\" />\n  }\n\n  if (!team) {\n    return <PageLoader />\n  }\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex mb=\"24px\">\n        <Link to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </Link>\n      </Flex>\n      <TeamCard team={team} />\n    </Page>\n  )\n}\n\nexport default Team\n","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx",["1341"],"import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@jazzdefi/uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n","/home/drab/Documents/jazzdefi/src/hooks/useEagerConnect.ts",["1342"],"import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@jazzdefi/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","/home/drab/Documents/jazzdefi/src/state/hooks.ts",["1343"],"import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { Toast, toastTypes } from '@jazzdefi/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport { getBalanceNumber } from '../utils/formatBalance'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description,\n        })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description,\n        })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description,\n        })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description,\n        })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading,\n  }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[token.toLowerCase()]\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const ZERO = new BigNumber(0)\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdFarm = useFarmFromPid(5)\n\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\n\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\nexport const usePoolsEx = (): Pool[] => {\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const prices = useGetApiPrices()\n  const farms = useFarms()\n  const pools = usePoolsEx()\n\n  let value = new BigNumber(0)\n  if (prices) {\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i]\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n      value = value.plus(totalLiquidity)\n    }\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i]\n      const quoteTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()]\n      const totalLiquidity = new BigNumber(getBalanceNumber(pool.totalStaked, pool.stakingToken.decimals)).times(\n        quoteTokenPriceUsd,\n      )\n      value = value.plus(totalLiquidity)\n    }\n  }\n  return value\n}\n","/home/drab/Documents/jazzdefi/src/views/Home/index.ts",[],"/home/drab/Documents/jazzdefi/src/components/EasterEgg/index.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/index.ts",[],"/home/drab/Documents/jazzdefi/src/views/Farms/index.ts",[],"/home/drab/Documents/jazzdefi/src/views/Pools/index.ts",[],"/home/drab/Documents/jazzdefi/src/utils/web3React.ts",["1344"],"import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@jazzdefi/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","/home/drab/Documents/jazzdefi/src/views/Collectibles/index.tsx",["1345"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport NftList from './components/NftList'\n\nconst StyledHero = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 32px;\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <StyledHero>\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\">\n          {TranslateString(999, 'Pancake Collectibles')}\n        </Heading>\n      </StyledHero>\n      <NftList />\n    </Page>\n  )\n}\n\nexport default Collectibles\n","/home/drab/Documents/jazzdefi/src/views/Teams/index.tsx",["1346"],"import React from 'react'\nimport { AutoRenewIcon, Flex, Heading } from '@jazzdefi/uikit'\nimport orderBy from 'lodash/orderBy'\nimport { useTeams } from 'state/hooks'\nimport Page from 'components/layout/Page'\nimport useI18n from 'hooks/useI18n'\nimport TeamListCard from './components/TeamListCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Teams = () => {\n  const TranslateString = useI18n()\n  const { teams, isLoading } = useTeams()\n  const teamList = Object.values(teams)\n  const topTeams = orderBy(teamList, ['points', 'id', 'name'], ['desc', 'asc', 'asc'])\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\n        <Heading size=\"xl\">{TranslateString(1040, 'Teams')}</Heading>\n        {isLoading && <AutoRenewIcon spin />}\n      </Flex>\n      {topTeams.map((team, index) => (\n        <TeamListCard key={team.id} rank={index + 1} team={team} />\n      ))}\n    </Page>\n  )\n}\n\nexport default Teams\n","/home/drab/Documents/jazzdefi/src/components/Menu/index.tsx",["1347","1348"],"import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","/home/drab/Documents/jazzdefi/src/components/ToastListener/index.tsx",["1349"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@jazzdefi/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","/home/drab/Documents/jazzdefi/src/components/SuspenseWithChunkError/index.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Ifos/index.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Profile/index.tsx",[],"/home/drab/Documents/jazzdefi/src/contexts/ThemeContext.tsx",["1350"],"import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@jazzdefi/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({\n  isDark: null,\n  toggleTheme: () => null,\n})\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","/home/drab/Documents/jazzdefi/src/contexts/RefreshContext.tsx",[],"/home/drab/Documents/jazzdefi/src/contexts/Localisation/languageContext.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts",[],"/home/drab/Documents/jazzdefi/src/views/Collectibles/components/ClaimBullHiccupNftModal.tsx",["1351"],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@jazzdefi/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport useI18n from 'hooks/useI18n'\nimport confetti from 'canvas-confetti'\nimport nftList from 'config/constants/nfts'\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\n\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\n  isBullClaimable: boolean\n  isHiccupClaimable: boolean\n}\n\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  margin-bottom: 24px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\n  if (isBullClaimable && isHiccupClaimable) {\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\n  }\n\n  if (isBullClaimable) {\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n  }\n\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n}\n\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\n  isBullClaimable,\n  isHiccupClaimable,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const collectibleMessage =\n    isBullClaimable && isHiccupClaimable\n      ? TranslateString(999, 'You won two Collectibles!')\n      : TranslateString(999, 'You won a collectible!')\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {collectibleMessage}\n        </Text>\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimBullHiccupNftModal\n","/home/drab/Documents/jazzdefi/src/components/layout/Page.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Teams/components/TeamCard.tsx",["1352"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text } from '@jazzdefi/uikit'\nimport { Team } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport ComingSoon from 'views/Profile/components/ComingSoon'\nimport StatBox from 'views/Profile/components/StatBox'\n\ninterface TeamCardProps {\n  team: Team\n}\n\nconst Wrapper = styled.div`\n  padding-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 24px;\n  }\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  height: 64px;\n  margin-top: -12px;\n  width: 64px;\n  border: solid 2px white;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 128px;\n    margin-top: -24px;\n    width: 128px;\n  }\n`\n\nconst AvatarWrap = styled.div`\n  margin-bottom: 8px;\n  text-align: center;\n`\n\nconst StyledCard = styled(Card)`\n  overflow: visible;\n`\n\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\n  position: relative;\n  background: url(${({ bg }) => bg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  border-radius: 16px 16px 0 0;\n  padding-top: 0;\n  text-align: center;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst StatRow = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 32px;\n  }\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ team }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <StyledCard>\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\n          <AvatarWrap>\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n          </AvatarWrap>\n          <TeamName color={team.textColor}>{team.name}</TeamName>\n          <Text as=\"p\" color={team.textColor}>\n            {team.description}\n          </Text>\n        </StyledCardHeader>\n        <CardBody>\n          <StatRow>\n            <StatBox icon={CommunityIcon} title={team.users} subtitle={TranslateString(1048, 'Active Members')} />\n            <StatBox\n              icon={PrizeIcon}\n              title={TranslateString(350, 'Coming Soon')}\n              subtitle={TranslateString(1046, 'Team Points')}\n              isDisabled\n            />\n          </StatRow>\n          <Heading as=\"h3\">{TranslateString(1044, 'Team Achievements')}</Heading>\n          <ComingSoon />\n        </CardBody>\n      </StyledCard>\n    </Wrapper>\n  )\n}\n\nexport default TeamCard\n","/home/drab/Documents/jazzdefi/src/views/Teams/components/TeamHeader.tsx",["1353"],"import React from 'react'\nimport { Heading, Text } from '@jazzdefi/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\nimport NoProfileCard from './NoProfileCard'\n\nconst TeamHeader = () => {\n  const TranslateString = useI18n()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\">\n          {TranslateString(1082, 'Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {TranslateString(\n            999,\n            'Show off your stats and collectibles with your unique profile. Team features will be revealed soon!',\n          )}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n","/home/drab/Documents/jazzdefi/src/state/index.ts",[],"/home/drab/Documents/jazzdefi/src/state/actions.ts",[],"/home/drab/Documents/jazzdefi/src/utils/formatBalance.ts",[],"/home/drab/Documents/jazzdefi/src/utils/getRpcUrl.ts",[],"/home/drab/Documents/jazzdefi/src/components/Menu/config.ts",["1354"],"import { MenuEntry } from '@jazzdefi/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://www.exchange.jazzdefi.com',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://www.exchange.jazzdefi.com/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Duets',\n    icon: 'DuetsIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Solos',\n    icon: 'SolosIcon',\n    href: '/pools',\n  },\n]\n\nexport default config\n","/home/drab/Documents/jazzdefi/src/views/Home/Home.tsx",["1355","1356"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPYCard from 'views/Home/components/EarnAPYCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport TwitterCard from 'views/Home/components/TwitterCard'\nimport WinCard from 'views/Home/components/WinCard'\n\nconst Hero = styled.div`\n  background-repeat: no-repeat;\n  background-position: left 80% center;\n  justify-content: space-evenly;\n  flex-direction: column;\n  margin: auto;\n  margin-top: 10px;\n  margin-left: 24px;\n  margin-right: 5rem;\n  margin-bottom: 64px;\n  padding-top: 116px;\n  text-align: left;\n  height: 100px;\n  padding-top: 0;\n  background-size: contain;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-position: right 40% center;\n    align-items: space-around;\n    margin-right: 10rem;\n    background-size: 50%;\n    height: 100px;\n    padding-top: 0;\n    background-size: contain;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\nconst HeroAll = styled.div`\n  display: inline-flex;\n  align-items: flex-start;\n  text-align: left;\n  ${({ theme }) => theme.mediaQueries.lg} {\n  }\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <HeroAll>\n        <Hero>\n          <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"text\" fontSize=\"80px\">\n            {TranslateString(576, 'Jazz ')}\n            <span style={{ fontWeight: 'normal' }}>{TranslateString(1576, 'DeFi')}</span>\n          </Heading>\n          <Text>\n            {TranslateString(578, \"The DeFi project that's \")}{' '}\n            <em style={{ fontWeight: 500 }}>{TranslateString(1578, 'smooth')}</em>\n          </Text>\n        </Hero>\n        <object style={{ float: 'right' }} width=\"128px\" type=\"image/svg+xml\" data=\"images/saxophone-animated.svg\">\n          <img alt=\"saxophone\" src=\"images/saxophone-animated.svg\" />\n        </object>\n      </HeroAll>\n      <div>\n        <Cards>\n          <FarmStakingCard />\n          <TwitterCard />\n        </Cards>\n        <CTACards>\n          <EarnAPYCard />\n          <EarnAssetCard />\n        </CTACards>\n        <Cards>\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","/home/drab/Documents/jazzdefi/src/components/EasterEgg/EasterEgg.tsx",["1357"],"import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@jazzdefi/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","/home/drab/Documents/jazzdefi/src/views/Lottery/Lottery.tsx",["1358"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@jazzdefi/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{\n            historyError,\n            historyData,\n            mostRecentLotteryNumber,\n            currentLotteryNumber,\n          }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n","/home/drab/Documents/jazzdefi/src/views/Pools/Syrup.tsx",["1359","1360"],"import React, { useState, useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading } from '@jazzdefi/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { currentBlock } = useBlock()\n  const [stackedOnly, setStackedOnly] = useState(false)\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || currentBlock > pool.endBlock),\n    [currentBlock, pools],\n  )\n  const stackedOnlyPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(738, 'JAZZ Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake JAZZ to earn new tokens.')}</li>\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <object type=\"image/svg+xml\" width={256} height={256} data=\"/images/saxophone-pool-full.svg\">\n          <img src=\"images/saxophone-pool-full.svg\" alt=\"JAZZ saxophone\" />\n        </object>\n      </Hero>\n      <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stackedOnly\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","/home/drab/Documents/jazzdefi/src/views/Farms/Farms.tsx",["1361"],"import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from '@jazzdefi/uikit'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { Farm } from 'state/types'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApy } from 'utils/apy'\nimport { orderBy } from 'lodash'\n\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport Select, { OptionProps } from './components/Select/Select'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: ${({ theme }) => theme.colors.gradients.gold};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE)\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const prices = useGetApiPrices()\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stackedOnly, setStackedOnly] = useState(false)\n  const isActive = !pathname.includes('history')\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  const stackedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stackedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, (farm: FarmWithStakedValue) => farm.apy, 'desc')\n      case 'multiplier':\n        return orderBy(\n          farms,\n          (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\n      case 'liquidity':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n      default:\n        return farms\n    }\n  }\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !prices) {\n          return farm\n        }\n\n        const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n        const apy = isActive ? getFarmApy(farm.poolWeight, cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apy, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase()\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\n          return farm.lpSymbol.toLowerCase().includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPY\n    },\n    [cakePrice, prices, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  let farmsStaked = []\n  if (isActive) {\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\n  } else {\n    farmsStaked = stackedOnly ? farmsList(stackedInactiveFarms) : farmsList(inactiveFarms)\n  }\n\n  farmsStaked = sortFarms(farmsStaked)\n\n  const rowData = farmsStaked.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apy,\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n        depositFeeBP: farm.depositFeeBP,\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Header>\n        <Heading as=\"h1\" size=\"xxl\" color=\"#ffffff\" mb=\"24px\">\n          {TranslateString(999, 'Farms')}\n        </Heading>\n        <Heading size=\"lg\" color=\"text\">\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\n        </Heading>\n      </Header>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} scale=\"sm\" />\n              <Text> {TranslateString(1116, 'Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text>SORT BY</Text>\n              <Select\n                options={[\n                  {\n                    label: 'Hot',\n                    value: 'hot',\n                  },\n                  {\n                    label: 'APR',\n                    value: 'apr',\n                  },\n                  {\n                    label: 'Multiplier',\n                    value: 'multiplier',\n                  },\n                  {\n                    label: 'Earned',\n                    value: 'earned',\n                  },\n                  {\n                    label: 'Liquidity',\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text>SEARCH</Text>\n              <SearchInput onChange={handleChangeQuery} value={query} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <StyledImage src=\"/images/music.png\" alt=\"Music notes\" width={300} height={300} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","/home/drab/Documents/jazzdefi/src/hooks/useI18n.ts",[],"/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftList.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Teams/components/TeamListCard.tsx",["1362"],"import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Button, Card, CommunityIcon, Flex, Heading, PrizeIcon, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { Team } from 'config/constants/types'\n\ninterface TeamCardProps {\n  rank: number\n  team: Team\n}\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst TeamRank = styled.div`\n  align-self: stretch;\n  background: ${({ theme }) => getBackground(theme)};\n  flex: none;\n  padding: 16px 0;\n  text-align: center;\n  width: 56px;\n`\n\nconst Body = styled.div`\n  align-items: start;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n    font-size: 40px;\n  }\n`\n\nconst Info = styled.div`\n  flex: 1;\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h3' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst MobileAvatar = styled.div`\n  flex: none;\n  margin-right: 8px;\n\n  ${Avatar} {\n    height: 64px;\n    width: 64px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst DesktopAvatar = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n    margin-left: 24px;\n\n    ${Avatar} {\n      height: 128px;\n      width: 128px;\n    }\n  }\n`\n\nconst StyledTeamCard = styled(Card)`\n  display: flex;\n  margin-bottom: 16px;\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ rank, team }) => {\n  const TranslateString = useI18n()\n  const avatar = <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n\n  return (\n    <StyledTeamCard>\n      <TeamRank>\n        <Text bold fontSize=\"24px\">\n          {rank}\n        </Text>\n      </TeamRank>\n      <Body>\n        <Info>\n          <Flex alignItems=\"center\" mb=\"16px\">\n            <MobileAvatar>{avatar}</MobileAvatar>\n            <TeamName>{team.name}</TeamName>\n          </Flex>\n          <Text as=\"p\" color=\"textSubtle\" pr=\"24px\" mb=\"16px\">\n            {team.description}\n          </Text>\n          <Flex>\n            <Flex>\n              {/* alignSelf for Safari fix */}\n              <PrizeIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\n              <Text fontSize=\"24px\" bold>\n                {team.points.toLocaleString()}\n              </Text>\n            </Flex>\n            <Flex ml=\"24px\">\n              {/* alignSelf for Safari fix */}\n              <CommunityIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\n              <Text fontSize=\"24px\" bold>\n                {team.users.toLocaleString()}\n              </Text>\n            </Flex>\n          </Flex>\n        </Info>\n        <Button as={Link} to={`/teams/${team?.id}`} variant=\"secondary\" scale=\"sm\">\n          {TranslateString(1042, 'See More')}\n        </Button>\n        <DesktopAvatar>{avatar}</DesktopAvatar>\n      </Body>\n    </StyledTeamCard>\n  )\n}\n\nexport default TeamCard\n","/home/drab/Documents/jazzdefi/src/views/Profile/PublicProfile.tsx",["1363"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                  </AddressLink>\n                  <OpenNewIcon ml=\"4px\" />\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","/home/drab/Documents/jazzdefi/src/views/Profile/TaskCenter.tsx",["1364"],"import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","/home/drab/Documents/jazzdefi/src/views/Ifos/PastIfo.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Ifos/CurrentIfo.tsx",["1365"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@jazzdefi/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy CAKE and BNB tokens')}</li>\n            <li>{TranslateString(598, 'Get CAKE-BNB LP tokens by adding CAKE and BNB liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\n              {TranslateString(1060, 'Buy CAKE')}\n            </LinkExternal>\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\n              {TranslateString(1062, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, commit your CAKE-LP tokens to buy the IFO tokens')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with PancakeSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","/home/drab/Documents/jazzdefi/src/config/constants/teams.ts",[],"/home/drab/Documents/jazzdefi/src/views/Profile/components/Header.tsx",["1366"],"import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@jazzdefi/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/Hero.tsx",["1367"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@jazzdefi/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #b4b6b8 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IFO: Initial Farm Offerings')}</Title>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","/home/drab/Documents/jazzdefi/src/components/layout/Container.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Teams/components/NoProfileCard.tsx",["1368"],"import React from 'react'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { Link } from 'react-router-dom'\n\nconst NoProfileCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading size=\"lg\" mb=\"8px\">\n              {TranslateString(1052, \"You haven't set up your profile yet!\")}\n            </Heading>\n            <Text>\n              {TranslateString(1054, 'You can do this at any time by clicking on your profile picture in the menu')}\n            </Text>\n          </div>\n          <Button as={Link} to=\"/profile\" mt={['16px', null, 0]}>\n            {TranslateString(1050, 'Set up now')}\n          </Button>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","/home/drab/Documents/jazzdefi/src/hooks/useAuth.ts",["1369"],"import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@jazzdefi/uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError('Provider Error', 'No provider was found')\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError('Authorization Error', 'Please authorize to access your account')\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","/home/drab/Documents/jazzdefi/src/utils/web3.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useRefresh.ts",[],"/home/drab/Documents/jazzdefi/src/state/prices/index.ts",[],"/home/drab/Documents/jazzdefi/src/state/achievements/index.ts",["1370"],"/* eslint-disable no-param-reassign */\nimport { toastTypes } from '@jazzdefi/uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data.concat(action.payload)\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","/home/drab/Documents/jazzdefi/src/hooks/useTheme.ts",[],"/home/drab/Documents/jazzdefi/src/contexts/Localisation/translationsContext.ts",[],"/home/drab/Documents/jazzdefi/src/state/profile/index.tsx",[],"/home/drab/Documents/jazzdefi/src/state/teams/index.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/types.ts",[],"/home/drab/Documents/jazzdefi/src/config/localisation/languageCodes.ts",[],"/home/drab/Documents/jazzdefi/src/utils/contractHelpers.ts",[],"/home/drab/Documents/jazzdefi/src/config/constants/nfts.ts",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/SearchInput.tsx",["1371"],"import React, { useState, useRef } from 'react'\nimport { Input } from '@jazzdefi/uikit'\nimport styled from 'styled-components'\n\nconst StyledInput = styled(Input)`\n  border-radius: 4px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          ref={inputEl}\n          value={value}\n          onChange={onChange}\n          placeholder=\"Search farms\"\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/index.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/Select/Select.tsx",["1372"],"import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@jazzdefi/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 8px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 4px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{\n  isOpen: boolean\n  width: number\n  height: number\n}>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 4px 4px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 4px 4px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 4px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 4px 8px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/ToggleView/ToggleView.tsx",["1373"],"import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@jazzdefi/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToogleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToogleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/FarmTable.tsx",["1374"],"import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n}\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, {\n    sortable: true,\n    sortColumn: 'farm',\n  })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {TranslateString(999, 'To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/FarmCard.tsx",["1375","1376"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@jazzdefi/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider as ProviderType } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\nimport { StyledCardAccent } from '../RainbowLight'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n  liquidity?: BigNumber\n}\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 16px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 16px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.token.symbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValueFormated = farm.liquidity\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'JAZZ'\n\n  const farmAPY = farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const depositFeeColor = farm.depositFeeBP / 100 === 0 ? 'rgb(50, 176, 123)' : '#1a1a1a'\n\n  return (\n    <FCard>\n      {farm.token.symbol === 'JAZZ' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.token.symbol}\n        depositFee={farm.depositFeeBP}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(736, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px', color: depositFeeColor }}>\n          {farm.depositFeeBP / 100}%\n        </Text>\n      </Flex>\n      <CardActionsContainer\n        farm={farm}\n        account={account}\n        addLiquidityUrl={addLiquidityUrl}\n        depositFeeBP={farm.depositFeeBP}\n      />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftGrid.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoTabButtons/index.tsx",["1377"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@jazzdefi/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IFO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IFOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","/home/drab/Documents/jazzdefi/src/views/Pools/components/Divider.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementsList.tsx",["1378"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const TranslateString = useI18n()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {TranslateString(999, 'No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/Menu.tsx",["1379"],"import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@jazzdefi/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCards.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Ifos/components/Title.tsx",["1380"],"import styled from 'styled-components'\nimport { Heading } from '@jazzdefi/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/HeaderWrapper.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Profile/components/ClaimGiftModal.tsx",["1381"],"import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/StatBox.tsx",["1382"],"import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@jazzdefi/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/ComingSoon.tsx",["1383"],"import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/ClaimPointsCallout .tsx",["1384"],"import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useDispatch } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@jazzdefi/uikit'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const TranslateString = useI18n()\n  const dispatch = useDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\n            </Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileAvatar.tsx",["1385"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@jazzdefi/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/WalletNotConnected.tsx",["1386"],"import React from 'react'\nimport { Heading, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/Collectibles.tsx",["1387"],"import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@jazzdefi/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","/home/drab/Documents/jazzdefi/src/state/block/index.ts",[],"/home/drab/Documents/jazzdefi/src/state/achievements/helpers.ts",[],"/home/drab/Documents/jazzdefi/src/state/profile/getProfile.ts",[],"/home/drab/Documents/jazzdefi/src/state/teams/helpers.ts",[],"/home/drab/Documents/jazzdefi/src/utils/apy.ts",[],"/home/drab/Documents/jazzdefi/src/components/layout/Flex.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTabButtons/index.tsx",["1388"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(388, 'Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","/home/drab/Documents/jazzdefi/src/views/Pools/components/PoolTabButtons/index.tsx",["1389"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\n        <Text> {TranslateString(999, 'Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(388, 'Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftCard/index.tsx",["1390"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Text,\n  CardFooter,\n  useModal,\n} from '@jazzdefi/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Nft } from 'config/constants/types'\nimport InfoRow from '../InfoRow'\nimport TransferNftModal from '../TransferNftModal'\nimport ClaimNftModal from '../ClaimNftModal'\nimport Preview from './Preview'\n\ninterface NftCardProps {\n  nft: Nft\n  canClaim?: boolean\n  tokenIds?: number[]\n  onSuccess: () => void\n}\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 24px;\n`\n\nconst NftCard: React.FC<NftCardProps> = ({ nft, onSuccess, canClaim = false, tokenIds = [] }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const { profile } = useProfile()\n  const { bunnyId, name, description } = nft\n  const walletOwnsNft = tokenIds.length > 0\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const handleClick = async () => {\n    setIsOpen(!isOpen)\n  }\n\n  const [onPresentTransferModal] = useModal(<TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={onSuccess} />)\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={onSuccess} />)\n\n  return (\n    <Card isActive={walletOwnsNft || canClaim}>\n      <Preview nft={nft} isOwned={walletOwnsNft} />\n      <CardBody>\n        <Header>\n          <Heading>{name}</Heading>\n          {walletOwnsNft && (\n            <Tag outline variant=\"secondary\">\n              {TranslateString(999, 'In Wallet')}\n            </Tag>\n          )}\n          {profile?.nft?.bunnyId === bunnyId && (\n            <Tag outline variant=\"success\">\n              {TranslateString(999, 'Profile Pic')}\n            </Tag>\n          )}\n        </Header>\n        {canClaim && (\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\n            {TranslateString(999, 'Claim this NFT')}\n          </Button>\n        )}\n        {walletOwnsNft && (\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n            {TranslateString(999, 'Transfer')}\n          </Button>\n        )}\n      </CardBody>\n      <CardFooter p=\"0\">\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\n          {TranslateString(658, 'Details')}\n        </DetailsButton>\n        {isOpen && (\n          <InfoBlock>\n            <Text as=\"p\" color=\"textSubtle\" style={{ textAlign: 'center' }}>\n              {description}\n            </Text>\n          </InfoBlock>\n        )}\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default NftCard\n","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/Steps.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Row.tsx",["1391"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowProps> = (props) => {\n  const { details } = props\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled)\n  }\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelToggled} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={TranslateString(736, 'APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout\n                        label={TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label)}\n                      >\n                        {React.createElement(cells[key], props[key])}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(1072, 'Earned')}>\n                <Earned {...props.earned} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={TranslateString(736, 'APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelToggled} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {actionPanelToggled && details && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/ApyButton.tsx",["1392"],"import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@jazzdefi/uikit'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/index.tsx",["1393"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardRibbon } from '@jazzdefi/uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useGetPublicIfoData from 'hooks/useGetPublicIfoData'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const { id, name, subTitle } = ifo\n  const publicIfoData = useGetPublicIfoData(ifo)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\n          <>\n            <IfoCardProgress progress={publicIfoData.progress} />\n            <IfoCardTime\n              status={publicIfoData.status}\n              secondsUntilStart={publicIfoData.secondsUntilStart}\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\n              block={publicIfoData.startBlockNum}\n            />\n          </>\n        )}\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton width=\"100%\" />}\n      </CardBody>\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/CardActionsContainer.tsx",["1394"],"import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@jazzdefi/uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n  depositFeeBP?: number\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n        depositFeeBP={depositFeeBP}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(758, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          JAZZ\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1072, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1074, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/CardHeading.tsx",["1395","1396","1397"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@jazzdefi/uikit'\nimport { CommunityTag, CoreTag, NoFeeTag } from 'components/Tags'\nimport { StyledIconImage, StyledImageContainer } from '../RainbowLight'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n  depositFee?: number\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n  depositFee,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={80} height={80} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        {lpLabel.split('-')[0] === 'JAZZ' ? (\n          <Heading mb=\"4px\" style={{ textShadow: '2px 2px #ffd36b' }}>\n            {lpLabel.split(' ')[0]}\n          </Heading>\n        ) : (\n          <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        )}\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n        <Flex justifyContent=\"center\">{depositFee === 0 ? <NoFeeTag /> : null}</Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/DetailsSection.tsx",["1398"],"import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from '@jazzdefi/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\n      </Flex>\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(354, 'Total Liquidity')}:</Text>\n          <Text>{totalValueFormated}</Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementCard.tsx",["1399"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@jazzdefi/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/Header.tsx",["1400"],"import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Total cost: 1.5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/index.tsx",["1401"],"import React from 'react'\nimport { InjectedModalProps, Modal } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/SecondaryCard.tsx",["1402"],"import styled from 'styled-components'\nimport { Text } from '@jazzdefi/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/ProfileAvatar.tsx",["1403"],"import React from 'react'\nimport { NoProfileAvatarIcon } from '@jazzdefi/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no provile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","/home/drab/Documents/jazzdefi/src/utils/wallet.ts",[],"/home/drab/Documents/jazzdefi/src/views/Profile/components/CollectibleCard.tsx",["1404"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@jazzdefi/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","/home/drab/Documents/jazzdefi/src/state/profile/helpers.ts",[],"/home/drab/Documents/jazzdefi/src/config/constants/index.ts",[],"/home/drab/Documents/jazzdefi/src/utils/getLiquidityUrlPathParts.ts",[],"/home/drab/Documents/jazzdefi/src/views/Collectibles/components/NftCard/Preview.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Collectibles/components/ClaimNftModal.tsx",["1405"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { useBunnySpecialContract } from 'hooks/useContract'\nimport { useToast } from 'state/hooks'\nimport { Button, InjectedModalProps, Modal, Text, Flex } from '@jazzdefi/uikit'\nimport { Nft } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\n\ninterface ClaimNftModalProps extends InjectedModalProps {\n  nft: Nft\n  onSuccess: () => void\n}\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n  const bunnySpecialContract = useBunnySpecialContract()\n\n  const handleConfirm = async () => {\n    bunnySpecialContract.methods\n      .mintNFT(nft.bunnyId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Successfully claimed!')\n        onDismiss()\n        onSuccess()\n      })\n      .on('error', (error) => {\n        console.error('Unable to claim NFT', error)\n        toastError('Error', 'Unable to claim NFT, please try again.')\n        setIsConfirming(false)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim Collectible')} onDismiss={onDismiss}>\n      <ModalContent>\n        <Flex alignItems=\"center\" mb=\"8px\" justifyContent=\"space-between\">\n          <Text>{TranslateString(626, 'You will receive')}:</Text>\n          <Text bold>{`1x \"${nft.name}\" Collectible`}</Text>\n        </Flex>\n      </ModalContent>\n      <Actions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button width=\"100%\" onClick={handleConfirm} disabled={!account || isConfirming}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default ClaimNftModal\n","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/config.ts",[],"/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/reducer.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useContract.ts",[],"/home/drab/Documents/jazzdefi/src/views/Collectibles/components/TransferNftModal.tsx",["1406"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Input, Modal, Text } from '@jazzdefi/uikit'\nimport { useToast } from 'state/hooks'\nimport { Nft } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface TransferNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 24px;\n`\n\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { toastSuccess } = useToast()\n\n  const handleConfirm = async () => {\n    try {\n      const isValidAddress = Web3.utils.isAddress(value)\n\n      if (!isValidAddress) {\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\n      } else {\n        await pancakeRabbitsContract.methods\n          .transferFrom(account, value, tokenIds[0])\n          .send({ from: account })\n          .on('sending', () => {\n            setIsLoading(true)\n          })\n          .on('receipt', () => {\n            onDismiss()\n            onSuccess()\n            toastSuccess('NFT successfully transferred!')\n          })\n          .on('error', () => {\n            console.error(error)\n            setError('Unable to transfer NFT')\n            setIsLoading(false)\n          })\n      }\n    } catch (err) {\n      console.error('Unable to transfer NFT:', err)\n    }\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(inputValue)\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\n        <Input\n          id=\"transferAddress\"\n          name=\"address\"\n          type=\"text\"\n          placeholder={TranslateString(999, 'Paste address')}\n          value={value}\n          onChange={handleChange}\n          isWarning={error}\n          disabled={isLoading}\n        />\n      </ModalContent>\n      <Actions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button width=\"100%\" onClick={handleConfirm} disabled={!account || isLoading || !value}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default TransferNftModal\n","/home/drab/Documents/jazzdefi/src/views/Collectibles/components/InfoRow.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/UserName.tsx",["1407"],"import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@jazzdefi/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account, library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      tokenId={tokenId}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = library?.bnbSign\n        ? (await library.bnbSign(account, userName))?.signature\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(`Created ${dateCreated} ago`)\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError('Error: Unable to verify username')\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label\n            htmlFor=\"checkbox\"\n            style={{\n              display: 'block',\n              cursor: 'pointer',\n              marginBottom: '24px',\n            }}\n          >\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} CAKE is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/CellLayout.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx",["1408"],"import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 1,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 7,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 30,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy: apy,\n    cakePrice,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(864, 'JAZZ per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand1D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand7D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          866,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardTime.tsx",["1409"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link } from '@jazzdefi/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (status === 'idle') {\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\n        {TranslateString(656, 'Loading...')}\n      </Flex>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardProgress.tsx",["1410"],"import React from 'react'\nimport { Box, Progress } from '@jazzdefi/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <Box mb=\"16px\">\n      <Progress primaryStep={progress} />\n    </Box>\n  )\n}\n\nexport default IfoCardProgress\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardActions.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/HarvestAction.tsx",["1411"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(562, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/StakeAction.tsx",["1412"],"import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n  depositFeeBP?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  depositFeeBP,\n}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={onStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      depositFeeBP={depositFeeBP}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","/home/drab/Documents/jazzdefi/src/utils/achievements.ts",[],"/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementDescription.tsx",["1413"],"import React from 'react'\nimport { Text, TextProps } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementTitle.tsx",["1414"],"import React from 'react'\nimport { Text, TextProps } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/ApproveCakeView.tsx",["1415"],"import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx",["1416"],"import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx",["1417"],"import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useDispatch } from 'react-redux'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(999, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(999, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/StartView.tsx",["1418"],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@jazzdefi/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {TranslateString(999, 'Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementAvatar.tsx",["1419"],"import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@jazzdefi/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardDetails.tsx",["1420"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, LinkExternal, Link, Box, CardFooter, Button, ChevronDownIcon, ChevronUpIcon } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { PublicIfoState } from 'hooks/useGetPublicIfoData'\nimport { Ifo } from 'config/constants/types'\n\nexport interface IfoCardDetailsProps {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo, publicIfoData }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const { description, cakeToBurn, projectSiteUrl, launchDate, launchTime, saleAmount, raiseAmount } = ifo\n  const { raisingAmount, totalAmount } = publicIfoData\n  const handleToggle = () => setIsOpen(!isOpen)\n\n  return (\n    <CardFooter>\n      <Button\n        variant=\"text\"\n        onClick={handleToggle}\n        width=\"100%\"\n        endIcon={\n          isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\n        }\n      >\n        {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Button>\n      {isOpen && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" my=\"24px\">\n            {description}\n          </Text>\n          <Box mb=\"24px\">\n            <Item>\n              <Display>{TranslateString(582, 'Launch Time')}</Display>\n              <Text>\n                {launchDate},\n                <Link\n                  href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n                  target=\"blank\"\n                  rel=\"noopener noreferrer\"\n                  ml=\"4px\"\n                  style={{ display: 'inline' }}\n                >\n                  {launchTime}\n                </Link>\n              </Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(584, 'For Sale')}</Display>\n              <Text>{saleAmount}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n              <Text>{raiseAmount}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(586, 'JAZZ to burn (USD)')}</Display>\n              <Text>{cakeToBurn}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n              <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n            </Item>\n          </Box>\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n            {TranslateString(412, 'View project site')}\n          </LinkExternal>\n        </>\n      )}\n    </CardFooter>\n  )\n}\n\nexport default IfoCardDetails\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/IfoCardHeader.tsx",["1421"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@jazzdefi/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Liquidity.tsx",["1422"],"import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface LiquidityProps {\n  liquidity: number\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity = liquidity\n    ? `$${Number(liquidity).toLocaleString(undefined, {\n        maximumFractionDigits: 0,\n      })}`\n    : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <Tooltip content={TranslateString(999, 'The total value of the funds in this farm’s liquidity pool')}>\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Liquidity\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Multiplier.tsx",["1423"],"import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultipler = multiplier ? multiplier.toLowerCase() : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultipler}</MultiplierWrapper>\n      <Tooltip\n        content={\n          <div>\n            {TranslateString(999, 'The multiplier represents the amount of JAZZ rewards each farm gets.')}\n            <br />\n            <br />\n            {TranslateString(\n              999,\n              'For example, if a 1x farm was getting 1 JAZZ per block, a 40x farm would be getting 40 JAZZ per block.',\n            )}\n          </div>\n        }\n      >\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Multiplier\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementRow/index.tsx",["1424"],"import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@jazzdefi/uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const TranslateString = useI18n()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {TranslateString(999, 'Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/ActionPanel.tsx",["1425","1426"],"import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { LinkExternal, Text } from '@jazzdefi/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { communityFarms } from 'config/constants'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({ details, apr, multiplier, liquidity }) => {\n  const farm = details\n\n  const TranslateString = useI18n()\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = `https://bscscan.com/address/${lpAddress}`\n  const info = `https://pancakeswap.info/pair/${lpAddress}`\n  const isCommunityFarm = communityFarms.includes(token.symbol)\n\n  return (\n    <Container>\n      <InfoContainer>\n        <StakeContainer>\n          <StyledLinkExternal href={`https://exchange.jazzdefi.com/#/add/${liquidityUrlPathParts}`}>\n            {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n          </StyledLinkExternal>\n        </StakeContainer>\n        <StyledLinkExternal href={bsc}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\n        <TagsContainer>\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{TranslateString(736, 'APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} />\n        <StakedAction {...farm} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Details.tsx",["1427"],"import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const TranslateString = useI18n()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && TranslateString(658, 'Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Earned.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Farm.tsx",["1428","1429"],"import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from '@jazzdefi/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { StyledIconImage, StyledImageContainer } from '../RainbowLight'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n  depositFeeBP?: number\n}\n\nconst IconImage = styled(Image)`\n  width: 32px;\n  height: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 64px;\n    height: 64px;\n    margin-right: 20px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid, depositFeeBP }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const depositFeeColor = depositFeeBP / 100 === 0 ? 'rgb(50, 176, 123)' : '#1a1a1a'\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      {label.split('-')[0] === 'JAZZ' ? (\n        <StyledImageContainer>\n          <StyledIconImage>\n            <IconImage src={`/images/farms/${image}.png`} alt=\"icon\" width={64} height={64} mr=\"8px\" />\n          </StyledIconImage>\n        </StyledImageContainer>\n      ) : (\n        <StyledImageContainer>\n          <IconImage src={`/images/farms/${image}.png`} alt=\"icon\" width={64} height={64} mr=\"8px\" />\n        </StyledImageContainer>\n      )}\n\n      <div>\n        {handleRenderFarming()}\n        {label.split('-')[0] === 'JAZZ' ? (\n          <Text bold style={{ textShadow: 'rgb(255, 231, 36) 1px 1px' }}>\n            {label}\n          </Text>\n        ) : (\n          <Text bold>{label}</Text>\n        )}\n        <Text bold>\n          Deposit Fee: <span style={{ color: depositFeeColor }}>{depositFeeBP / 100}%</span>\n        </Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","/home/drab/Documents/jazzdefi/src/components/UnlockButton.tsx",["1430"],"import React from 'react'\nimport { Button, useWalletModal } from '@jazzdefi/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Apr.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/TeamSelection.tsx",["1431"],"import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@jazzdefi/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\ninterface Team {\n  name: string\n  description: string\n  isJoinable: boolean\n}\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/ProfilePicture.tsx",["1432"],"import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@jazzdefi/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport nftList from 'config/constants/nfts'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { tokenId, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  const handleApprove = () => {\n    pancakeRabbitsContract.methods\n      .approve(getPancakeProfileAddress(), tokenId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && walletNfts.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              walletNfts.map((walletNft) => {\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.bunnyId}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === tokenId}\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/Mint.tsx",["1433"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [bunnyId, setBunnyId] = useState(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {TranslateString(999, `Cost: ${MINT_COST} CAKE`, {\n              num: MINT_COST,\n            })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\n\n            return (\n              <SelectionCard\n                key={nft.bunnyId}\n                name=\"mintStarter\"\n                value={nft.bunnyId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={bunnyId === nft.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {TranslateString(1098, `A minimum of ${MINT_COST} CAKE is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","/home/drab/Documents/jazzdefi/src/config/constants/campaigns.ts",[],"/home/drab/Documents/jazzdefi/src/state/toasts/index.ts",["1434"],"/* eslint-disable no-param-reassign */\nimport { Toast } from '@jazzdefi/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","/home/drab/Documents/jazzdefi/src/utils/makeBatchRequest.ts",[],"/home/drab/Documents/jazzdefi/src/config/constants/ifo.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useGetWalletNfts.ts",[],"/home/drab/Documents/jazzdefi/src/config/constants/pools.ts",[],"/home/drab/Documents/jazzdefi/src/config/constants/farms.ts",[],"/home/drab/Documents/jazzdefi/src/config/index.ts",[],"/home/drab/Documents/jazzdefi/src/utils/addressHelpers.ts",[],"/home/drab/Documents/jazzdefi/src/components/ExpandableSectionButton/index.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useWeb3.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useApprove.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useGetPublicIfoData.ts",[],"/home/drab/Documents/jazzdefi/src/views/Profile/ProfileCreation/contexts/hook.ts",[],"/home/drab/Documents/jazzdefi/src/components/Tags.tsx",["1435"],"import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@jazzdefi/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon color=\"secondary\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon color=\"secondary\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon color=\"secondary\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, NoFeeTag }\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/ConfirmProfileCreationModal.tsx",["1436"],"import React from 'react'\nimport { Modal, Flex, Text } from '@jazzdefi/uikit'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>\n          {TranslateString(999, `${REGISTER_COST} CAKE`, {\n            num: REGISTER_COST,\n          })}\n        </Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/InactiveSkeleton.tsx",["1437"],"import React from 'react'\nimport { Box, Flex, Skeleton } from '@jazzdefi/uikit'\n\nconst InactiveSkeleton = () => (\n  <>\n    <Flex mb=\"24px\">\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n    </Flex>\n    <Skeleton height=\"48px\" mb=\"24px\" />\n    <Skeleton height=\"48px\" mt=\"4px\" />\n  </>\n)\n\nexport default InactiveSkeleton\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/WithdrawModal.tsx",["1438"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@jazzdefi/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/DepositModal.tsx",["1439"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@jazzdefi/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  addLiquidityUrl,\n  depositFeeBP = 0,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={TranslateString(1070, 'Stake')}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {TranslateString(999, 'Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/ApproveConfirmButtons.tsx",["1440"],"import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApprovConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApprovConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApprovConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/AchievementRow/PointsLabel.tsx",["1441"],"import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const TranslateString = useI18n()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/ActionColumn.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/Tooltip/Tooltip.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/StakedAction.tsx",["1442"],"import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon } from '@jazzdefi/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser } from 'state/hooks'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport useI18n from 'hooks/useI18n'\nimport { useApprove } from 'hooks/useApprove'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useWeb3 from 'hooks/useWeb3'\n\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  depositFeeBP = 0,\n}) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const web3 = useWeb3()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={onStake}\n      tokenName={lpSymbol}\n      addLiquidityUrl={addLiquidityUrl}\n      depositFeeBP={depositFeeBP}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (rawStakedBalance) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\">\n            {TranslateString(999, 'Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {TranslateString(999, 'Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/HarvestAction.tsx",["1443"],"import React, { useState, useRef, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button } from '@jazzdefi/uikit'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\n  const { account } = useWeb3React()\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\n  const cakePrice = usePriceCakeBusd()\n  let earnings = null\n  let earningsBusd = 0\n  let displayBalance = '?'\n\n  if (earningsBigNumber) {\n    earnings = getBalanceNumber(earningsBigNumber)\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const TranslateString = useI18n()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>JAZZ </Title>\n        <Subtle>{TranslateString(999, 'EARNED')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          <Staked>~{countUp}USD</Staked>\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !account}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {TranslateString(562, 'Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/NextStepButton.tsx",["1444"],"import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@jazzdefi/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/SelectionCard.tsx",["1445"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@jazzdefi/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","/home/drab/Documents/jazzdefi/src/config/constants/types.ts",[],"/home/drab/Documents/jazzdefi/src/config/constants/tokens.ts",[],"/home/drab/Documents/jazzdefi/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx",["1446"],"import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(999, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","/home/drab/Documents/jazzdefi/src/hooks/useHasCakeBalance.ts",[],"/home/drab/Documents/jazzdefi/src/utils/compoundApyHelpers.ts",[],"/home/drab/Documents/jazzdefi/src/utils/getTimePeriods.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useHarvest.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useUnstake.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useGetProfileCosts.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useApproveConfirmTransaction.ts",[],"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Actions/styles.ts",[],"/home/drab/Documents/jazzdefi/src/utils/callHelpers.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useTokenBalance.ts",[],"/home/drab/Documents/jazzdefi/src/config/constants/contracts.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useStake.ts",[],"/home/drab/Documents/jazzdefi/src/components/ModalInput/index.ts",[],"/home/drab/Documents/jazzdefi/src/components/ModalActions/index.ts",[],"/home/drab/Documents/jazzdefi/src/components/ModalInput/ModalInput.tsx",["1447","1448"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  depositFeeBP?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  depositFeeBP = 0,\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      <Text fontSize=\"14px\">\n        {' '}\n        {TranslateString(10001, 'Deposit Fee')}: {depositFeeBP / 100}%\n      </Text>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","/home/drab/Documents/jazzdefi/src/components/ModalActions/ModalActions.tsx",[],"/home/drab/Documents/jazzdefi/src/components/Spacer/index.ts",[],"/home/drab/Documents/jazzdefi/src/components/Spacer/Spacer.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/ActiveSkeleton.tsx",["1449"],"import React from 'react'\nimport { Box, Skeleton } from '@jazzdefi/uikit'\n\nconst ActiveSkeleton = () => (\n  <Box>\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\n    <Skeleton height=\"48px\" mb=\"2px\" />\n    <Skeleton height=\"19px\" width=\"15%\" />\n  </Box>\n)\n\nexport default ActiveSkeleton\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/Claim.tsx",["1450"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { AutoRenewIcon, Box, Button, Flex, Text } from '@jazzdefi/uikit'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { UserInfo, WalletIfoState } from 'hooks/useGetWalletIfoData'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport BalanceInUsd from './BalanceInUsd'\nimport MetaLabel from './MetaLabel'\n\ninterface ClaimProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: WalletIfoState['isPendingTx']\n  setPendingTx: (status: boolean) => void\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\n  refundingAmount: WalletIfoState['refundingAmount']\n  setIsClaimed: () => void\n}\n\nconst AmountGrid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 24px;\n`\n\nconst DISPLAY_DECIMALS = 4\n\nconst Claim: React.FC<ClaimProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  setPendingTx,\n  offeringTokenBalance,\n  refundingAmount,\n  setIsClaimed,\n}) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const didContribute = userInfo.amount.gt(0)\n  const canClaim = !userInfo.claimed\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)\n  const { tokenSymbol, tokenDecimals } = ifo\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\n  const { toastError, toastSuccess } = useToast()\n\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true)\n      await contract.methods.harvest().send({ from: account })\n      setIsClaimed()\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\n    } catch (error) {\n      toastError('Error', error?.message)\n      console.error(error)\n    } finally {\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <>\n      <AmountGrid>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              LP Tokens\n            </Text>\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n              Committed\n            </Text>\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          <MetaLabel>\n            {canClaim\n              ? TranslateString(999, `${refundedBalance} to reclaim`, {\n                  num: refundedBalance,\n                })\n              : TranslateString(999, `${refundedBalance} reclaimed`, {\n                  num: refundedBalance,\n                })}\n          </MetaLabel>\n        </Box>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              {tokenSymbol}\n            </Text>\n            {!canClaim ? (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                Claimed\n              </Text>\n            ) : (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                To Claim\n              </Text>\n            )}\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\n        </Box>\n      </AmountGrid>\n      {didContribute ? (\n        <Button\n          onClick={handleClaim}\n          disabled={isPendingTx || !canClaim}\n          width=\"100%\"\n          mb=\"24px\"\n          isLoading={isPendingTx}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {canClaim ? TranslateString(999, 'Claim') : TranslateString(999, 'Claimed')}\n        </Button>\n      ) : (\n        <Button disabled width=\"100%\" mb=\"24px\">\n          {TranslateString(999, 'Nothing to Claim')}\n        </Button>\n      )}\n      <Text mt=\"4px\">{TranslateString(999, \"You'll be refunded any excess tokens when you claim\")}</Text>\n    </>\n  )\n}\n\nexport default Claim\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/Contribute.tsx",["1451"],"import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { Box, Button, Flex, Text, useModal } from '@jazzdefi/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { UserInfo } from 'hooks/useGetWalletIfoData'\nimport { PublicIfoState } from 'hooks/useGetPublicIfoData'\nimport { useToast } from 'state/hooks'\nimport ContributeModal from './ContributeModal'\nimport PercentageOfTotal from './PercentageOfTotal'\n\ninterface ContributeProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: boolean\n  publicIfoData: PublicIfoState\n  addUserContributedAmount: (amount: BigNumber) => void\n}\nconst Contribute: React.FC<ContributeProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  publicIfoData,\n  addUserContributedAmount,\n}) => {\n  const { currency, currencyAddress } = ifo\n  const { totalAmount } = publicIfoData\n  const TranslateString = useI18n()\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const { toastSuccess } = useToast()\n\n  const handleContributeSuccess = (amount: BigNumber) => {\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} CAKE-BNB LP tokens to this IFO!`)\n    addUserContributedAmount(amount)\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      currency={currency}\n      contract={contract}\n      currencyAddress={currencyAddress}\n      onSuccess={handleContributeSuccess}\n    />,\n    false,\n  )\n\n  return (\n    <Box>\n      <Flex mb=\"4px\">\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n          CAKE-BNB LP\n        </Text>\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n          Committed\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Box style={{ flex: 1 }} pr=\"8px\">\n          <Text bold fontSize=\"20px\">\n            {contributedBalance.toFixed(4)}\n          </Text>\n        </Box>\n        <Button onClick={onPresentContributeModal} disabled={isPendingTx}>\n          {TranslateString(999, 'Contribute')}\n        </Button>\n      </Flex>\n      <PercentageOfTotal userAmount={userInfo.amount} totalAmount={totalAmount} />\n    </Box>\n  )\n}\n\nexport default Contribute\n","/home/drab/Documents/jazzdefi/src/views/Profile/components/CardHeader.tsx",["1452"],"import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@jazzdefi/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","/home/drab/Documents/jazzdefi/src/views/Pools/components/PoolCard.tsx",["1453","1454","1455","1456","1457"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image, Text, Skeleton, Flex } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApy, getFarmApy } from 'utils/apy'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\nimport { Pool } from 'state/types'\nimport { useGetApiPrice, useGetApiPrices } from 'state/hooks'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\nimport ApyButton from '../../Farms/components/FarmCard/ApyButton'\nimport { BASE_ADD_LIQUIDITY_URL } from '../../../config'\n\ninterface HarvestProps {\n  pool: Pool\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { account } = useWeb3React()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  // APY\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol)\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol)\n  const apy = getPoolApy(\n    stakingTokenPrice,\n    rewardTokenPrice,\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\n    parseFloat(pool.tokenPerBlock),\n  )\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const isOldSyrup = stakingToken.symbol === tokens.foam.symbol\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol} />,\n  )\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase()\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  const farmAPY = apy && apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const addLiquidityUrl = `https://bscscan.com/address/${pool.earningToken.address[56]}`\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {earningToken.symbol} {TranslateString(348, 'Pool')}\n          {stakingToken.symbol === 'JAZZ' ? (\n            <Text fontSize=\"12px\">You need at least 1% in your wallet for computing</Text>\n          ) : (\n            ''\n          )}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/pools/${poolImage}`} alt={earningToken.symbol} width={64} height={64} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? TranslateString(999, 'Collecting') : TranslateString(562, 'Harvest')}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${earningToken.symbol} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\n                  {`Approve ${stakingToken.symbol}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0', stakingToken.decimals)\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingToken.symbol}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"white\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div>{TranslateString(736, 'APR')}:</div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            {apy ? (\n              <>\n                <ApyButton\n                  lpLabel=\"\"\n                  addLiquidityUrl={addLiquidityUrl}\n                  cakePrice={new BigNumber(stakingTokenPrice)}\n                  apy={apy}\n                />\n                <Text bold fontSize=\"14px\">\n                  {farmAPY}%\n                </Text>\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </div>\n        </StyledDetails>\n        <StyledDetails>\n          <div>{TranslateString(384, 'Your Stake')}:</div>\n          <Balance\n            fontSize=\"14px\"\n            isDisabled={isFinished}\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\n          />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={earningToken.projectLink}\n        decimals={stakingToken.decimals}\n        totalStaked={totalStaked}\n        startBlock={startBlock}\n        endBlock={endBlock}\n        isFinished={isFinished}\n        poolCategory={poolCategory}\n        tokenName={earningToken.symbol}\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\n        tokenDecimals={earningToken.decimals}\n        stakingTokenPrice={stakingTokenPrice}\n        rewardTokenPrice={rewardTokenPrice}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","/home/drab/Documents/jazzdefi/src/hooks/useGetWalletIfoData.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/PastDrawsPage.tsx",["1458"],"import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@jazzdefi/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/MetaLabel.tsx",["1459"],"import React from 'react'\nimport { Box, BoxProps, Text } from '@jazzdefi/uikit'\n\ntype MetaLabel = BoxProps\n\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\n  return (\n    <Box minHeight=\"18px\" {...props}>\n      <Text color=\"textSubtle\" fontSize=\"12px\">\n        {children}\n      </Text>\n    </Box>\n  )\n}\n\nexport default MetaLabel\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/PercentageOfTotal.tsx",["1460"],"import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Text } from '@jazzdefi/uikit'\nimport { UserInfo } from 'hooks/useGetWalletIfoData'\nimport useI18n from 'hooks/useI18n'\n\ninterface PercentageOfTotalProps {\n  userAmount: UserInfo['amount']\n  totalAmount: BigNumber\n}\n\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount }) => {\n  const TranslateString = useI18n()\n  const percentOfUserContribution = userAmount.div(totalAmount).times(100).toNumber()\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 5 })\n\n  return (\n    <Text fontSize=\"14px\" color=\"textSubtle\">\n      {TranslateString(999, `${percentofUserDisplay}% of total`, {\n        num: percentofUserDisplay,\n      })}\n    </Text>\n  )\n}\n\nexport default PercentageOfTotal\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/ContributeModal.tsx",["1461"],"import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, LinkExternal, Box, Text } from '@jazzdefi/uikit'\nimport BalanceInput from 'components/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC20 } from 'hooks/useContract'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss, onSuccess }) => {\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const raisingTokenContract = useERC20(currencyAddress)\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress))\n  const TranslateString = useI18n()\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods\n        .approve(contract.options.address, ethers.constants.MaxUint256)\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\n    },\n    onSuccess: async () => {\n      onDismiss()\n      onSuccess(valueWithTokenDecimals)\n    },\n  })\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <Box maxWidth=\"400px\">\n        <BalanceInput\n          title={TranslateString(999, 'Contribute')}\n          value={value}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          symbol={currency}\n          max={balance}\n          onSelectMax={() => setValue(balance.toString())}\n          mb=\"24px\"\n        />\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            \"If you don't contribute enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.\",\n          )}\n        </Text>\n        <ApproveConfirmButtons\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\n          isApproving={isApproving}\n          isConfirmDisabled={\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\n          }\n          isConfirming={isConfirming}\n          onApprove={handleApprove}\n          onConfirm={handleConfirm}\n        />\n        <LinkExternal\n          href=\"https://exchange.pancakeswap.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n          style={{ margin: '16px auto 0' }}\n        >\n          {`Get ${currency}`}\n        </LinkExternal>\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/BalanceInUsd.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/NextDrawPage.tsx",["1462"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { BaseLayout } from '@jazzdefi/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/Divider.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/Hero.tsx",["1463"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #b4b6b8 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","/home/drab/Documents/jazzdefi/src/views/Pools/components/CardFooter.tsx",["1464","1465","1466"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Flex, MetamaskIcon } from '@jazzdefi/uikit'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { useBlock, useGetApiPrices } from 'state/hooks'\nimport { PoolCategory } from 'config/constants/types'\nimport { registerToken } from 'utils/wallet'\nimport { BASE_URL } from 'config'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  decimals: number\n  totalStaked: BigNumber\n  tokenName: string\n  tokenAddress: string\n  tokenDecimals: number\n  startBlock: number\n  endBlock: number\n  isFinished: boolean\n  poolCategory: PoolCategory\n  stakingTokenPrice: number\n  rewardTokenPrice: number\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled(Flex)`\n  align-items: center;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  decimals,\n  tokenAddress,\n  totalStaked,\n  tokenName,\n  tokenDecimals,\n  isFinished,\n  startBlock,\n  endBlock,\n  poolCategory,\n  stakingTokenPrice,\n  rewardTokenPrice,\n}) => {\n  const { currentBlock } = useBlock()\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenName.toLowerCase()}.png`\n\n  const totalLiquidity = new BigNumber(getBalanceNumber(totalStaked, decimals)).times(rewardTokenPrice)\n\n  const totalLiquidityUnitReverse = true\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  {' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\n          </Row>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  {' '}\n                </span>\n                {TranslateString(408, 'Total Liquidity')}\n              </Label>\n            </FlexFull>\n            <Balance\n              fontSize=\"14px\"\n              isDisabled={isFinished}\n              value={totalLiquidity.toNumber()}\n              unit=\"$\"\n              reverse={totalLiquidityUnitReverse}\n            />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(1212, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          {tokenAddress && (\n            <Flex mb=\"4px\">\n              <TokenLink onClick={() => registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)}>\n                Add {tokenName} to Metamask\n              </TokenLink>\n              <MetamaskIcon height={15} width={15} ml=\"4px\" />\n            </Flex>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","/home/drab/Documents/jazzdefi/src/views/Pools/components/HarvestButton.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Pools/components/OldSyrupTitle.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Pools/components/Card.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Pools/components/CardTitle.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Pools/components/CompoundModal.tsx",["1467","1468"],"import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@jazzdefi/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { multiBuy } from '../../../utils/lotteryUtils'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({\n  earnings,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings, stakingTokenDecimals)\n  }, [earnings, stakingTokenDecimals])\n\n  return (\n    <Modal\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","/home/drab/Documents/jazzdefi/src/views/Pools/components/WithdrawModal.tsx",["1469"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@jazzdefi/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","/home/drab/Documents/jazzdefi/src/views/Pools/components/DepositModal.tsx",["1470"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@jazzdefi/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx",["1471"],"import React from 'react'\nimport { Heading, Card, CardBody } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","/home/drab/Documents/jazzdefi/src/utils/lotteryUtils.ts",[],"/home/drab/Documents/jazzdefi/src/contexts/PastLotteryDataContext.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/HowItWorks.tsx",["1472"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          426,\n          'Spend JAZZ to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/WinningNumbers.tsx",["1473"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@jazzdefi/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(440, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/UnlockWalletCard.tsx",["1474"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","/home/drab/Documents/jazzdefi/src/state/pools/index.ts",[],"/home/drab/Documents/jazzdefi/src/state/farms/index.ts",["1475"],"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","/home/drab/Documents/jazzdefi/src/views/Home/components/EarnAPYCard.tsx",["1476"],"import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@jazzdefi/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { getFarmApy } from 'utils/apy'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPYCard = () => {\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const prices = useGetApiPrices()\n  const cakePrice = usePriceCakeBusd()\n\n  const highestApy = useMemo(() => {\n    const apys = farmsLP\n      // Filter inactive farms, because their theoretical APY is super high. In practice, it's 0.\n      .filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n      .map((farm) => {\n        if (farm.lpTotalInQuoteToken && prices) {\n          const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n          return getFarmApy(farm.poolWeight, cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n    const maxApy = max(apys)\n    return maxApy?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }, [cakePrice, farmsLP, prices])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn up to\n        </Heading>\n        <CardMidContent color=\"primary\">\n          {highestApy ? (\n            `${highestApy}% ${TranslateString(736, 'APR')}`\n          ) : (\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\n          )}\n        </CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Farms\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apy-cta\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPYCard\n","/home/drab/Documents/jazzdefi/src/views/Home/components/EarnAssetCard.tsx",["1477"],"import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@jazzdefi/uikit'\nimport { NavLink } from 'react-router-dom'\nimport pools from 'config/constants/pools'\nimport { Pool } from 'state/types'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: ${({ theme }) => theme.colors.primary};\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAssetCard = () => {\n  const activeNonCakePools = pools.filter((pool) => !pool.isFinished && !pool.earningToken.symbol.includes('CAKE'))\n  const latestPools: Pool[] = orderBy(activeNonCakePools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 3)\n  // Always include CAKE\n  const assets = [...latestPools.map((pool) => pool.earningToken.symbol)].join(', ')\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"invertedContrast\" size=\"lg\">\n          Earn\n        </Heading>\n        <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"invertedContrast\" size=\"lg\">\n            in Pools\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/pools\" id=\"pool-cta\">\n            <ArrowForwardIcon mt={30} color=\"background\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n","/home/drab/Documents/jazzdefi/src/views/Home/components/CakeStats.tsx",["1478"],"import React from 'react'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Card, CardBody, Heading, Text } from '@jazzdefi/uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { usePriceCakeBusd } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const pianoPrice = usePriceCakeBusd()\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\n  const cakeSupply = getBalanceNumber(circSupply)\n  const marketCap = pianoPrice.times(circSupply)\n  const pianoPerBlock = 1\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'JAZZ Stats')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10005, 'Market Cap')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total Minted')}</Text>\n          {totalSupply && <CardValue fontSize=\"14px\" value={getBalanceNumber(totalSupply)} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total Burned')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10004, 'Circulating Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, 'New JAZZ/block')}</Text>\n          <Text bold fontSize=\"14px\">\n            {pianoPerBlock}\n          </Text>\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","/home/drab/Documents/jazzdefi/src/views/Home/components/TotalValueLockedCard.tsx",["1479","1480"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalValue } from '../../../state/hooks'\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nconst TotalValueLockedCard = () => {\n  const TranslateString = useI18n()\n  const totalValue = useTotalValue()\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          {TranslateString(762, 'Total Value Locked (TVL)')}\n        </Heading>\n        <CardValue value={totalValue.toNumber()} prefix=\"$\" decimals={0} />\n        <Text color=\"textSubtle\">{TranslateString(764, 'Across all LPs and JAZZ Pools')}</Text>\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","/home/drab/Documents/jazzdefi/src/views/Home/components/FarmStakingCard.tsx",["1481"],"import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)``\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading>\n        <CardImage src=\"/images/jazz.png\" alt=\"JAZZ logo\" width={64} height={64} />\n        <Block>\n          <Label>{TranslateString(544, 'JAZZ to Harvest')}:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          <Label>{TranslateString(546, 'JAZZ in Wallet')}:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting JAZZ')\n                : TranslateString(532, `Harvest all (${balancesWithValue.length})`, {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/LotteryProgress.tsx",["1482"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","/home/drab/Documents/jazzdefi/src/hooks/useAllowance.ts",[],"/home/drab/Documents/jazzdefi/src/components/Balance.tsx",["1483"],"import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text } from '@jazzdefi/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n  reverse?: boolean\n}\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit, reverse = false }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text bold color={isDisabled ? 'textDisabled' : color} fontSize={fontSize}>\n      {reverse && value && unit ? <span>{unit}</span> : ''}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {!reverse && value && unit ? <span>{unit}</span> : ''}\n    </Text>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx",["1484"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@jazzdefi/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: false,\n        isInitialized: true,\n        roundData: initialLotteryData,\n      }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: {\n            message: TranslateString(1078, 'Error fetching data'),\n            type: 'api',\n          },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/Legend.tsx",["1485"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/HistoryChart.tsx",["1486"],"import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@jazzdefi/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#b4b6b8' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: \"'Red Hat Text', sans-serif\",\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#751113', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#b4b6b8', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#751113', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","/home/drab/Documents/jazzdefi/src/hooks/useTickets.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/TotalPrizesCard/index.tsx",["1487"],"import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@jazzdefi/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, {\n                    num: currentLotteryNumber,\n                  })}\n                </Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/index.tsx",["1488"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","/home/drab/Documents/jazzdefi/src/state/pools/fetchPoolsUser.ts",[],"/home/drab/Documents/jazzdefi/src/state/farms/fetchFarmUser.ts",[],"/home/drab/Documents/jazzdefi/src/state/farms/fetchFarms.ts",["1489"],"import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAddress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/YourPrizesCard/index.tsx",["1490"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@jazzdefi/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","/home/drab/Documents/jazzdefi/src/state/pools/fetchPools.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/helpers/CountdownHelpers.ts",[],"/home/drab/Documents/jazzdefi/src/views/Home/components/CardValue.tsx",["1491"],"import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@jazzdefi/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","/home/drab/Documents/jazzdefi/src/views/Home/components/CakeWalletBalance.tsx",["1492"],"import React from 'react'\nimport { Text } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const TranslateString = useI18n()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(usePriceCakeBusd()).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      <CardBusdValue value={busdBalance} />\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","/home/drab/Documents/jazzdefi/src/views/Home/components/CakeHarvestBalance.tsx",["1493"],"import React from 'react'\nimport { Text } from '@jazzdefi/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n}\n`\n\nconst CakeHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceCakeBusd()).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      <CardBusdValue value={earningsBusd} />\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n","/home/drab/Documents/jazzdefi/src/components/Label/index.ts",[],"/home/drab/Documents/jazzdefi/src/components/BalanceInput/index.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/Loading.tsx",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx",["1494"],"import React from 'react'\nimport { Card } from '@jazzdefi/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx",["1495"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","/home/drab/Documents/jazzdefi/src/hooks/useGetLotteryHasDrawn.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastDrawsHistory/LineChartWrapper.tsx",[],"/home/drab/Documents/jazzdefi/src/hooks/useTimer.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useFarmsWithBalance.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/PrizeGrid.tsx",["1496"],"import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@jazzdefi/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/TicketActions.tsx",["1497"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button width=\"100%\" disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx",["1498"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx",["1499"],"import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","/home/drab/Documents/jazzdefi/src/views/Home/components/CardBusdValue.tsx",[],"/home/drab/Documents/jazzdefi/src/components/TokenInput/index.ts",[],"/home/drab/Documents/jazzdefi/src/components/Label/Label.tsx",[],"/home/drab/Documents/jazzdefi/src/hooks/useGetRecentLotteryRoundData.ts",[],"/home/drab/Documents/jazzdefi/src/utils/getLotteryRoundData.ts",[],"/home/drab/Documents/jazzdefi/src/components/BalanceInput/BalanceInput.tsx",["1500"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Box, BoxProps, Flex, Input as UIKitInput, Text } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface BalanceInputProps extends BoxProps {\n  title: string\n  max: number\n  symbol: string\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  onSelectMax?: () => void\n}\n\nconst StyledBalanceInput = styled(Box)`\n  background: ${({ theme }) => theme.colors.input};\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 8px 16px;\n`\n\nconst Input = styled(UIKitInput)`\n  box-shadow: none;\n  flex: 1;\n`\n\nconst TokenSymbol = styled(Text)`\n  max-width: 120px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1;\n`\n\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\n  const TranslateString = useI18n()\n  const maxDisplay = max.toFixed(6)\n\n  return (\n    <StyledBalanceInput {...props}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text fontSize=\"14px\">{title}</Text>\n        <Text fontSize=\"14px\">{TranslateString(999, `Balance: ${maxDisplay}`, { num: maxDisplay })}</Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        {onSelectMax && (\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n        )}\n        <TokenSymbol title={symbol}>{symbol}</TokenSymbol>\n      </Flex>\n    </StyledBalanceInput>\n  )\n}\n\nexport default BalanceInput\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx",["1501"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            oneTicketMatches={match1Ticket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx",["1502"],"import React from 'react'\nimport { Text } from '@jazzdefi/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","/home/drab/Documents/jazzdefi/src/utils/multicall.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useAllEarnings.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/PurchaseWarningModal.tsx",["1503"],"import React from 'react'\nimport { Button, Modal } from '@jazzdefi/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/UserTicketsModal.tsx",["1504"],"import React, { useCallback } from 'react'\nimport { Button, Modal } from '@jazzdefi/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx",["1505"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@jazzdefi/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>\n          {TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, {\n            num: LOTTERY_TICKET_PRICE,\n          })}\n        </Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","/home/drab/Documents/jazzdefi/src/components/TokenInput/TokenInput.tsx",["1506","1507"],"import React from 'react'\nimport { Box, Button, Flex, Text, Input, InputProps } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Box>\n      <Flex justifyContent=\"flex-end\" minHeight=\"21px\" mb=\"8px\">\n        <Text color=\"primary\" fontSize=\"14px\">\n          {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <Flex alignItems=\"center\">\n          <Text bold color=\"primary\" textTransform=\"uppercase\" mx=\"8px\">\n            {symbol}\n          </Text>\n          <div>\n            <Button scale=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default TokenInput\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/Timestamp.tsx",["1508"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@jazzdefi/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx",["1509"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{\n  contractLink?: string\n  lotteryNumber?: number\n}> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","/home/drab/Documents/jazzdefi/src/views/Lottery/components/LotteryCardHeading.tsx",["1510"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@jazzdefi/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","/home/drab/Documents/jazzdefi/src/hooks/useBuyLottery.ts",[],"/home/drab/Documents/jazzdefi/src/hooks/useApproval.ts",[],"/home/drab/Documents/jazzdefi/src/views/Lottery/helpers/formatLotteryDate.ts",[],"/home/drab/Documents/jazzdefi/src/components/TicketInput/index.ts",[],"/home/drab/Documents/jazzdefi/src/components/TicketInput/TicketInput.tsx",["1511"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","/home/drab/Documents/jazzdefi/src/views/Home/components/TwitterCard.tsx",["1512","1513","1514","1515","1516","1517","1518","1519","1520","1521"],"import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@jazzdefi/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { Timeline } from 'react-twitter-widgets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms } from '../../../state/hooks'\n\nconst StyledTwitterCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst TwitterCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTwitterCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(10003, 'Announcements')}\n        </Heading>\n        <Timeline\n          dataSource={{\n            sourceType: 'profile',\n            screenName: 'JazzDefi',\n          }}\n          options={{\n            height: '300',\n            chrome: 'noheader, nofooter',\n            width: '400',\n          }}\n        />\n      </CardBody>\n    </StyledTwitterCard>\n  )\n}\n\nexport default TwitterCard\n","/home/drab/Documents/jazzdefi/src/views/Farms/components/RainbowLight.tsx",[],{"ruleId":"1522","replacedBy":"1523"},{"ruleId":"1524","replacedBy":"1525"},{"ruleId":"1526","replacedBy":"1527"},{"ruleId":"1528","replacedBy":"1529"},{"ruleId":"1530","replacedBy":"1531"},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":31,"nodeType":"1534","endLine":2,"endColumn":48},{"ruleId":"1535","severity":1,"message":"1536","line":2,"column":18,"nodeType":"1537","messageId":"1538","endLine":2,"endColumn":26},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":26,"nodeType":"1534","endLine":3,"endColumn":43},{"ruleId":"1535","severity":1,"message":"1539","line":22,"column":7,"nodeType":"1537","messageId":"1538","endLine":22,"endColumn":14},{"ruleId":"1535","severity":1,"message":"1540","line":23,"column":7,"nodeType":"1537","messageId":"1538","endLine":23,"endColumn":11},{"ruleId":"1535","severity":1,"message":"1541","line":25,"column":7,"nodeType":"1537","messageId":"1538","endLine":25,"endColumn":19},{"ruleId":"1535","severity":1,"message":"1542","line":26,"column":7,"nodeType":"1537","messageId":"1538","endLine":26,"endColumn":12},{"ruleId":"1535","severity":1,"message":"1543","line":27,"column":7,"nodeType":"1537","messageId":"1538","endLine":27,"endColumn":11},{"ruleId":"1535","severity":1,"message":"1544","line":28,"column":7,"nodeType":"1537","messageId":"1538","endLine":28,"endColumn":14},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":49,"nodeType":"1534","endLine":3,"endColumn":66},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":45,"nodeType":"1534","endLine":4,"endColumn":62},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":26,"nodeType":"1534","endLine":4,"endColumn":43},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":58,"nodeType":"1534","endLine":2,"endColumn":75},{"ruleId":"1532","severity":2,"message":"1533","line":5,"column":35,"nodeType":"1534","endLine":5,"endColumn":52},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":32,"nodeType":"1534","endLine":4,"endColumn":49},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":25,"nodeType":"1534","endLine":3,"endColumn":42},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":46,"nodeType":"1534","endLine":2,"endColumn":63},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":35,"nodeType":"1534","endLine":2,"endColumn":52},{"ruleId":"1535","severity":1,"message":"1545","line":17,"column":11,"nodeType":"1537","messageId":"1538","endLine":17,"endColumn":18},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":39,"nodeType":"1534","endLine":3,"endColumn":56},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":29,"nodeType":"1534","endLine":3,"endColumn":46},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":63,"nodeType":"1534","endLine":3,"endColumn":80},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":85,"nodeType":"1534","endLine":3,"endColumn":102},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":31,"nodeType":"1534","endLine":2,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":1,"column":27,"nodeType":"1534","endLine":1,"endColumn":44},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":43,"nodeType":"1534","endLine":3,"endColumn":60},{"ruleId":"1535","severity":1,"message":"1546","line":12,"column":8,"nodeType":"1537","messageId":"1538","endLine":12,"endColumn":15},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":73,"nodeType":"1534","endLine":2,"endColumn":90},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":44,"nodeType":"1534","endLine":3,"endColumn":61},{"ruleId":"1532","severity":2,"message":"1533","line":6,"column":25,"nodeType":"1534","endLine":6,"endColumn":42},{"ruleId":"1535","severity":1,"message":"1547","line":13,"column":8,"nodeType":"1537","messageId":"1538","endLine":13,"endColumn":14},{"ruleId":"1532","severity":2,"message":"1533","line":6,"column":55,"nodeType":"1534","endLine":6,"endColumn":72},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":77,"nodeType":"1534","endLine":4,"endColumn":94},{"ruleId":"1532","severity":2,"message":"1533","line":16,"column":8,"nodeType":"1534","endLine":16,"endColumn":25},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":65,"nodeType":"1534","endLine":2,"endColumn":82},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":78,"nodeType":"1534","endLine":3,"endColumn":95},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":54,"nodeType":"1534","endLine":2,"endColumn":71},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":31,"nodeType":"1534","endLine":3,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":61,"nodeType":"1534","endLine":2,"endColumn":78},{"ruleId":"1532","severity":2,"message":"1533","line":12,"column":58,"nodeType":"1534","endLine":12,"endColumn":75},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":28,"nodeType":"1534","endLine":2,"endColumn":45},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":23,"nodeType":"1534","endLine":2,"endColumn":40},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":41,"nodeType":"1534","endLine":3,"endColumn":58},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":56,"nodeType":"1534","endLine":3,"endColumn":73},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":61,"nodeType":"1534","endLine":3,"endColumn":78},{"ruleId":"1535","severity":1,"message":"1548","line":3,"column":18,"nodeType":"1537","messageId":"1538","endLine":3,"endColumn":27},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":38,"nodeType":"1534","endLine":4,"endColumn":55},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":44,"nodeType":"1534","endLine":4,"endColumn":61},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":31,"nodeType":"1534","endLine":3,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":73,"nodeType":"1534","endLine":4,"endColumn":90},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":25,"nodeType":"1534","endLine":2,"endColumn":42},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":72,"nodeType":"1534","endLine":2,"endColumn":89},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":48,"nodeType":"1534","endLine":2,"endColumn":65},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":53,"nodeType":"1534","endLine":2,"endColumn":70},{"ruleId":"1532","severity":2,"message":"1533","line":5,"column":70,"nodeType":"1534","endLine":5,"endColumn":87},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":26,"nodeType":"1534","endLine":3,"endColumn":43},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":31,"nodeType":"1534","endLine":2,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":55,"nodeType":"1534","endLine":2,"endColumn":72},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":44,"nodeType":"1534","endLine":4,"endColumn":61},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":58,"nodeType":"1534","endLine":4,"endColumn":75},{"ruleId":"1532","severity":2,"message":"1533","line":14,"column":8,"nodeType":"1534","endLine":14,"endColumn":25},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":37,"nodeType":"1534","endLine":4,"endColumn":54},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":53,"nodeType":"1534","endLine":3,"endColumn":70},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":44,"nodeType":"1534","endLine":4,"endColumn":61},{"ruleId":"1532","severity":2,"message":"1533","line":6,"column":36,"nodeType":"1534","endLine":6,"endColumn":53},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":43,"nodeType":"1534","endLine":3,"endColumn":60},{"ruleId":"1535","severity":1,"message":"1549","line":5,"column":10,"nodeType":"1537","messageId":"1538","endLine":5,"endColumn":25},{"ruleId":"1535","severity":1,"message":"1550","line":5,"column":27,"nodeType":"1537","messageId":"1538","endLine":5,"endColumn":47},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":48,"nodeType":"1534","endLine":4,"endColumn":65},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":39,"nodeType":"1534","endLine":3,"endColumn":56},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":44,"nodeType":"1534","endLine":3,"endColumn":61},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":43,"nodeType":"1534","endLine":2,"endColumn":60},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":22,"nodeType":"1534","endLine":2,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":37,"nodeType":"1534","endLine":2,"endColumn":54},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":22,"nodeType":"1534","endLine":3,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":6,"column":63,"nodeType":"1534","endLine":6,"endColumn":80},{"ruleId":"1532","severity":2,"message":"1533","line":5,"column":44,"nodeType":"1534","endLine":5,"endColumn":61},{"ruleId":"1532","severity":2,"message":"1533","line":18,"column":8,"nodeType":"1534","endLine":18,"endColumn":25},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":49,"nodeType":"1534","endLine":4,"endColumn":66},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":28,"nodeType":"1534","endLine":3,"endColumn":45},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":31,"nodeType":"1534","endLine":2,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":39,"nodeType":"1534","endLine":3,"endColumn":56},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":81,"nodeType":"1534","endLine":4,"endColumn":98},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":33,"nodeType":"1534","endLine":2,"endColumn":50},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":33,"nodeType":"1534","endLine":2,"endColumn":50},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":71,"nodeType":"1534","endLine":3,"endColumn":88},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":60,"nodeType":"1534","endLine":2,"endColumn":77},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":81,"nodeType":"1534","endLine":2,"endColumn":98},{"ruleId":"1532","severity":2,"message":"1533","line":5,"column":56,"nodeType":"1534","endLine":5,"endColumn":73},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":38,"nodeType":"1534","endLine":3,"endColumn":55},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":99,"nodeType":"1534","endLine":3,"endColumn":116},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":37,"nodeType":"1534","endLine":3,"endColumn":54},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":32,"nodeType":"1534","endLine":3,"endColumn":49},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":26,"nodeType":"1534","endLine":3,"endColumn":43},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":45,"nodeType":"1534","endLine":4,"endColumn":62},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":36,"nodeType":"1534","endLine":4,"endColumn":53},{"ruleId":"1535","severity":1,"message":"1551","line":115,"column":9,"nodeType":"1537","messageId":"1538","endLine":115,"endColumn":13},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":54,"nodeType":"1534","endLine":3,"endColumn":71},{"ruleId":"1535","severity":1,"message":"1548","line":2,"column":18,"nodeType":"1537","messageId":"1538","endLine":2,"endColumn":27},{"ruleId":"1532","severity":2,"message":"1533","line":5,"column":29,"nodeType":"1534","endLine":5,"endColumn":46},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":40,"nodeType":"1534","endLine":2,"endColumn":57},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":68,"nodeType":"1534","endLine":2,"endColumn":85},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":80,"nodeType":"1534","endLine":3,"endColumn":97},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":47,"nodeType":"1534","endLine":3,"endColumn":64},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":23,"nodeType":"1534","endLine":2,"endColumn":40},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":63,"nodeType":"1534","endLine":2,"endColumn":80},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":35,"nodeType":"1534","endLine":2,"endColumn":52},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":37,"nodeType":"1534","endLine":2,"endColumn":54},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":31,"nodeType":"1534","endLine":3,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":45,"nodeType":"1534","endLine":3,"endColumn":62},{"ruleId":"1532","severity":2,"message":"1533","line":10,"column":8,"nodeType":"1534","endLine":10,"endColumn":25},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":50,"nodeType":"1534","endLine":2,"endColumn":67},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":66,"nodeType":"1534","endLine":3,"endColumn":83},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":24,"nodeType":"1534","endLine":3,"endColumn":41},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":55,"nodeType":"1534","endLine":2,"endColumn":72},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":29,"nodeType":"1534","endLine":3,"endColumn":46},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":54,"nodeType":"1534","endLine":3,"endColumn":71},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":61,"nodeType":"1534","endLine":3,"endColumn":78},{"ruleId":"1535","severity":1,"message":"1552","line":5,"column":8,"nodeType":"1537","messageId":"1538","endLine":5,"endColumn":17},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":31,"nodeType":"1534","endLine":2,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":5,"column":56,"nodeType":"1534","endLine":5,"endColumn":73},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":51,"nodeType":"1534","endLine":4,"endColumn":68},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":47,"nodeType":"1534","endLine":2,"endColumn":64},{"ruleId":"1535","severity":1,"message":"1553","line":4,"column":72,"nodeType":"1537","messageId":"1538","endLine":4,"endColumn":76},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":84,"nodeType":"1534","endLine":4,"endColumn":101},{"ruleId":"1535","severity":1,"message":"1554","line":14,"column":22,"nodeType":"1537","messageId":"1538","endLine":14,"endColumn":32},{"ruleId":"1535","severity":1,"message":"1555","line":21,"column":26,"nodeType":"1537","messageId":"1538","endLine":21,"endColumn":41},{"ruleId":"1535","severity":1,"message":"1556","line":31,"column":10,"nodeType":"1537","messageId":"1538","endLine":31,"endColumn":32},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":28,"nodeType":"1534","endLine":3,"endColumn":45},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":37,"nodeType":"1534","endLine":2,"endColumn":54},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":22,"nodeType":"1534","endLine":3,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":5,"column":48,"nodeType":"1534","endLine":5,"endColumn":65},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":28,"nodeType":"1534","endLine":4,"endColumn":45},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":31,"nodeType":"1534","endLine":3,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":7,"column":36,"nodeType":"1534","endLine":7,"endColumn":53},{"ruleId":"1535","severity":1,"message":"1555","line":10,"column":20,"nodeType":"1537","messageId":"1538","endLine":10,"endColumn":35},{"ruleId":"1535","severity":1,"message":"1557","line":96,"column":3,"nodeType":"1537","messageId":"1538","endLine":96,"endColumn":20},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":31,"nodeType":"1534","endLine":4,"endColumn":48},{"ruleId":"1535","severity":1,"message":"1558","line":9,"column":10,"nodeType":"1537","messageId":"1538","endLine":9,"endColumn":18},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":31,"nodeType":"1534","endLine":3,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":31,"nodeType":"1534","endLine":3,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":41,"nodeType":"1534","endLine":2,"endColumn":58},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":44,"nodeType":"1534","endLine":3,"endColumn":61},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":39,"nodeType":"1534","endLine":4,"endColumn":56},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":49,"nodeType":"1534","endLine":3,"endColumn":66},{"ruleId":"1559","severity":1,"message":"1560","line":42,"column":3,"nodeType":"1561","messageId":"1562","endLine":42,"endColumn":14},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":75,"nodeType":"1534","endLine":3,"endColumn":92},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":65,"nodeType":"1534","endLine":4,"endColumn":82},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":47,"nodeType":"1534","endLine":3,"endColumn":64},{"ruleId":"1535","severity":1,"message":"1563","line":3,"column":35,"nodeType":"1537","messageId":"1538","endLine":3,"endColumn":43},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":57,"nodeType":"1534","endLine":3,"endColumn":74},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":49,"nodeType":"1534","endLine":3,"endColumn":66},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":32,"nodeType":"1534","endLine":3,"endColumn":49},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":22,"nodeType":"1534","endLine":3,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":32,"nodeType":"1534","endLine":3,"endColumn":49},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":22,"nodeType":"1534","endLine":3,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":22,"nodeType":"1534","endLine":3,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":93,"nodeType":"1534","endLine":4,"endColumn":110},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":60,"nodeType":"1534","endLine":3,"endColumn":77},{"ruleId":"1559","severity":1,"message":"1560","line":72,"column":9,"nodeType":"1561","messageId":"1562","endLine":72,"endColumn":20},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":32,"nodeType":"1534","endLine":3,"endColumn":49},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":22,"nodeType":"1534","endLine":3,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":22,"nodeType":"1534","endLine":2,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":22,"nodeType":"1534","endLine":2,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":22,"nodeType":"1534","endLine":2,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":37,"nodeType":"1534","endLine":3,"endColumn":54},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":31,"nodeType":"1534","endLine":4,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":34,"nodeType":"1534","endLine":3,"endColumn":51},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":40,"nodeType":"1534","endLine":3,"endColumn":57},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":48,"nodeType":"1534","endLine":3,"endColumn":65},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":72,"nodeType":"1534","endLine":3,"endColumn":89},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":78,"nodeType":"1534","endLine":3,"endColumn":95},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":22,"nodeType":"1534","endLine":2,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":31,"nodeType":"1534","endLine":2,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":31,"nodeType":"1534","endLine":2,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":4,"column":31,"nodeType":"1534","endLine":4,"endColumn":48},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":60,"nodeType":"1534","endLine":2,"endColumn":77},{"ruleId":"1535","severity":1,"message":"1564","line":14,"column":93,"nodeType":"1537","messageId":"1538","endLine":14,"endColumn":105},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":22,"nodeType":"1534","endLine":3,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":48,"nodeType":"1534","endLine":3,"endColumn":65},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":37,"nodeType":"1534","endLine":3,"endColumn":54},{"ruleId":"1532","severity":2,"message":"1533","line":3,"column":49,"nodeType":"1534","endLine":3,"endColumn":66},{"ruleId":"1535","severity":1,"message":"1565","line":2,"column":35,"nodeType":"1537","messageId":"1538","endLine":2,"endColumn":39},{"ruleId":"1532","severity":2,"message":"1533","line":2,"column":47,"nodeType":"1534","endLine":2,"endColumn":64},{"ruleId":"1535","severity":1,"message":"1552","line":3,"column":8,"nodeType":"1537","messageId":"1538","endLine":3,"endColumn":17},{"ruleId":"1535","severity":1,"message":"1566","line":6,"column":10,"nodeType":"1537","messageId":"1538","endLine":6,"endColumn":26},{"ruleId":"1535","severity":1,"message":"1567","line":7,"column":10,"nodeType":"1537","messageId":"1538","endLine":7,"endColumn":24},{"ruleId":"1535","severity":1,"message":"1568","line":7,"column":26,"nodeType":"1537","messageId":"1538","endLine":7,"endColumn":42},{"ruleId":"1535","severity":1,"message":"1569","line":9,"column":10,"nodeType":"1537","messageId":"1538","endLine":9,"endColumn":24},{"ruleId":"1535","severity":1,"message":"1570","line":10,"column":8,"nodeType":"1537","messageId":"1538","endLine":10,"endColumn":17},{"ruleId":"1535","severity":1,"message":"1571","line":11,"column":10,"nodeType":"1537","messageId":"1538","endLine":11,"endColumn":18},{"ruleId":"1535","severity":1,"message":"1572","line":18,"column":7,"nodeType":"1537","messageId":"1538","endLine":18,"endColumn":10},"lines-around-directive",["1573"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"import/no-unresolved","Unable to resolve path to module '@jazzdefi/uikit'.","Literal","@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Lottery' is assigned a value but never used.","'Ifos' is assigned a value but never used.","'Collectibles' is assigned a value but never used.","'Teams' is assigned a value but never used.","'Team' is assigned a value but never used.","'Profile' is assigned a value but never used.","'profile' is assigned a value but never used.","'WinCard' is defined but never used.","'Coming' is defined but never used.","'keyframes' is defined but never used.","'StyledIconImage' is defined but never used.","'StyledImageContainer' is defined but never used.","'info' is assigned a value but never used.","'BigNumber' is defined but never used.","'Flex' is defined but never used.","'getFarmApy' is defined but never used.","'useGetApiPrices' is defined but never used.","'BASE_ADD_LIQUIDITY_URL' is defined but never used.","'stakingTokenPrice' is defined but never used.","'multiBuy' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'Skeleton' is defined but never used.","'depositFeeBP' is assigned a value but never used.","'Text' is defined but never used.","'getBalanceNumber' is defined but never used.","'useTotalSupply' is defined but never used.","'useBurnedBalance' is defined but never used.","'getCakeAddress' is defined but never used.","'CardValue' is defined but never used.","'useFarms' is defined but never used.","'Row' is assigned a value but never used.","padding-line-between-statements"]