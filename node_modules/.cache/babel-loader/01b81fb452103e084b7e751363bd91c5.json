{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AutoRenewIcon, Button, Checkbox, Flex, Text } from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport useGetProfileCosts from \"hooks/useGetProfileCosts\";\nimport { useDispatch } from \"react-redux\";\nimport { useProfile, useToast } from \"state/hooks\";\nimport { fetchProfile } from \"state/profile\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useProfile as useProfileContract } from \"hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PauseProfilePage = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const {\n    profile\n  } = useProfile();\n  const {\n    numberCakeToReactivate\n  } = useGetProfileCosts();\n  const TranslateString = useI18n();\n  const pancakeProfileContract = useProfileContract();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const dispatch = useDispatch();\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged);\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods.pauseProfile().send({\n      from: account\n    }).on(\"sending\", () => {\n      setIsConfirming(true);\n    }).on(\"receipt\", async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account));\n      toastSuccess(\"Profile Paused!\");\n      onDismiss();\n    }).on(\"error\", error => {\n      toastError(\"Error\", error === null || error === void 0 ? void 0 : error.message);\n      setIsConfirming(false);\n    });\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"failure\",\n      mb: \"24px\",\n      children: TranslateString(999, \"This will suspend your profile and send your Collectible back to your wallet\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: TranslateString(999, \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"acknowledgement\",\n      style: {\n        cursor: \"pointer\",\n        display: \"block\",\n        marginBottom: \"24px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          id: \"acknowledgement\",\n          checked: isAcknowledged,\n          onChange: handleChange,\n          scale: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"8px\",\n          children: TranslateString(999, \"I understand\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      width: \"100%\",\n      isLoading: isConfirming,\n      endIcon: isConfirming ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }, this) : null,\n      disabled: !isAcknowledged || isConfirming,\n      onClick: handleDeactivateProfile,\n      mb: \"8px\",\n      children: TranslateString(999, \"Confirm\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      width: \"100%\",\n      onClick: onDismiss,\n      children: TranslateString(999, \"Close Window\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PauseProfilePage, \"04a4j+BiT85K/cE+jasXMLVwWyI=\", false, function () {\n  return [useProfile, useGetProfileCosts, useI18n, useProfileContract, useWeb3React, useToast, useDispatch];\n});\n\n_c = PauseProfilePage;\nexport default PauseProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PauseProfilePage\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx"],"names":["React","useState","AutoRenewIcon","Button","Checkbox","Flex","Text","useI18n","useGetProfileCosts","useDispatch","useProfile","useToast","fetchProfile","getBalanceNumber","useProfileContract","useWeb3React","PauseProfilePage","onDismiss","isAcknowledged","setIsAcknowledged","isConfirming","setIsConfirming","profile","numberCakeToReactivate","TranslateString","pancakeProfileContract","account","toastSuccess","toastError","dispatch","handleChange","handleDeactivateProfile","methods","pauseProfile","send","from","on","error","message","cursor","display","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  AutoRenewIcon,\n  Button,\n  Checkbox,\n  Flex,\n  InjectedModalProps,\n  Text,\n} from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport useGetProfileCosts from \"hooks/useGetProfileCosts\";\nimport { useDispatch } from \"react-redux\";\nimport { useProfile, useToast } from \"state/hooks\";\nimport { fetchProfile } from \"state/profile\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useProfile as useProfileContract } from \"hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\n\ntype PauseProfilePageProps = InjectedModalProps;\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const { profile } = useProfile();\n  const { numberCakeToReactivate } = useGetProfileCosts();\n  const TranslateString = useI18n();\n  const pancakeProfileContract = useProfileContract();\n  const { account } = useWeb3React();\n  const { toastSuccess, toastError } = useToast();\n  const dispatch = useDispatch();\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged);\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on(\"sending\", () => {\n        setIsConfirming(true);\n      })\n      .on(\"receipt\", async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account));\n        toastSuccess(\"Profile Paused!\");\n\n        onDismiss();\n      })\n      .on(\"error\", (error) => {\n        toastError(\"Error\", error?.message);\n        setIsConfirming(false);\n      });\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"This will suspend your profile and send your Collectible back to your wallet\"\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\"\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          `Cost to reactivate in future: ${getBalanceNumber(\n            numberCakeToReactivate\n          )} CAKE`\n        )}\n      </Text>\n      <label\n        htmlFor=\"acknowledgement\"\n        style={{ cursor: \"pointer\", display: \"block\", marginBottom: \"24px\" }}\n      >\n        <Flex alignItems=\"center\">\n          <Checkbox\n            id=\"acknowledgement\"\n            checked={isAcknowledged}\n            onChange={handleChange}\n            scale=\"sm\"\n          />\n          <Text ml=\"8px\">{TranslateString(999, \"I understand\")}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={\n          isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null\n        }\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(999, \"Confirm\")}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, \"Close Window\")}\n      </Button>\n    </>\n  );\n};\n\nexport default PauseProfilePage;\n"]},"metadata":{},"sourceType":"module"}