{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/Claim.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AutoRenewIcon, Box, Button, Flex, Text } from \"@mozartfinance/uikit\";\nimport { useToast } from \"state/hooks\";\nimport useI18n from \"hooks/useI18n\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport BalanceInUsd from \"./BalanceInUsd\";\nimport MetaLabel from \"./MetaLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AmountGrid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 24px;\n`;\n_c = AmountGrid;\nconst DISPLAY_DECIMALS = 4;\n\nconst Claim = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  setPendingTx,\n  offeringTokenBalance,\n  refundingAmount,\n  setIsClaimed\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    account\n  } = useWeb3React();\n  const didContribute = userInfo.amount.gt(0);\n  const canClaim = !userInfo.claimed;\n  const contributedBalance = getBalanceNumber(userInfo.amount);\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS);\n  const {\n    tokenSymbol,\n    tokenDecimals\n  } = ifo;\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals);\n  const {\n    toastError,\n    toastSuccess\n  } = useToast();\n\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true);\n      await contract.methods.harvest().send({\n        from: account\n      });\n      setIsClaimed();\n      toastSuccess(\"Success!\", \"You have successfully claimed your rewards.\");\n    } catch (error) {\n      toastError(\"Error\", error === null || error === void 0 ? void 0 : error.message);\n      console.error(error);\n    } finally {\n      setPendingTx(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AmountGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            bold: true,\n            fontSize: \"12px\",\n            mr: \"4px\",\n            textTransform: \"uppercase\",\n            children: \"LP Tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            color: \"textSubtle\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            bold: true,\n            children: \"Committed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"20px\",\n          bold: true,\n          color: offeringTokenBalance.gt(0) ? \"text\" : \"textDisabled\",\n          children: contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetaLabel, {\n          children: canClaim ? TranslateString(999, `${refundedBalance} to reclaim`, {\n            num: refundedBalance\n          }) : TranslateString(999, `${refundedBalance} reclaimed`, {\n            num: refundedBalance\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            bold: true,\n            fontSize: \"12px\",\n            mr: \"4px\",\n            textTransform: \"uppercase\",\n            children: tokenSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), !canClaim ? /*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            color: \"textSubtle\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            bold: true,\n            children: \"Claimed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            color: \"textSubtle\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            bold: true,\n            children: \"To Claim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"20px\",\n          bold: true,\n          color: offeringTokenBalance.gt(0) ? \"text\" : \"textDisabled\",\n          children: rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), canClaim && /*#__PURE__*/_jsxDEV(BalanceInUsd, {\n          token: tokenSymbol,\n          balance: rewardBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), didContribute ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClaim,\n      disabled: isPendingTx || !canClaim,\n      width: \"100%\",\n      mb: \"24px\",\n      isLoading: isPendingTx,\n      endIcon: isPendingTx ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 27\n      }, this) : null,\n      children: canClaim ? TranslateString(999, \"Claim\") : TranslateString(999, \"Claimed\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      width: \"100%\",\n      mb: \"24px\",\n      children: TranslateString(999, \"Nothing to Claim\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      mt: \"4px\",\n      children: TranslateString(999, \"You'll be refunded any excess tokens when you claim\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Claim, \"+gAhHPgVtbRg/2lsgLk2sCUm/Jo=\", false, function () {\n  return [useI18n, useWeb3React, useToast];\n});\n\n_c2 = Claim;\nexport default Claim;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AmountGrid\");\n$RefreshReg$(_c2, \"Claim\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/Claim.tsx"],"names":["React","styled","useWeb3React","AutoRenewIcon","Box","Button","Flex","Text","useToast","useI18n","getBalanceNumber","BalanceInUsd","MetaLabel","AmountGrid","div","DISPLAY_DECIMALS","Claim","ifo","contract","userInfo","isPendingTx","setPendingTx","offeringTokenBalance","refundingAmount","setIsClaimed","TranslateString","account","didContribute","amount","gt","canClaim","claimed","contributedBalance","refundedBalance","toFixed","eq","tokenSymbol","tokenDecimals","rewardBalance","toastError","toastSuccess","handleClaim","methods","harvest","send","from","error","message","console","num"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,aAAT,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,IAA3C,QAAuD,sBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAaA,MAAMC,UAAU,GAAGZ,MAAM,CAACa,GAAI;AAC9B;AACA;AACA;AACA;AACA,CALA;KAAMD,U;AAON,MAAME,gBAAgB,GAAG,CAAzB;;AAEA,MAAMC,KAA2B,GAAG,CAAC;AACnCC,EAAAA,GADmC;AAEnCC,EAAAA,QAFmC;AAGnCC,EAAAA,QAHmC;AAInCC,EAAAA,WAJmC;AAKnCC,EAAAA,YALmC;AAMnCC,EAAAA,oBANmC;AAOnCC,EAAAA,eAPmC;AAQnCC,EAAAA;AARmC,CAAD,KAS9B;AAAA;;AACJ,QAAMC,eAAe,GAAGhB,OAAO,EAA/B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAcxB,YAAY,EAAhC;AACA,QAAMyB,aAAa,GAAGR,QAAQ,CAACS,MAAT,CAAgBC,EAAhB,CAAmB,CAAnB,CAAtB;AACA,QAAMC,QAAQ,GAAG,CAACX,QAAQ,CAACY,OAA3B;AACA,QAAMC,kBAAkB,GAAGtB,gBAAgB,CAACS,QAAQ,CAACS,MAAV,CAA3C;AACA,QAAMK,eAAe,GAAGvB,gBAAgB,CAACa,eAAD,CAAhB,CAAkCW,OAAlC,CACtBf,QAAQ,CAACS,MAAT,CAAgBO,EAAhB,CAAmB,CAAnB,IAAwB,CAAxB,GAA4BpB,gBADN,CAAxB;AAGA,QAAM;AAAEqB,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAiCpB,GAAvC;AACA,QAAMqB,aAAa,GAAG5B,gBAAgB,CAACY,oBAAD,EAAuBe,aAAvB,CAAtC;AACA,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BhC,QAAQ,EAA7C;;AAEA,QAAMiC,WAAW,GAAG,YAAY;AAC9B,QAAI;AACFpB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMH,QAAQ,CAACwB,OAAT,CAAiBC,OAAjB,GAA2BC,IAA3B,CAAgC;AAAEC,QAAAA,IAAI,EAAEnB;AAAR,OAAhC,CAAN;AACAF,MAAAA,YAAY;AACZgB,MAAAA,YAAY,CAAC,UAAD,EAAa,6CAAb,CAAZ;AACD,KALD,CAKE,OAAOM,KAAP,EAAc;AACdP,MAAAA,UAAU,CAAC,OAAD,EAAUO,KAAV,aAAUA,KAAV,uBAAUA,KAAK,CAAEC,OAAjB,CAAV;AACAC,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD,KARD,SAQU;AACRzB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAZD;;AAcA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA,8BACE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,KAAT;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,IAAI,MAFN;AAGE,YAAA,QAAQ,EAAC,MAHX;AAIE,YAAA,EAAE,EAAC,KAJL;AAKE,YAAA,aAAa,EAAC,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,KAAK,EAAC,YAFR;AAGE,YAAA,QAAQ,EAAC,MAHX;AAIE,YAAA,aAAa,EAAC,WAJhB;AAKE,YAAA,IAAI,MALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAqBE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAC,MADX;AAEE,UAAA,IAAI,MAFN;AAGE,UAAA,KAAK,EAAEC,oBAAoB,CAACO,EAArB,CAAwB,CAAxB,IAA6B,MAA7B,GAAsC,cAH/C;AAAA,oBAKGG,kBAAkB,CAACE,OAAnB,CACCf,QAAQ,CAACS,MAAT,CAAgBO,EAAhB,CAAmB,CAAnB,IAAwB,CAAxB,GAA4BpB,gBAD7B;AALH;AAAA;AAAA;AAAA;AAAA,gBArBF,eA8BE,QAAC,SAAD;AAAA,oBACGe,QAAQ,GACLL,eAAe,CAAC,GAAD,EAAO,GAAEQ,eAAgB,aAAzB,EAAuC;AACpDgB,YAAAA,GAAG,EAAEhB;AAD+C,WAAvC,CADV,GAILR,eAAe,CAAC,GAAD,EAAO,GAAEQ,eAAgB,YAAzB,EAAsC;AACnDgB,YAAAA,GAAG,EAAEhB;AAD8C,WAAtC;AALrB;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAyCE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,KAAT;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,IAAI,MAFN;AAGE,YAAA,QAAQ,EAAC,MAHX;AAIE,YAAA,EAAE,EAAC,KAJL;AAKE,YAAA,aAAa,EAAC,WALhB;AAAA,sBAOGG;AAPH;AAAA;AAAA;AAAA;AAAA,kBADF,EAUG,CAACN,QAAD,gBACC,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,KAAK,EAAC,YAFR;AAGE,YAAA,QAAQ,EAAC,MAHX;AAIE,YAAA,aAAa,EAAC,WAJhB;AAKE,YAAA,IAAI,MALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAWC,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,KAAK,EAAC,YAFR;AAGE,YAAA,QAAQ,EAAC,MAHX;AAIE,YAAA,aAAa,EAAC,WAJhB;AAKE,YAAA,IAAI,MALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAiCE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAC,MADX;AAEE,UAAA,IAAI,MAFN;AAGE,UAAA,KAAK,EAAER,oBAAoB,CAACO,EAArB,CAAwB,CAAxB,IAA6B,MAA7B,GAAsC,cAH/C;AAAA,oBAKGS,aAAa,CAACJ,OAAd,CACCZ,oBAAoB,CAACa,EAArB,CAAwB,CAAxB,IAA6B,CAA7B,GAAiCpB,gBADlC;AALH;AAAA;AAAA;AAAA;AAAA,gBAjCF,EA0CGe,QAAQ,iBACP,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEM,WAArB;AAAkC,UAAA,OAAO,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAyFGX,aAAa,gBACZ,QAAC,MAAD;AACE,MAAA,OAAO,EAAEc,WADX;AAEE,MAAA,QAAQ,EAAErB,WAAW,IAAI,CAACU,QAF5B;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,EAAE,EAAC,MAJL;AAKE,MAAA,SAAS,EAAEV,WALb;AAME,MAAA,OAAO,EACLA,WAAW,gBAAG,QAAC,aAAD;AAAe,QAAA,IAAI,MAAnB;AAAoB,QAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiD,IAPhE;AAAA,gBAUGU,QAAQ,GACLL,eAAe,CAAC,GAAD,EAAM,OAAN,CADV,GAELA,eAAe,CAAC,GAAD,EAAM,SAAN;AAZrB;AAAA;AAAA;AAAA;AAAA,YADY,gBAgBZ,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,MAAvB;AAA8B,MAAA,EAAE,EAAC,MAAjC;AAAA,gBACGA,eAAe,CAAC,GAAD,EAAM,kBAAN;AADlB;AAAA;AAAA;AAAA;AAAA,YAzGJ,eA6GE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,KAAT;AAAA,gBACGA,eAAe,CACd,GADc,EAEd,qDAFc;AADlB;AAAA;AAAA;AAAA;AAAA,YA7GF;AAAA,kBADF;AAsHD,CA1JD;;GAAMT,K;UAUoBP,O,EACJP,Y,EASiBM,Q;;;MApBjCQ,K;AA4JN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"web3-eth-contract\";\nimport { AutoRenewIcon, Box, Button, Flex, Text } from \"@mozartfinance/uikit\";\nimport { useToast } from \"state/hooks\";\nimport useI18n from \"hooks/useI18n\";\nimport { UserInfo, WalletIfoState } from \"hooks/useGetWalletIfoData\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { Ifo } from \"config/constants/types\";\nimport BalanceInUsd from \"./BalanceInUsd\";\nimport MetaLabel from \"./MetaLabel\";\n\ninterface ClaimProps {\n  ifo: Ifo;\n  contract: Contract;\n  userInfo: UserInfo;\n  isPendingTx: WalletIfoState[\"isPendingTx\"];\n  setPendingTx: (status: boolean) => void;\n  offeringTokenBalance: WalletIfoState[\"offeringTokenBalance\"];\n  refundingAmount: WalletIfoState[\"refundingAmount\"];\n  setIsClaimed: () => void;\n}\n\nconst AmountGrid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 24px;\n`;\n\nconst DISPLAY_DECIMALS = 4;\n\nconst Claim: React.FC<ClaimProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  setPendingTx,\n  offeringTokenBalance,\n  refundingAmount,\n  setIsClaimed,\n}) => {\n  const TranslateString = useI18n();\n  const { account } = useWeb3React();\n  const didContribute = userInfo.amount.gt(0);\n  const canClaim = !userInfo.claimed;\n  const contributedBalance = getBalanceNumber(userInfo.amount);\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(\n    userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS\n  );\n  const { tokenSymbol, tokenDecimals } = ifo;\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals);\n  const { toastError, toastSuccess } = useToast();\n\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true);\n      await contract.methods.harvest().send({ from: account });\n      setIsClaimed();\n      toastSuccess(\"Success!\", \"You have successfully claimed your rewards.\");\n    } catch (error) {\n      toastError(\"Error\", error?.message);\n      console.error(error);\n    } finally {\n      setPendingTx(false);\n    }\n  };\n\n  return (\n    <>\n      <AmountGrid>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text\n              as=\"span\"\n              bold\n              fontSize=\"12px\"\n              mr=\"4px\"\n              textTransform=\"uppercase\"\n            >\n              LP Tokens\n            </Text>\n            <Text\n              as=\"span\"\n              color=\"textSubtle\"\n              fontSize=\"12px\"\n              textTransform=\"uppercase\"\n              bold\n            >\n              Committed\n            </Text>\n          </Flex>\n          <Text\n            fontSize=\"20px\"\n            bold\n            color={offeringTokenBalance.gt(0) ? \"text\" : \"textDisabled\"}\n          >\n            {contributedBalance.toFixed(\n              userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS\n            )}\n          </Text>\n          <MetaLabel>\n            {canClaim\n              ? TranslateString(999, `${refundedBalance} to reclaim`, {\n                  num: refundedBalance,\n                })\n              : TranslateString(999, `${refundedBalance} reclaimed`, {\n                  num: refundedBalance,\n                })}\n          </MetaLabel>\n        </Box>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text\n              as=\"span\"\n              bold\n              fontSize=\"12px\"\n              mr=\"4px\"\n              textTransform=\"uppercase\"\n            >\n              {tokenSymbol}\n            </Text>\n            {!canClaim ? (\n              <Text\n                as=\"span\"\n                color=\"textSubtle\"\n                fontSize=\"12px\"\n                textTransform=\"uppercase\"\n                bold\n              >\n                Claimed\n              </Text>\n            ) : (\n              <Text\n                as=\"span\"\n                color=\"textSubtle\"\n                fontSize=\"12px\"\n                textTransform=\"uppercase\"\n                bold\n              >\n                To Claim\n              </Text>\n            )}\n          </Flex>\n          <Text\n            fontSize=\"20px\"\n            bold\n            color={offeringTokenBalance.gt(0) ? \"text\" : \"textDisabled\"}\n          >\n            {rewardBalance.toFixed(\n              offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS\n            )}\n          </Text>\n          {canClaim && (\n            <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />\n          )}\n        </Box>\n      </AmountGrid>\n      {didContribute ? (\n        <Button\n          onClick={handleClaim}\n          disabled={isPendingTx || !canClaim}\n          width=\"100%\"\n          mb=\"24px\"\n          isLoading={isPendingTx}\n          endIcon={\n            isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null\n          }\n        >\n          {canClaim\n            ? TranslateString(999, \"Claim\")\n            : TranslateString(999, \"Claimed\")}\n        </Button>\n      ) : (\n        <Button disabled width=\"100%\" mb=\"24px\">\n          {TranslateString(999, \"Nothing to Claim\")}\n        </Button>\n      )}\n      <Text mt=\"4px\">\n        {TranslateString(\n          999,\n          \"You'll be refunded any excess tokens when you claim\"\n        )}\n      </Text>\n    </>\n  );\n};\n\nexport default Claim;\n"]},"metadata":{},"sourceType":"module"}