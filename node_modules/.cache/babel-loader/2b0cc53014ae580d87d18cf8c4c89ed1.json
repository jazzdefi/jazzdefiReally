{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Home/components/CakeStats.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport BigNumber from \"bignumber.js/bignumber\";\nimport { Card, CardBody, Heading, Text } from \"@mozartfinance/uikit\";\nimport styled from \"styled-components\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useTotalSupply, useBurnedBalance } from \"hooks/useTokenBalance\";\nimport useI18n from \"hooks/useI18n\";\nimport { getCakeAddress } from \"utils/addressHelpers\";\nimport CardValue from \"./CardValue\";\nimport { usePriceCakeBusd } from \"../../../state/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`;\n_c = StyledCakeStats;\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n_c2 = Row;\n\nconst CakeStats = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const totalSupply = useTotalSupply();\n  const burnedBalance = useBurnedBalance(getCakeAddress());\n  const pianoPrice = usePriceCakeBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const marketCap = pianoPrice.times(circSupply);\n  const pianoPerBlock = 1;\n  return /*#__PURE__*/_jsxDEV(StyledCakeStats, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: TranslateString(534, \"JAZZ Stats\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(10005, \"Market Cap\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: getBalanceNumber(marketCap),\n          decimals: 0,\n          prefix: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(536, \"Total Minted\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), totalSupply && /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: getBalanceNumber(totalSupply),\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(538, \"Total Burned\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: getBalanceNumber(burnedBalance),\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(10004, \"Circulating Supply\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), cakeSupply && /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: cakeSupply,\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(540, \"New JAZZ/block\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: pianoPerBlock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeStats, \"92vjA7JWmvosYx7m1pWCu3Wq+3g=\", false, function () {\n  return [useI18n, useTotalSupply, useBurnedBalance, usePriceCakeBusd];\n});\n\n_c3 = CakeStats;\nexport default CakeStats;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCakeStats\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"CakeStats\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Home/components/CakeStats.tsx"],"names":["React","BigNumber","Card","CardBody","Heading","Text","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","usePriceCakeBusd","StyledCakeStats","Row","div","CakeStats","TranslateString","totalSupply","burnedBalance","pianoPrice","circSupply","minus","cakeSupply","marketCap","times","pianoPerBlock"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BigNumber from \"bignumber.js/bignumber\";\nimport { Card, CardBody, Heading, Text } from \"@mozartfinance/uikit\";\nimport styled from \"styled-components\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useTotalSupply, useBurnedBalance } from \"hooks/useTokenBalance\";\nimport useI18n from \"hooks/useI18n\";\nimport { getCakeAddress } from \"utils/addressHelpers\";\nimport CardValue from \"./CardValue\";\nimport { usePriceCakeBusd } from \"../../../state/hooks\";\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n\nconst CakeStats = () => {\n  const TranslateString = useI18n();\n  const totalSupply = useTotalSupply();\n  const burnedBalance = useBurnedBalance(getCakeAddress());\n  const pianoPrice = usePriceCakeBusd();\n  const circSupply = totalSupply\n    ? totalSupply.minus(burnedBalance)\n    : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const marketCap = pianoPrice.times(circSupply);\n  const pianoPerBlock = 1;\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, \"JAZZ Stats\")}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10005, \"Market Cap\")}</Text>\n          <CardValue\n            fontSize=\"14px\"\n            value={getBalanceNumber(marketCap)}\n            decimals={0}\n            prefix=\"$\"\n          />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, \"Total Minted\")}</Text>\n          {totalSupply && (\n            <CardValue\n              fontSize=\"14px\"\n              value={getBalanceNumber(totalSupply)}\n              decimals={0}\n            />\n          )}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, \"Total Burned\")}</Text>\n          <CardValue\n            fontSize=\"14px\"\n            value={getBalanceNumber(burnedBalance)}\n            decimals={0}\n          />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">\n            {TranslateString(10004, \"Circulating Supply\")}\n          </Text>\n          {cakeSupply && (\n            <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />\n          )}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, \"New JAZZ/block\")}</Text>\n          <Text bold fontSize=\"14px\">\n            {pianoPerBlock}\n          </Text>\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  );\n};\n\nexport default CakeStats;\n"]},"metadata":{},"sourceType":"module"}