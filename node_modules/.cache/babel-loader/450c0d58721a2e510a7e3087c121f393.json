{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/PercentageOfTotal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Text } from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PercentageOfTotal = ({\n  userAmount,\n  totalAmount\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const percentOfUserContribution = userAmount.div(totalAmount).times(100).toNumber();\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, {\n    maximumFractionDigits: 5\n  });\n  return /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"14px\",\n    color: \"textSubtle\",\n    children: TranslateString(999, `${percentofUserDisplay}% of total`, {\n      num: percentofUserDisplay\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PercentageOfTotal, \"SC/Zc+rnUQSfBje7TuuyRy0lI/g=\", false, function () {\n  return [useI18n];\n});\n\n_c = PercentageOfTotal;\nexport default PercentageOfTotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PercentageOfTotal\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/PercentageOfTotal.tsx"],"names":["React","Text","useI18n","PercentageOfTotal","userAmount","totalAmount","TranslateString","percentOfUserContribution","div","times","toNumber","percentofUserDisplay","toLocaleString","undefined","maximumFractionDigits","num"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,sBAArB;AAEA,OAAOC,OAAP,MAAoB,eAApB;;;AAOA,MAAMC,iBAAmD,GAAG,CAAC;AAC3DC,EAAAA,UAD2D;AAE3DC,EAAAA;AAF2D,CAAD,KAGtD;AAAA;;AACJ,QAAMC,eAAe,GAAGJ,OAAO,EAA/B;AACA,QAAMK,yBAAyB,GAAGH,UAAU,CACzCI,GAD+B,CAC3BH,WAD2B,EAE/BI,KAF+B,CAEzB,GAFyB,EAG/BC,QAH+B,EAAlC;AAIA,QAAMC,oBAAoB,GAAGJ,yBAAyB,CAACK,cAA1B,CAC3BC,SAD2B,EAE3B;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAF2B,CAA7B;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,YAA5B;AAAA,cACGR,eAAe,CAAC,GAAD,EAAO,GAAEK,oBAAqB,YAA9B,EAA2C;AACzDI,MAAAA,GAAG,EAAEJ;AADoD,KAA3C;AADlB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;GAAMR,iB;UAIoBD,O;;;KAJpBC,iB;AAuBN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Text } from \"@mozartfinance/uikit\";\nimport { UserInfo } from \"hooks/useGetWalletIfoData\";\nimport useI18n from \"hooks/useI18n\";\n\ninterface PercentageOfTotalProps {\n  userAmount: UserInfo[\"amount\"];\n  totalAmount: BigNumber;\n}\n\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({\n  userAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n();\n  const percentOfUserContribution = userAmount\n    .div(totalAmount)\n    .times(100)\n    .toNumber();\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(\n    undefined,\n    { maximumFractionDigits: 5 }\n  );\n\n  return (\n    <Text fontSize=\"14px\" color=\"textSubtle\">\n      {TranslateString(999, `${percentofUserDisplay}% of total`, {\n        num: percentofUserDisplay,\n      })}\n    </Text>\n  );\n};\n\nexport default PercentageOfTotal;\n"]},"metadata":{},"sourceType":"module"}