{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Modal, Text, LinkExternal, Flex } from '@jazzdefi/uikit';\nimport useI18n from 'hooks/useI18n';\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`;\n_c = Grid;\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`;\n_c2 = GridItem;\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`;\n_c3 = Description;\n\nconst ApyCalculatorModal = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber();\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 1,\n    farmApy: apy,\n    cakePrice\n  });\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 7,\n    farmApy: apy,\n    cakePrice\n  });\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 30,\n    farmApy: apy,\n    cakePrice\n  });\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy: apy,\n    cakePrice\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"ROI\",\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"20px\",\n          children: TranslateString(860, 'Timeframe')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"20px\",\n          children: TranslateString(858, 'ROI')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"20px\",\n          children: TranslateString(864, 'JAZZ per $1000')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"1d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand1D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand1D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"7d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand7D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand7D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"30d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand30D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand30D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"365d(APY)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand365D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand365D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      fontSize: \"12px\",\n      color: \"textSubtle\",\n      children: TranslateString(866, 'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n        href: addLiquidityUrl,\n        children: [TranslateString(999, 'Get'), \" \", lpLabel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApyCalculatorModal, \"SC/Zc+rnUQSfBje7TuuyRy0lI/g=\", false, function () {\n  return [useI18n];\n});\n\n_c4 = ApyCalculatorModal;\nexport default ApyCalculatorModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"GridItem\");\n$RefreshReg$(_c3, \"Description\");\n$RefreshReg$(_c4, \"ApyCalculatorModal\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx"],"names":["React","styled","Modal","Text","LinkExternal","Flex","useI18n","calculateCakeEarnedPerThousandDollars","apyModalRoi","Grid","div","GridItem","Description","ApyCalculatorModal","onDismiss","lpLabel","cakePrice","apy","addLiquidityUrl","TranslateString","oneThousandDollarsWorthOfCake","toNumber","cakeEarnedPerThousand1D","numberOfDays","farmApy","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","amountEarned","amountInvested"],"mappings":"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","sourcesContent":["import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 1,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 7,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 30,\n    farmApy: apy,\n    cakePrice,\n  })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy: apy,\n    cakePrice,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(864, 'JAZZ per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand1D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand7D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: cakeEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfCake,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          866,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n"]},"metadata":{},"sourceType":"module"}