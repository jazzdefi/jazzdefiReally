{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Farms/Farms.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport { Route, useRouteMatch, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport BigNumber from \"bignumber.js\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Image, Heading, Toggle, Text } from \"@mozartfinance/uikit\";\nimport styled from \"styled-components\";\nimport FlexLayout from \"components/layout/Flex\";\nimport Page from \"components/layout/Page\";\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from \"state/hooks\";\nimport useRefresh from \"hooks/useRefresh\";\nimport { fetchFarmUserDataAsync } from \"state/actions\";\nimport useI18n from \"hooks/useI18n\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { getFarmApy } from \"utils/apy\";\nimport { orderBy } from \"lodash\";\nimport FarmCard from \"./components/FarmCard/FarmCard\";\nimport Table from \"./components/FarmTable/FarmTable\";\nimport FarmTabButtons from \"./components/FarmTabButtons\";\nimport SearchInput from \"./components/SearchInput\";\nimport ToggleView from \"./components/ToggleView/ToggleView\";\nimport { DesktopColumnSchema, ViewMode } from \"./components/types\";\nimport Select from \"./components/Select/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n  }\n`;\n_c = ControlContainer;\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`;\n_c2 = ToggleWrapper;\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`;\n_c3 = LabelWrapper;\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`;\n_c4 = FilterContainer;\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`;\n_c5 = ViewControls;\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`;\n_c6 = StyledImage;\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: ${({\n  theme\n}) => theme.colors.gradients.gold};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n_c7 = Header;\n\nconst Farms = () => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    pathname\n  } = useLocation();\n  const TranslateString = useI18n();\n  const farmsLP = useFarms();\n  const cakePrice = usePriceCakeBusd();\n  const [query, setQuery] = useState(\"\");\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE);\n  const {\n    account\n  } = useWeb3React();\n  const [sortOption, setSortOption] = useState(\"hot\");\n  const prices = useGetApiPrices();\n  const dispatch = useDispatch();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const [stackedOnly, setStackedOnly] = useState(false);\n  const isActive = !pathname.includes(\"history\");\n  const activeFarms = farmsLP.filter(farm => farm.pid !== 0 && farm.multiplier !== \"0X\");\n  const inactiveFarms = farmsLP.filter(farm => farm.pid !== 0 && farm.multiplier === \"0X\");\n  const stackedOnlyFarms = activeFarms.filter(farm => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0));\n  const stackedInactiveFarms = inactiveFarms.filter(farm => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0));\n\n  const sortFarms = farms => {\n    switch (sortOption) {\n      case \"apr\":\n        return orderBy(farms, farm => farm.apy, \"desc\");\n\n      case \"multiplier\":\n        return orderBy(farms, farm => farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0, \"desc\");\n\n      case \"earned\":\n        return orderBy(farms, farm => farm.userData ? farm.userData.earnings : 0, \"desc\");\n\n      case \"liquidity\":\n        return orderBy(farms, farm => Number(farm.liquidity), \"desc\");\n\n      default:\n        return farms;\n    }\n  };\n\n  const farmsList = useCallback(farmsToDisplay => {\n    let farmsToDisplayWithAPY = farmsToDisplay.map(farm => {\n      if (!farm.lpTotalInQuoteToken || !prices) {\n        return farm;\n      }\n\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()];\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd);\n      const apy = isActive ? getFarmApy(farm.poolWeight, cakePrice, totalLiquidity) : 0;\n      return { ...farm,\n        apy,\n        liquidity: totalLiquidity\n      };\n    });\n\n    if (query) {\n      const lowercaseQuery = query.toLowerCase();\n      farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter(farm => {\n        return farm.lpSymbol.toLowerCase().includes(lowercaseQuery);\n      });\n    }\n\n    return farmsToDisplayWithAPY;\n  }, [cakePrice, prices, query, isActive]);\n\n  const handleChangeQuery = event => {\n    setQuery(event.target.value);\n  };\n\n  let farmsStaked = [];\n\n  if (isActive) {\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms);\n  } else {\n    farmsStaked = stackedOnly ? farmsList(stackedInactiveFarms) : farmsList(inactiveFarms);\n  }\n\n  farmsStaked = sortFarms(farmsStaked);\n  const rowData = farmsStaked.map(farm => {\n    const {\n      token,\n      quoteToken\n    } = farm;\n    const tokenAddress = token.address;\n    const quoteTokenAddress = quoteToken.address;\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(\" \")[0].toUpperCase().replace(\"PANCAKE\", \"\");\n    const row = {\n      apr: {\n        value: farm.apy && farm.apy.toLocaleString(\"en-US\", {\n          maximumFractionDigits: 2\n        }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apy\n      },\n      farm: {\n        image: farm.lpSymbol.split(\" \")[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n        depositFeeBP: farm.depositFeeBP\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid\n      },\n      liquidity: {\n        liquidity: farm.liquidity\n      },\n      multiplier: {\n        multiplier: farm.multiplier\n      },\n      details: farm\n    };\n    return row;\n  });\n\n  const renderContent = () => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema;\n      const columns = columnSchema.map(column => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a, b) => {\n          switch (column.name) {\n            case \"farm\":\n              return b.id - a.id;\n\n            case \"apr\":\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value);\n              }\n\n              return 0;\n\n            case \"earned\":\n              return a.original.earned.earnings - b.original.earned.earnings;\n\n            default:\n              return 1;\n          }\n        },\n        sortable: column.sortable\n      }));\n      return /*#__PURE__*/_jsxDEV(Table, {\n        data: rowData,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FlexLayout, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${path}`,\n          children: farmsStaked.map(farm => /*#__PURE__*/_jsxDEV(FarmCard, {\n            farm: farm,\n            cakePrice: cakePrice,\n            account: account,\n            removed: false\n          }, farm.pid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${path}/history`,\n          children: farmsStaked.map(farm => /*#__PURE__*/_jsxDEV(FarmCard, {\n            farm: farm,\n            cakePrice: cakePrice,\n            account: account,\n            removed: true\n          }, farm.pid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleSortOptionChange = option => {\n    setSortOption(option.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        size: \"xxl\",\n        color: \"#ffffff\",\n        mb: \"24px\",\n        children: TranslateString(999, \"Farms\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        color: \"text\",\n        children: TranslateString(999, \"Stake Liquidity Pool (LP) tokens to earn.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(ControlContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ViewControls, {\n          children: [/*#__PURE__*/_jsxDEV(ToggleView, {\n            viewMode: viewMode,\n            onToggle: mode => setViewMode(mode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Toggle, {\n              checked: stackedOnly,\n              onChange: () => setStackedOnly(!stackedOnly),\n              scale: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\" \", TranslateString(1116, \"Staked only\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FarmTabButtons, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n          children: [/*#__PURE__*/_jsxDEV(LabelWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"SORT BY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: [{\n                label: \"Hot\",\n                value: \"hot\"\n              }, {\n                label: \"APR\",\n                value: \"apr\"\n              }, {\n                label: \"Multiplier\",\n                value: \"multiplier\"\n              }, {\n                label: \"Earned\",\n                value: \"earned\"\n              }, {\n                label: \"Liquidity\",\n                value: \"liquidity\"\n              }],\n              onChange: handleSortOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelWrapper, {\n            style: {\n              marginLeft: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"SEARCH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n              onChange: handleChangeQuery,\n              value: query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), renderContent(), /*#__PURE__*/_jsxDEV(StyledImage, {\n        src: \"/images/music.png\",\n        alt: \"Music notes\",\n        width: 300,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Farms, \"+W/yr42b/dw5uNY9n/dRayx8Ask=\", false, function () {\n  return [useRouteMatch, useLocation, useI18n, useFarms, usePriceCakeBusd, useWeb3React, useGetApiPrices, useDispatch, useRefresh];\n});\n\n_c8 = Farms;\nexport default Farms;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"ControlContainer\");\n$RefreshReg$(_c2, \"ToggleWrapper\");\n$RefreshReg$(_c3, \"LabelWrapper\");\n$RefreshReg$(_c4, \"FilterContainer\");\n$RefreshReg$(_c5, \"ViewControls\");\n$RefreshReg$(_c6, \"StyledImage\");\n$RefreshReg$(_c7, \"Header\");\n$RefreshReg$(_c8, \"Farms\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useLocation","useDispatch","BigNumber","useWeb3React","Image","Heading","Toggle","Text","styled","FlexLayout","Page","useFarms","usePriceCakeBusd","useGetApiPrices","useRefresh","fetchFarmUserDataAsync","useI18n","getBalanceNumber","getFarmApy","orderBy","FarmCard","Table","FarmTabButtons","SearchInput","ToggleView","DesktopColumnSchema","ViewMode","Select","ControlContainer","div","theme","mediaQueries","sm","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Header","colors","gradients","gold","Farms","path","pathname","TranslateString","farmsLP","cakePrice","query","setQuery","viewMode","setViewMode","TABLE","account","sortOption","setSortOption","prices","dispatch","fastRefresh","stackedOnly","setStackedOnly","isActive","includes","activeFarms","filter","farm","pid","multiplier","inactiveFarms","stackedOnlyFarms","userData","stakedBalance","isGreaterThan","stackedInactiveFarms","sortFarms","farms","apy","Number","slice","earnings","liquidity","farmsList","farmsToDisplay","farmsToDisplayWithAPY","map","lpTotalInQuoteToken","quoteTokenPriceUsd","quoteToken","symbol","toLowerCase","totalLiquidity","times","poolWeight","lowercaseQuery","lpSymbol","handleChangeQuery","event","target","value","farmsStaked","rowData","token","tokenAddress","address","quoteTokenAddress","lpLabel","split","toUpperCase","replace","row","apr","toLocaleString","maximumFractionDigits","originalValue","image","toLocaleLowerCase","label","depositFeeBP","earned","details","renderContent","length","columnSchema","columns","column","id","name","sort","a","b","original","sortable","handleSortOptionChange","option","mode","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,WAA/B,QAAkD,kBAAlD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAkCC,MAAlC,EAA0CC,IAA1C,QAAsD,sBAAtD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,eAArC,QAA4D,aAA5D;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,sBAAT,QAAuC,eAAvC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAOC,QAAP,MAA8C,gCAA9C;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,oBAA9C;AACA,OAAOC,MAAP,MAAoC,4BAApC;;;AAEA,MAAMC,gBAAgB,GAAGpB,MAAM,CAACqB,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA;AACA,CAdA;KAAMJ,gB;AAgBN,MAAMK,aAAa,GAAGzB,MAAM,CAACqB,GAAI;AACjC;AACA;AACA;AACA;AACA,IAAItB,IAAK;AACT;AACA;AACA,CARA;MAAM0B,a;AAUN,MAAMC,YAAY,GAAG1B,MAAM,CAACqB,GAAI;AAChC,MAAMtB,IAAK;AACX;AACA;AACA,CAJA;MAAM2B,Y;AAMN,MAAMC,eAAe,GAAG3B,MAAM,CAACqB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CAVA;MAAMG,e;AAYN,MAAMC,YAAY,GAAG5B,MAAM,CAACqB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMI,Y;AAqBN,MAAMC,WAAW,GAAG7B,MAAM,CAACJ,KAAD,CAAQ;AAClC;AACA;AACA;AACA,CAJA;MAAMiC,W;AAMN,MAAMC,MAAM,GAAG9B,MAAM,CAACqB,GAAI;AAC1B;AACA,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACS,MAAN,CAAaC,SAAb,CAAuBC,IAAK;AAC3D;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CAXA;MAAMM,M;;AAaN,MAAMI,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAW5C,aAAa,EAA9B;AACA,QAAM;AAAE6C,IAAAA;AAAF,MAAe5C,WAAW,EAAhC;AACA,QAAM6C,eAAe,GAAG7B,OAAO,EAA/B;AACA,QAAM8B,OAAO,GAAGnC,QAAQ,EAAxB;AACA,QAAMoC,SAAS,GAAGnC,gBAAgB,EAAlC;AACA,QAAM,CAACoC,KAAD,EAAQC,QAAR,IAAoBpD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqD,QAAD,EAAWC,WAAX,IAA0BtD,QAAQ,CAAC6B,QAAQ,CAAC0B,KAAV,CAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAclD,YAAY,EAAhC;AACA,QAAM,CAACmD,UAAD,EAAaC,aAAb,IAA8B1D,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM2D,MAAM,GAAG3C,eAAe,EAA9B;AAEA,QAAM4C,QAAQ,GAAGxD,WAAW,EAA5B;AACA,QAAM;AAAEyD,IAAAA;AAAF,MAAkB5C,UAAU,EAAlC;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0D,OAAJ,EAAa;AACXI,MAAAA,QAAQ,CAAC1C,sBAAsB,CAACsC,OAAD,CAAvB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,EAAUI,QAAV,EAAoBC,WAApB,CAJM,CAAT;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC/D,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMgE,QAAQ,GAAG,CAACjB,QAAQ,CAACkB,QAAT,CAAkB,SAAlB,CAAlB;AAEA,QAAMC,WAAW,GAAGjB,OAAO,CAACkB,MAAR,CACjBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAa,CAAb,IAAkBD,IAAI,CAACE,UAAL,KAAoB,IAD9B,CAApB;AAGA,QAAMC,aAAa,GAAGtB,OAAO,CAACkB,MAAR,CACnBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAa,CAAb,IAAkBD,IAAI,CAACE,UAAL,KAAoB,IAD5B,CAAtB;AAIA,QAAME,gBAAgB,GAAGN,WAAW,CAACC,MAAZ,CACtBC,IAAD,IACEA,IAAI,CAACK,QAAL,IACA,IAAIpE,SAAJ,CAAc+D,IAAI,CAACK,QAAL,CAAcC,aAA5B,EAA2CC,aAA3C,CAAyD,CAAzD,CAHqB,CAAzB;AAMA,QAAMC,oBAAoB,GAAGL,aAAa,CAACJ,MAAd,CAC1BC,IAAD,IACEA,IAAI,CAACK,QAAL,IACA,IAAIpE,SAAJ,CAAc+D,IAAI,CAACK,QAAL,CAAcC,aAA5B,EAA2CC,aAA3C,CAAyD,CAAzD,CAHyB,CAA7B;;AAMA,QAAME,SAAS,GAAIC,KAAD,IAAyD;AACzE,YAAQrB,UAAR;AACE,WAAK,KAAL;AACE,eAAOnC,OAAO,CAACwD,KAAD,EAASV,IAAD,IAA+BA,IAAI,CAACW,GAA5C,EAAiD,MAAjD,CAAd;;AACF,WAAK,YAAL;AACE,eAAOzD,OAAO,CACZwD,KADY,EAEXV,IAAD,IACEA,IAAI,CAACE,UAAL,GAAkBU,MAAM,CAACZ,IAAI,CAACE,UAAL,CAAgBW,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAD,CAAxB,GAAyD,CAH/C,EAIZ,MAJY,CAAd;;AAMF,WAAK,QAAL;AACE,eAAO3D,OAAO,CACZwD,KADY,EAEXV,IAAD,IACEA,IAAI,CAACK,QAAL,GAAgBL,IAAI,CAACK,QAAL,CAAcS,QAA9B,GAAyC,CAH/B,EAIZ,MAJY,CAAd;;AAMF,WAAK,WAAL;AACE,eAAO5D,OAAO,CACZwD,KADY,EAEXV,IAAD,IAA+BY,MAAM,CAACZ,IAAI,CAACe,SAAN,CAFzB,EAGZ,MAHY,CAAd;;AAKF;AACE,eAAOL,KAAP;AAxBJ;AA0BD,GA3BD;;AA6BA,QAAMM,SAAS,GAAGrF,WAAW,CAC1BsF,cAAD,IAAmD;AACjD,QAAIC,qBAA4C,GAAGD,cAAc,CAACE,GAAf,CAChDnB,IAAD,IAAU;AACR,UAAI,CAACA,IAAI,CAACoB,mBAAN,IAA6B,CAAC7B,MAAlC,EAA0C;AACxC,eAAOS,IAAP;AACD;;AAED,YAAMqB,kBAAkB,GACtB9B,MAAM,CAACS,IAAI,CAACsB,UAAL,CAAgBC,MAAhB,CAAuBC,WAAvB,EAAD,CADR;AAEA,YAAMC,cAAc,GAAG,IAAIxF,SAAJ,CAAc+D,IAAI,CAACoB,mBAAnB,EAAwCM,KAAxC,CACrBL,kBADqB,CAAvB;AAGA,YAAMV,GAAG,GAAGf,QAAQ,GAChB3C,UAAU,CAAC+C,IAAI,CAAC2B,UAAN,EAAkB7C,SAAlB,EAA6B2C,cAA7B,CADM,GAEhB,CAFJ;AAIA,aAAO,EAAE,GAAGzB,IAAL;AAAWW,QAAAA,GAAX;AAAgBI,QAAAA,SAAS,EAAEU;AAA3B,OAAP;AACD,KAhBgD,CAAnD;;AAmBA,QAAI1C,KAAJ,EAAW;AACT,YAAM6C,cAAc,GAAG7C,KAAK,CAACyC,WAAN,EAAvB;AACAN,MAAAA,qBAAqB,GAAGA,qBAAqB,CAACnB,MAAtB,CACrBC,IAAD,IAA+B;AAC7B,eAAOA,IAAI,CAAC6B,QAAL,CAAcL,WAAd,GAA4B3B,QAA5B,CAAqC+B,cAArC,CAAP;AACD,OAHqB,CAAxB;AAKD;;AACD,WAAOV,qBAAP;AACD,GA9B0B,EA+B3B,CAACpC,SAAD,EAAYS,MAAZ,EAAoBR,KAApB,EAA2Ba,QAA3B,CA/B2B,CAA7B;;AAkCA,QAAMkC,iBAAiB,GAAIC,KAAD,IAAgD;AACxE/C,IAAAA,QAAQ,CAAC+C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAItC,QAAJ,EAAc;AACZsC,IAAAA,WAAW,GAAGxC,WAAW,GACrBsB,SAAS,CAACZ,gBAAD,CADY,GAErBY,SAAS,CAAClB,WAAD,CAFb;AAGD,GAJD,MAIO;AACLoC,IAAAA,WAAW,GAAGxC,WAAW,GACrBsB,SAAS,CAACR,oBAAD,CADY,GAErBQ,SAAS,CAACb,aAAD,CAFb;AAGD;;AAED+B,EAAAA,WAAW,GAAGzB,SAAS,CAACyB,WAAD,CAAvB;AAEA,QAAMC,OAAO,GAAGD,WAAW,CAACf,GAAZ,CAAiBnB,IAAD,IAAU;AACxC,UAAM;AAAEoC,MAAAA,KAAF;AAASd,MAAAA;AAAT,QAAwBtB,IAA9B;AACA,UAAMqC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACA,UAAMC,iBAAiB,GAAGjB,UAAU,CAACgB,OAArC;AACA,UAAME,OAAO,GACXxC,IAAI,CAAC6B,QAAL,IACA7B,IAAI,CAAC6B,QAAL,CAAcY,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BC,WAA5B,GAA0CC,OAA1C,CAAkD,SAAlD,EAA6D,EAA7D,CAFF;AAIA,UAAMC,GAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE;AACHZ,QAAAA,KAAK,EACHjC,IAAI,CAACW,GAAL,IACAX,IAAI,CAACW,GAAL,CAASmC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,UAAAA,qBAAqB,EAAE;AAAzB,SAAjC,CAHC;AAIH7C,QAAAA,UAAU,EAAEF,IAAI,CAACE,UAJd;AAKHsC,QAAAA,OALG;AAMHH,QAAAA,YANG;AAOHE,QAAAA,iBAPG;AAQHzD,QAAAA,SARG;AASHkE,QAAAA,aAAa,EAAEhD,IAAI,CAACW;AATjB,OADe;AAYpBX,MAAAA,IAAI,EAAE;AACJiD,QAAAA,KAAK,EAAEjD,IAAI,CAAC6B,QAAL,CAAcY,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BS,iBAA5B,EADH;AAEJC,QAAAA,KAAK,EAAEX,OAFH;AAGJvC,QAAAA,GAAG,EAAED,IAAI,CAACC,GAHN;AAIJmD,QAAAA,YAAY,EAAEpD,IAAI,CAACoD;AAJf,OAZc;AAkBpBC,MAAAA,MAAM,EAAE;AACNvC,QAAAA,QAAQ,EAAEd,IAAI,CAACK,QAAL,GACNrD,gBAAgB,CAAC,IAAIf,SAAJ,CAAc+D,IAAI,CAACK,QAAL,CAAcS,QAA5B,CAAD,CADV,GAEN,IAHE;AAINb,QAAAA,GAAG,EAAED,IAAI,CAACC;AAJJ,OAlBY;AAwBpBc,MAAAA,SAAS,EAAE;AACTA,QAAAA,SAAS,EAAEf,IAAI,CAACe;AADP,OAxBS;AA2BpBb,MAAAA,UAAU,EAAE;AACVA,QAAAA,UAAU,EAAEF,IAAI,CAACE;AADP,OA3BQ;AA8BpBoD,MAAAA,OAAO,EAAEtD;AA9BW,KAAtB;AAiCA,WAAO4C,GAAP;AACD,GA1Ce,CAAhB;;AA4CA,QAAMW,aAAa,GAAG,MAAmB;AACvC,QAAItE,QAAQ,KAAKxB,QAAQ,CAAC0B,KAAtB,IAA+BgD,OAAO,CAACqB,MAA3C,EAAmD;AACjD,YAAMC,YAAY,GAAGjG,mBAArB;AAEA,YAAMkG,OAAO,GAAGD,YAAY,CAACtC,GAAb,CAAkBwC,MAAD,KAAa;AAC5CC,QAAAA,EAAE,EAAED,MAAM,CAACC,EADiC;AAE5CC,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAF+B;AAG5CV,QAAAA,KAAK,EAAEQ,MAAM,CAACR,KAH8B;AAI5CW,QAAAA,IAAI,EAAE,CAACC,CAAD,EAAuBC,CAAvB,KAAgD;AACpD,kBAAQL,MAAM,CAACE,IAAf;AACE,iBAAK,MAAL;AACE,qBAAOG,CAAC,CAACJ,EAAF,GAAOG,CAAC,CAACH,EAAhB;;AACF,iBAAK,KAAL;AACE,kBAAIG,CAAC,CAACE,QAAF,CAAWpB,GAAX,CAAeZ,KAAf,IAAwB+B,CAAC,CAACC,QAAF,CAAWpB,GAAX,CAAeZ,KAA3C,EAAkD;AAChD,uBACErB,MAAM,CAACmD,CAAC,CAACE,QAAF,CAAWpB,GAAX,CAAeZ,KAAhB,CAAN,GAA+BrB,MAAM,CAACoD,CAAC,CAACC,QAAF,CAAWpB,GAAX,CAAeZ,KAAhB,CADvC;AAGD;;AAED,qBAAO,CAAP;;AACF,iBAAK,QAAL;AACE,qBAAO8B,CAAC,CAACE,QAAF,CAAWZ,MAAX,CAAkBvC,QAAlB,GAA6BkD,CAAC,CAACC,QAAF,CAAWZ,MAAX,CAAkBvC,QAAtD;;AACF;AACE,qBAAO,CAAP;AAdJ;AAgBD,SArB2C;AAsB5CoD,QAAAA,QAAQ,EAAEP,MAAM,CAACO;AAtB2B,OAAb,CAAjB,CAAhB;AAyBA,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE/B,OAAb;AAAsB,QAAA,OAAO,EAAEuB;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE;AAAA,6BACE,QAAC,UAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,GAAEhF,IAAK,EAA3B;AAAA,oBACGwD,WAAW,CAACf,GAAZ,CAAiBnB,IAAD,iBACf,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,SAAS,EAAElB,SAHb;AAIE,YAAA,OAAO,EAAEM,OAJX;AAKE,YAAA,OAAO,EAAE;AALX,aACOY,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,GAAEvB,IAAK,UAA3B;AAAA,oBACGwD,WAAW,CAACf,GAAZ,CAAiBnB,IAAD,iBACf,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,SAAS,EAAElB,SAHb;AAIE,YAAA,OAAO,EAAEM,OAJX;AAKE,YAAA,OAAO;AALT,aACOY,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD,GA5DD;;AA8DA,QAAMkE,sBAAsB,GAAIC,MAAD,IAA+B;AAC5D9E,IAAAA,aAAa,CAAC8E,MAAM,CAACnC,KAAR,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,EAAE,EAAC,MAA/C;AAAA,kBACGrD,eAAe,CAAC,GAAD,EAAM,OAAN;AADlB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,IAAd;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAA,kBACGA,eAAe,CAAC,GAAD,EAAM,2CAAN;AADlB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,IAAD;AAAA,8BACE,QAAC,gBAAD;AAAA,gCACE,QAAC,YAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,QAAQ,EAAEK,QADZ;AAEE,YAAA,QAAQ,EAAGoF,IAAD,IAAoBnF,WAAW,CAACmF,IAAD;AAF3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,aAAD;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAE3E,WADX;AAEE,cAAA,QAAQ,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAFhC;AAGE,cAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,IAAD;AAAA,8BAAQd,eAAe,CAAC,IAAD,EAAO,aAAP,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAaE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,eAAD;AAAA,kCACE,QAAC,YAAD;AAAA,oCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,OAAO,EAAE,CACP;AACEuE,gBAAAA,KAAK,EAAE,KADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eADO,EAKP;AACEkB,gBAAAA,KAAK,EAAE,KADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eALO,EASP;AACEkB,gBAAAA,KAAK,EAAE,YADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eATO,EAaP;AACEkB,gBAAAA,KAAK,EAAE,QADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eAbO,EAiBP;AACEkB,gBAAAA,KAAK,EAAE,WADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eAjBO,CADX;AAuBE,cAAA,QAAQ,EAAEkC;AAvBZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA6BE,QAAC,YAAD;AAAc,YAAA,KAAK,EAAE;AAAEG,cAAAA,UAAU,EAAE;AAAd,aAArB;AAAA,oCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AAAa,cAAA,QAAQ,EAAExC,iBAAvB;AAA0C,cAAA,KAAK,EAAE/C;AAAjD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAoDGwE,aAAa,EApDhB,eAqDE,QAAC,WAAD;AACE,QAAA,GAAG,EAAC,mBADN;AAEE,QAAA,GAAG,EAAC,aAFN;AAGE,QAAA,KAAK,EAAE,GAHT;AAIE,QAAA,MAAM,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA,cArDF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAwED,CAhTD;;GAAM9E,K;UACa3C,a,EACIC,W,EACGgB,O,EACRL,Q,EACEC,gB,EAGET,Y,EAELU,e,EAEEZ,W,EACOa,U;;;MAbpB4B,K;AAkTN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport { Route, useRouteMatch, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport BigNumber from \"bignumber.js\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Image, Heading, RowType, Toggle, Text } from \"@mozartfinance/uikit\";\nimport styled from \"styled-components\";\nimport FlexLayout from \"components/layout/Flex\";\nimport Page from \"components/layout/Page\";\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from \"state/hooks\";\nimport useRefresh from \"hooks/useRefresh\";\nimport { fetchFarmUserDataAsync } from \"state/actions\";\nimport { Farm } from \"state/types\";\nimport useI18n from \"hooks/useI18n\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { getFarmApy } from \"utils/apy\";\nimport { orderBy } from \"lodash\";\n\nimport FarmCard, { FarmWithStakedValue } from \"./components/FarmCard/FarmCard\";\nimport Table from \"./components/FarmTable/FarmTable\";\nimport FarmTabButtons from \"./components/FarmTabButtons\";\nimport SearchInput from \"./components/SearchInput\";\nimport { RowProps } from \"./components/FarmTable/Row\";\nimport ToggleView from \"./components/ToggleView/ToggleView\";\nimport { DesktopColumnSchema, ViewMode } from \"./components/types\";\nimport Select, { OptionProps } from \"./components/Select/Select\";\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n  }\n`;\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`;\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`;\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`;\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`;\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: ${({ theme }) => theme.colors.gradients.gold};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { pathname } = useLocation();\n  const TranslateString = useI18n();\n  const farmsLP = useFarms();\n  const cakePrice = usePriceCakeBusd();\n  const [query, setQuery] = useState(\"\");\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE);\n  const { account } = useWeb3React();\n  const [sortOption, setSortOption] = useState(\"hot\");\n  const prices = useGetApiPrices();\n\n  const dispatch = useDispatch();\n  const { fastRefresh } = useRefresh();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n\n  const [stackedOnly, setStackedOnly] = useState(false);\n  const isActive = !pathname.includes(\"history\");\n\n  const activeFarms = farmsLP.filter(\n    (farm) => farm.pid !== 0 && farm.multiplier !== \"0X\"\n  );\n  const inactiveFarms = farmsLP.filter(\n    (farm) => farm.pid !== 0 && farm.multiplier === \"0X\"\n  );\n\n  const stackedOnlyFarms = activeFarms.filter(\n    (farm) =>\n      farm.userData &&\n      new BigNumber(farm.userData.stakedBalance).isGreaterThan(0)\n  );\n\n  const stackedInactiveFarms = inactiveFarms.filter(\n    (farm) =>\n      farm.userData &&\n      new BigNumber(farm.userData.stakedBalance).isGreaterThan(0)\n  );\n\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n    switch (sortOption) {\n      case \"apr\":\n        return orderBy(farms, (farm: FarmWithStakedValue) => farm.apy, \"desc\");\n      case \"multiplier\":\n        return orderBy(\n          farms,\n          (farm: FarmWithStakedValue) =>\n            farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0,\n          \"desc\"\n        );\n      case \"earned\":\n        return orderBy(\n          farms,\n          (farm: FarmWithStakedValue) =>\n            farm.userData ? farm.userData.earnings : 0,\n          \"desc\"\n        );\n      case \"liquidity\":\n        return orderBy(\n          farms,\n          (farm: FarmWithStakedValue) => Number(farm.liquidity),\n          \"desc\"\n        );\n      default:\n        return farms;\n    }\n  };\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map(\n        (farm) => {\n          if (!farm.lpTotalInQuoteToken || !prices) {\n            return farm;\n          }\n\n          const quoteTokenPriceUsd =\n            prices[farm.quoteToken.symbol.toLowerCase()];\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(\n            quoteTokenPriceUsd\n          );\n          const apy = isActive\n            ? getFarmApy(farm.poolWeight, cakePrice, totalLiquidity)\n            : 0;\n\n          return { ...farm, apy, liquidity: totalLiquidity };\n        }\n      );\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase();\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter(\n          (farm: FarmWithStakedValue) => {\n            return farm.lpSymbol.toLowerCase().includes(lowercaseQuery);\n          }\n        );\n      }\n      return farmsToDisplayWithAPY;\n    },\n    [cakePrice, prices, query, isActive]\n  );\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  let farmsStaked = [];\n  if (isActive) {\n    farmsStaked = stackedOnly\n      ? farmsList(stackedOnlyFarms)\n      : farmsList(activeFarms);\n  } else {\n    farmsStaked = stackedOnly\n      ? farmsList(stackedInactiveFarms)\n      : farmsList(inactiveFarms);\n  }\n\n  farmsStaked = sortFarms(farmsStaked);\n\n  const rowData = farmsStaked.map((farm) => {\n    const { token, quoteToken } = farm;\n    const tokenAddress = token.address;\n    const quoteTokenAddress = quoteToken.address;\n    const lpLabel =\n      farm.lpSymbol &&\n      farm.lpSymbol.split(\" \")[0].toUpperCase().replace(\"PANCAKE\", \"\");\n\n    const row: RowProps = {\n      apr: {\n        value:\n          farm.apy &&\n          farm.apy.toLocaleString(\"en-US\", { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apy,\n      },\n      farm: {\n        image: farm.lpSymbol.split(\" \")[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n        depositFeeBP: farm.depositFeeBP,\n      },\n      earned: {\n        earnings: farm.userData\n          ? getBalanceNumber(new BigNumber(farm.userData.earnings))\n          : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    };\n\n    return row;\n  });\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema;\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case \"farm\":\n              return b.id - a.id;\n            case \"apr\":\n              if (a.original.apr.value && b.original.apr.value) {\n                return (\n                  Number(a.original.apr.value) - Number(b.original.apr.value)\n                );\n              }\n\n              return 0;\n            case \"earned\":\n              return a.original.earned.earnings - b.original.earned.earnings;\n            default:\n              return 1;\n          }\n        },\n        sortable: column.sortable,\n      }));\n\n      return <Table data={rowData} columns={columns} />;\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    );\n  };\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value);\n  };\n\n  return (\n    <>\n      <Header>\n        <Heading as=\"h1\" size=\"xxl\" color=\"#ffffff\" mb=\"24px\">\n          {TranslateString(999, \"Farms\")}\n        </Heading>\n        <Heading size=\"lg\" color=\"text\">\n          {TranslateString(999, \"Stake Liquidity Pool (LP) tokens to earn.\")}\n        </Heading>\n      </Header>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView\n              viewMode={viewMode}\n              onToggle={(mode: ViewMode) => setViewMode(mode)}\n            />\n            <ToggleWrapper>\n              <Toggle\n                checked={stackedOnly}\n                onChange={() => setStackedOnly(!stackedOnly)}\n                scale=\"sm\"\n              />\n              <Text> {TranslateString(1116, \"Staked only\")}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text>SORT BY</Text>\n              <Select\n                options={[\n                  {\n                    label: \"Hot\",\n                    value: \"hot\",\n                  },\n                  {\n                    label: \"APR\",\n                    value: \"apr\",\n                  },\n                  {\n                    label: \"Multiplier\",\n                    value: \"multiplier\",\n                  },\n                  {\n                    label: \"Earned\",\n                    value: \"earned\",\n                  },\n                  {\n                    label: \"Liquidity\",\n                    value: \"liquidity\",\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text>SEARCH</Text>\n              <SearchInput onChange={handleChangeQuery} value={query} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <StyledImage\n          src=\"/images/music.png\"\n          alt=\"Music notes\"\n          width={300}\n          height={300}\n        />\n      </Page>\n    </>\n  );\n};\n\nexport default Farms;\n"]},"metadata":{},"sourceType":"module"}