{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Pools/components/PoolCard.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from \"bignumber.js\";\nimport React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, IconButton, useModal, AddIcon, Image, Text, Skeleton } from \"@mozartfinance/uikit\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport UnlockButton from \"components/UnlockButton\";\nimport Label from \"components/Label\";\nimport { useERC20 } from \"hooks/useContract\";\nimport { useSousApprove } from \"hooks/useApprove\";\nimport useI18n from \"hooks/useI18n\";\nimport { useSousStake } from \"hooks/useStake\";\nimport { useSousUnstake } from \"hooks/useUnstake\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { getPoolApy } from \"utils/apy\";\nimport { getAddress } from \"utils/addressHelpers\";\nimport { useSousHarvest } from \"hooks/useHarvest\";\nimport Balance from \"components/Balance\";\nimport { PoolCategory } from \"config/constants/types\";\nimport tokens from \"config/constants/tokens\";\nimport { useGetApiPrice } from \"state/hooks\";\nimport DepositModal from \"./DepositModal\";\nimport WithdrawModal from \"./WithdrawModal\";\nimport CompoundModal from \"./CompoundModal\";\nimport CardTitle from \"./CardTitle\";\nimport Card from \"./Card\";\nimport OldSyrupTitle from \"./OldSyrupTitle\";\nimport HarvestButton from \"./HarvestButton\";\nimport CardFooter from \"./CardFooter\";\nimport ApyButton from \"../../Farms/components/FarmCard/ApyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoolCard = ({\n  pool\n}) => {\n  _s();\n\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit\n  } = pool; // Pools using native BNB behave differently than pools using a token\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const TranslateString = useI18n();\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : \"\");\n  const {\n    account\n  } = useWeb3React();\n  const {\n    onApprove\n  } = useSousApprove(stakingTokenContract, sousId);\n  const {\n    onStake\n  } = useSousStake(sousId, isBnbPool);\n  const {\n    onUnstake\n  } = useSousUnstake(sousId);\n  const {\n    onReward\n  } = useSousHarvest(sousId, isBnbPool); // APY\n\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol);\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol);\n  const apy = getPoolApy(stakingTokenPrice, rewardTokenPrice, getBalanceNumber(pool.totalStaked, stakingToken.decimals), parseFloat(pool.tokenPerBlock));\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n  const allowance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.allowance) || 0);\n  const stakingTokenBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) || 0);\n  const stakedBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakedBalance) || 0);\n  const earnings = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.pendingReward) || 0);\n  const isOldSyrup = stakingToken.symbol === tokens.foam.symbol;\n  const accountHasStakedBalance = (stakedBalance === null || stakedBalance === void 0 ? void 0 : stakedBalance.toNumber()) > 0;\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n  const isCardActive = isFinished && accountHasStakedBalance;\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals));\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance,\n    onConfirm: onStake,\n    tokenName: stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol,\n    stakingTokenDecimals: stakingToken.decimals\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this));\n  const [onPresentCompound] = useModal( /*#__PURE__*/_jsxDEV(CompoundModal, {\n    earnings: earnings,\n    onConfirm: onStake,\n    tokenName: stakingToken.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this));\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase();\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: stakingToken.symbol,\n    stakingTokenDecimals: stakingToken.decimals\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this));\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove(); // user rejected tx or didn't go thru\n\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n  const farmAPY = apy && apy.toLocaleString(\"en-US\", {\n    maximumFractionDigits: 2\n  });\n  const addLiquidityUrl = `https://bscscan.com/address/${pool.earningToken.address[56]}`;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isActive: isCardActive,\n    isFinished: isFinished && sousId !== 0,\n    children: [isFinished && sousId !== 0 && /*#__PURE__*/_jsxDEV(PoolFinishedSash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"24px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        isFinished: isFinished && sousId !== 0,\n        children: [isOldSyrup && \"[OLD]\", \" \", earningToken.symbol, \" \", TranslateString(348, \"Pool\"), stakingToken.symbol === \"JAZZ\" ? /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          children: \"You need at least 1% in your wallet for computing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"8px\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `/images/pools/${poolImage}`,\n            alt: earningToken.symbol,\n            width: 64,\n            height: 64\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), account && harvest && !isOldSyrup && /*#__PURE__*/_jsxDEV(HarvestButton, {\n          disabled: !earnings.toNumber() || pendingTx,\n          text: pendingTx ? TranslateString(999, \"Collecting\") : TranslateString(562, \"Harvest\"),\n          onClick: async () => {\n            setPendingTx(true);\n            await onReward();\n            setPendingTx(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), !isOldSyrup ? /*#__PURE__*/_jsxDEV(BalanceAndCompound, {\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          value: getBalanceNumber(earnings, earningToken.decimals),\n          isDisabled: isFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), sousId === 0 && account && harvest && /*#__PURE__*/_jsxDEV(HarvestButton, {\n          disabled: !earnings.toNumber() || pendingTx,\n          text: pendingTx ? TranslateString(999, \"Compounding\") : TranslateString(704, \"Compound\"),\n          onClick: onPresentCompound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OldSyrupTitle, {\n        hasBalance: accountHasStakedBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        isFinished: isFinished && sousId !== 0,\n        text: TranslateString(330, `${earningToken.symbol} earned`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardActions, {\n        children: [!account && /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 24\n        }, this), account && (needsApproval && !isOldSyrup ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: isFinished || requestedApproval,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: `Approve ${stakingToken.symbol}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: stakedBalance.eq(new BigNumber(0)) || pendingTx,\n            onClick: isOldSyrup ? async () => {\n              setPendingTx(true);\n              await onUnstake(\"0\", stakingToken.decimals);\n              setPendingTx(false);\n            } : onPresentWithdraw,\n            children: `Unstake ${stakingToken.symbol}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledActionSpacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), !isOldSyrup && /*#__PURE__*/_jsxDEV(IconButton, {\n            disabled: isFinished && sousId !== 0,\n            onClick: onPresentDeposit,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [TranslateString(736, \"APR\"), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: apy ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ApyButton, {\n              lpLabel: \"\",\n              addLiquidityUrl: addLiquidityUrl,\n              cakePrice: new BigNumber(stakingTokenPrice),\n              apy: apy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              bold: true,\n              fontSize: \"14px\",\n              children: [farmAPY, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 24,\n            width: 80\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [TranslateString(384, \"Your Stake\"), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: getBalanceNumber(stakedBalance, stakingToken.decimals)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      projectLink: earningToken.projectLink,\n      decimals: stakingToken.decimals,\n      totalStaked: totalStaked,\n      startBlock: startBlock,\n      endBlock: endBlock,\n      isFinished: isFinished,\n      poolCategory: poolCategory,\n      tokenName: earningToken.symbol,\n      tokenAddress: earningToken.address ? getAddress(earningToken.address) : \"\",\n      tokenDecimals: earningToken.decimals,\n      stakingTokenPrice: stakingTokenPrice,\n      rewardTokenPrice: rewardTokenPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolCard, \"t6WHj1rrHO6LHp2QNcxA+QevLc0=\", false, function () {\n  return [useI18n, useERC20, useWeb3React, useSousApprove, useSousStake, useSousUnstake, useSousHarvest, useGetApiPrice, useGetApiPrice, useModal, useModal, useModal];\n});\n\n_c = PoolCard;\nconst PoolFinishedSash = styled.div`\n  background-image: url(\"/images/pool-finished-sash.svg\");\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`;\n_c2 = PoolFinishedSash;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`;\n_c3 = StyledCardActions;\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n_c4 = BalanceAndCompound;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\n_c5 = StyledActionSpacer;\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`;\n_c6 = StyledDetails;\nexport default PoolCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PoolCard\");\n$RefreshReg$(_c2, \"PoolFinishedSash\");\n$RefreshReg$(_c3, \"StyledCardActions\");\n$RefreshReg$(_c4, \"BalanceAndCompound\");\n$RefreshReg$(_c5, \"StyledActionSpacer\");\n$RefreshReg$(_c6, \"StyledDetails\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Pools/components/PoolCard.tsx"],"names":["BigNumber","React","useCallback","useState","styled","Button","IconButton","useModal","AddIcon","Image","Text","Skeleton","useWeb3React","UnlockButton","Label","useERC20","useSousApprove","useI18n","useSousStake","useSousUnstake","getBalanceNumber","getPoolApy","getAddress","useSousHarvest","Balance","PoolCategory","tokens","useGetApiPrice","DepositModal","WithdrawModal","CompoundModal","CardTitle","Card","OldSyrupTitle","HarvestButton","CardFooter","ApyButton","PoolCard","pool","sousId","stakingToken","earningToken","harvest","poolCategory","totalStaked","startBlock","endBlock","isFinished","userData","stakingLimit","isBnbPool","BINANCE","TranslateString","stakingTokenContract","address","account","onApprove","onStake","onUnstake","onReward","rewardTokenPrice","symbol","stakingTokenPrice","apy","decimals","parseFloat","tokenPerBlock","requestedApproval","setRequestedApproval","pendingTx","setPendingTx","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","isOldSyrup","foam","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","onPresentDeposit","isGreaterThan","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","txHash","e","console","error","farmAPY","toLocaleString","maximumFractionDigits","addLiquidityUrl","padding","marginBottom","display","alignItems","flex","eq","projectLink","PoolFinishedSash","div","StyledCardActions","BalanceAndCompound","StyledActionSpacer","props","theme","spacing","StyledDetails"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,QAPF,QASO,sBATP;AAUA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAAuC,WAAvC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,cAAT,QAAgD,aAAhD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;;;;AAOA,MAAMC,QAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACrD,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,UATI;AAUJC,IAAAA,QAVI;AAWJC,IAAAA;AAXI,MAYFX,IAZJ,CADqD,CAerD;;AACA,QAAMY,SAAS,GAAGP,YAAY,KAAKlB,YAAY,CAAC0B,OAAhD;AACA,QAAMC,eAAe,GAAGnC,OAAO,EAA/B;AACA,QAAMoC,oBAAoB,GAAGtC,QAAQ,CACnCyB,YAAY,CAACc,OAAb,GAAuBhC,UAAU,CAACkB,YAAY,CAACc,OAAd,CAAjC,GAA0D,EADvB,CAArC;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAc3C,YAAY,EAAhC;AACA,QAAM;AAAE4C,IAAAA;AAAF,MAAgBxC,cAAc,CAACqC,oBAAD,EAAuBd,MAAvB,CAApC;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAcvC,YAAY,CAACqB,MAAD,EAASW,SAAT,CAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBvC,cAAc,CAACoB,MAAD,CAApC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAepC,cAAc,CAACgB,MAAD,EAASW,SAAT,CAAnC,CAzBqD,CA2BrD;;AACA,QAAMU,gBAAgB,GAAGjC,cAAc,CAACc,YAAY,CAACoB,MAAd,CAAvC;AACA,QAAMC,iBAAiB,GAAGnC,cAAc,CAACa,YAAY,CAACqB,MAAd,CAAxC;AACA,QAAME,GAAG,GAAG1C,UAAU,CACpByC,iBADoB,EAEpBF,gBAFoB,EAGpBxC,gBAAgB,CAACkB,IAAI,CAACM,WAAN,EAAmBJ,YAAY,CAACwB,QAAhC,CAHI,EAIpBC,UAAU,CAAC3B,IAAI,CAAC4B,aAAN,CAJU,CAAtB;AAOA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CjE,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACkE,SAAD,EAAYC,YAAZ,IAA4BnE,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMoE,SAAS,GAAG,IAAIvE,SAAJ,CAAc,CAAAgD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEuB,SAAV,KAAuB,CAArC,CAAlB;AACA,QAAMC,mBAAmB,GAAG,IAAIxE,SAAJ,CAAc,CAAAgD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEwB,mBAAV,KAAiC,CAA/C,CAA5B;AACA,QAAMC,aAAa,GAAG,IAAIzE,SAAJ,CAAc,CAAAgD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEyB,aAAV,KAA2B,CAAzC,CAAtB;AACA,QAAMC,QAAQ,GAAG,IAAI1E,SAAJ,CAAc,CAAAgD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAE2B,aAAV,KAA2B,CAAzC,CAAjB;AAEA,QAAMC,UAAU,GAAGpC,YAAY,CAACqB,MAAb,KAAwBnC,MAAM,CAACmD,IAAP,CAAYhB,MAAvD;AACA,QAAMiB,uBAAuB,GAAG,CAAAL,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEM,QAAf,MAA4B,CAA5D;AACA,QAAMC,aAAa,GACjB,CAACF,uBAAD,IAA4B,CAACP,SAAS,CAACQ,QAAV,EAA7B,IAAqD,CAAC7B,SADxD;AAEA,QAAM+B,YAAY,GAAGlC,UAAU,IAAI+B,uBAAnC;AAEA,QAAMI,cAAc,GAAG,IAAIlF,SAAJ,CAAciD,YAAd,EAA4BkC,YAA5B,CACrB,IAAInF,SAAJ,CAAc,EAAd,EAAkBoF,GAAlB,CAAsB3C,YAAY,CAACuB,QAAnC,CADqB,CAAvB;AAGA,QAAM,CAACqB,gBAAD,IAAqB9E,QAAQ,eACjC,QAAC,YAAD;AACE,IAAA,GAAG,EACD0C,YAAY,IAAIuB,mBAAmB,CAACc,aAApB,CAAkCJ,cAAlC,CAAhB,GACIA,cADJ,GAEIV,mBAJR;AAME,IAAA,SAAS,EAAEf,OANb;AAOE,IAAA,SAAS,EACPR,YAAY,GACP,GAAET,YAAY,CAACqB,MAAO,KAAIZ,YAAa,OADhC,GAERT,YAAY,CAACqB,MAVrB;AAYE,IAAA,oBAAoB,EAAErB,YAAY,CAACwB;AAZrC;AAAA;AAAA;AAAA;AAAA,UADiC,CAAnC;AAiBA,QAAM,CAACuB,iBAAD,IAAsBhF,QAAQ,eAClC,QAAC,aAAD;AACE,IAAA,QAAQ,EAAEmE,QADZ;AAEE,IAAA,SAAS,EAAEjB,OAFb;AAGE,IAAA,SAAS,EAAEjB,YAAY,CAACqB;AAH1B;AAAA;AAAA;AAAA;AAAA,UADkC,CAApC;AAOA,QAAM2B,SAAS,GAAI,GAAElD,IAAI,CAACG,YAAL,CAAkBoB,MAAO,IAAGvB,IAAI,CAACE,YAAL,CAAkBqB,MAAO,MAAxD,CAA8D4B,iBAA9D,EAAlB;AACA,QAAM,CAACC,iBAAD,IAAsBnF,QAAQ,eAClC,QAAC,aAAD;AACE,IAAA,GAAG,EAAEkE,aADP;AAEE,IAAA,SAAS,EAAEf,SAFb;AAGE,IAAA,SAAS,EAAElB,YAAY,CAACqB,MAH1B;AAIE,IAAA,oBAAoB,EAAErB,YAAY,CAACwB;AAJrC;AAAA;AAAA;AAAA;AAAA,UADkC,CAApC;AASA,QAAM2B,aAAa,GAAGzF,WAAW,CAAC,YAAY;AAC5C,QAAI;AACFkE,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA,YAAMwB,MAAM,GAAG,MAAMpC,SAAS,EAA9B,CAFE,CAGF;;AACA,UAAI,CAACoC,MAAL,EAAa;AACXxB,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,KAPD,CAOE,OAAOyB,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GAXgC,EAW9B,CAACrC,SAAD,EAAYY,oBAAZ,CAX8B,CAAjC;AAaA,QAAM4B,OAAO,GACXjC,GAAG,IAAIA,GAAG,CAACkC,cAAJ,CAAmB,OAAnB,EAA4B;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAA5B,CADT;AAGA,QAAMC,eAAe,GAAI,+BAA8B7D,IAAI,CAACG,YAAL,CAAkBa,OAAlB,CAA0B,EAA1B,CAA8B,EAArF;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAE2B,YAAhB;AAA8B,IAAA,UAAU,EAAElC,UAAU,IAAIR,MAAM,KAAK,CAAnE;AAAA,eACGQ,UAAU,IAAIR,MAAM,KAAK,CAAzB,iBAA8B,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADjC,eAEE;AAAK,MAAA,KAAK,EAAE;AAAE6D,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,UAAU,EAAErD,UAAU,IAAIR,MAAM,KAAK,CAAhD;AAAA,mBACGqC,UAAU,IAAI,OADjB,OAC2BnC,YAAY,CAACoB,MADxC,EACgD,GADhD,EAEGT,eAAe,CAAC,GAAD,EAAM,MAAN,CAFlB,EAGGZ,YAAY,CAACqB,MAAb,KAAwB,MAAxB,gBACC,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAKC,EARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AACE,QAAA,KAAK,EAAE;AAAEwC,UAAAA,YAAY,EAAE,KAAhB;AAAuBC,UAAAA,OAAO,EAAE,MAAhC;AAAwCC,UAAAA,UAAU,EAAE;AAApD,SADT;AAAA,gCAGE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAZ;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,GAAG,EAAG,iBAAgBhB,SAAU,EADlC;AAEE,YAAA,GAAG,EAAE/C,YAAY,CAACoB,MAFpB;AAGE,YAAA,KAAK,EAAE,EAHT;AAIE,YAAA,MAAM,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF,EAWGN,OAAO,IAAIb,OAAX,IAAsB,CAACkC,UAAvB,iBACC,QAAC,aAAD;AACE,UAAA,QAAQ,EAAE,CAACF,QAAQ,CAACK,QAAT,EAAD,IAAwBV,SADpC;AAEE,UAAA,IAAI,EACFA,SAAS,GACLjB,eAAe,CAAC,GAAD,EAAM,YAAN,CADV,GAELA,eAAe,CAAC,GAAD,EAAM,SAAN,CALvB;AAOE,UAAA,OAAO,EAAE,YAAY;AACnBkB,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,kBAAMX,QAAQ,EAAd;AACAW,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAuCG,CAACM,UAAD,gBACC,QAAC,kBAAD;AAAA,gCACE,QAAC,OAAD;AACE,UAAA,KAAK,EAAExD,gBAAgB,CAACsD,QAAD,EAAWjC,YAAY,CAACuB,QAAxB,CADzB;AAEE,UAAA,UAAU,EAAEjB;AAFd;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGR,MAAM,KAAK,CAAX,IAAgBgB,OAAhB,IAA2Bb,OAA3B,iBACC,QAAC,aAAD;AACE,UAAA,QAAQ,EAAE,CAACgC,QAAQ,CAACK,QAAT,EAAD,IAAwBV,SADpC;AAEE,UAAA,IAAI,EACFA,SAAS,GACLjB,eAAe,CAAC,GAAD,EAAM,aAAN,CADV,GAELA,eAAe,CAAC,GAAD,EAAM,UAAN,CALvB;AAOE,UAAA,OAAO,EAAEmC;AAPX;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAmBC,QAAC,aAAD;AAAe,QAAA,UAAU,EAAET;AAA3B;AAAA;AAAA;AAAA;AAAA,cA1DJ,eA4DE,QAAC,KAAD;AACE,QAAA,UAAU,EAAE/B,UAAU,IAAIR,MAAM,KAAK,CADvC;AAEE,QAAA,IAAI,EAAEa,eAAe,CAAC,GAAD,EAAO,GAAEX,YAAY,CAACoB,MAAO,SAA7B;AAFvB;AAAA;AAAA;AAAA;AAAA,cA5DF,eAgEE,QAAC,iBAAD;AAAA,mBACG,CAACN,OAAD,iBAAY,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADf,EAEGA,OAAO,KACLyB,aAAa,IAAI,CAACJ,UAAlB,gBACC;AAAK,UAAA,KAAK,EAAE;AAAE4B,YAAAA,IAAI,EAAE;AAAR,WAAZ;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,QAAQ,EAAEzD,UAAU,IAAIoB,iBAD1B;AAEE,YAAA,OAAO,EAAEwB,aAFX;AAGE,YAAA,KAAK,EAAC,MAHR;AAAA,sBAKI,WAAUnD,YAAY,CAACqB,MAAO;AALlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,gBAWC;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,QAAQ,EAAEY,aAAa,CAACgC,EAAd,CAAiB,IAAIzG,SAAJ,CAAc,CAAd,CAAjB,KAAsCqE,SADlD;AAEE,YAAA,OAAO,EACLO,UAAU,GACN,YAAY;AACVN,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,oBAAMZ,SAAS,CAAC,GAAD,EAAMlB,YAAY,CAACwB,QAAnB,CAAf;AACAM,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,aALK,GAMNoB,iBATR;AAAA,sBAYI,WAAUlD,YAAY,CAACqB,MAAO;AAZlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAfF,EAgBG,CAACe,UAAD,iBACC,QAAC,UAAD;AACE,YAAA,QAAQ,EAAE7B,UAAU,IAAIR,MAAM,KAAK,CADrC;AAEE,YAAA,OAAO,EAAE8C,gBAFX;AAAA,mCAIE,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA,wBAZI,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA,cAhEF,eAyGE,QAAC,aAAD;AAAA,gCACE;AAAA,qBAAMjC,eAAe,CAAC,GAAD,EAAM,KAAN,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,KAAK,EAAE;AAAEkD,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,UAAU,EAAE;AAA/B,WAAZ;AAAA,oBACGxC,GAAG,gBACF;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAC,EADV;AAEE,cAAA,eAAe,EAAEoC,eAFnB;AAGE,cAAA,SAAS,EAAE,IAAInG,SAAJ,CAAc8D,iBAAd,CAHb;AAIE,cAAA,GAAG,EAAEC;AAJP;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,QAAQ,EAAC,MAApB;AAAA,yBACGiC,OADH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,0BADE,gBAaF,QAAC,QAAD;AAAU,YAAA,MAAM,EAAE,EAAlB;AAAsB,YAAA,KAAK,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzGF,eA6HE,QAAC,aAAD;AAAA,gCACE;AAAA,qBAAM5C,eAAe,CAAC,GAAD,EAAM,YAAN,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AACE,UAAA,QAAQ,EAAC,MADX;AAEE,UAAA,UAAU,EAAEL,UAFd;AAGE,UAAA,KAAK,EAAE3B,gBAAgB,CAACqD,aAAD,EAAgBjC,YAAY,CAACwB,QAA7B;AAHzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7HF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAwIE,QAAC,UAAD;AACE,MAAA,WAAW,EAAEvB,YAAY,CAACiE,WAD5B;AAEE,MAAA,QAAQ,EAAElE,YAAY,CAACwB,QAFzB;AAGE,MAAA,WAAW,EAAEpB,WAHf;AAIE,MAAA,UAAU,EAAEC,UAJd;AAKE,MAAA,QAAQ,EAAEC,QALZ;AAME,MAAA,UAAU,EAAEC,UANd;AAOE,MAAA,YAAY,EAAEJ,YAPhB;AAQE,MAAA,SAAS,EAAEF,YAAY,CAACoB,MAR1B;AASE,MAAA,YAAY,EACVpB,YAAY,CAACa,OAAb,GAAuBhC,UAAU,CAACmB,YAAY,CAACa,OAAd,CAAjC,GAA0D,EAV9D;AAYE,MAAA,aAAa,EAAEb,YAAY,CAACuB,QAZ9B;AAaE,MAAA,iBAAiB,EAAEF,iBAbrB;AAcE,MAAA,gBAAgB,EAAEF;AAdpB;AAAA;AAAA;AAAA;AAAA,YAxIF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2JD,CArQD;;GAAMvB,Q;UAiBoBpB,O,EACKF,Q,EAGTH,Y,EACEI,c,EACFE,Y,EACEC,c,EACDI,c,EAGII,c,EACCA,c,EAyBCpB,Q,EAiBCA,Q,EAQAA,Q;;;KA/ExB8B,Q;AAuQN,MAAMsE,gBAAgB,GAAGvG,MAAM,CAACwG,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,gB;AAWN,MAAME,iBAAiB,GAAGzG,MAAM,CAACwG,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMC,iB;AAQN,MAAMC,kBAAkB,GAAG1G,MAAM,CAACwG,GAAI;AACtC;AACA;AACA;AACA;AACA,CALA;MAAME,kB;AAON,MAAMC,kBAAkB,GAAG3G,MAAM,CAACwG,GAAI;AACtC,YAAaI,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAC9C,WAAYF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAC7C,CAHA;MAAMH,kB;AAKN,MAAMI,aAAa,GAAG/G,MAAM,CAACwG,GAAI;AACjC;AACA;AACA;AACA;AACA,CALA;MAAMO,a;AAON,eAAe9E,QAAf","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  IconButton,\n  useModal,\n  AddIcon,\n  Image,\n  Text,\n  Skeleton,\n  Flex,\n} from \"@mozartfinance/uikit\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport UnlockButton from \"components/UnlockButton\";\nimport Label from \"components/Label\";\nimport { useERC20 } from \"hooks/useContract\";\nimport { useSousApprove } from \"hooks/useApprove\";\nimport useI18n from \"hooks/useI18n\";\nimport { useSousStake } from \"hooks/useStake\";\nimport { useSousUnstake } from \"hooks/useUnstake\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { getPoolApy, getFarmApy } from \"utils/apy\";\nimport { getAddress } from \"utils/addressHelpers\";\nimport { useSousHarvest } from \"hooks/useHarvest\";\nimport Balance from \"components/Balance\";\nimport { PoolCategory } from \"config/constants/types\";\nimport tokens from \"config/constants/tokens\";\nimport { Pool } from \"state/types\";\nimport { useGetApiPrice, useGetApiPrices } from \"state/hooks\";\nimport DepositModal from \"./DepositModal\";\nimport WithdrawModal from \"./WithdrawModal\";\nimport CompoundModal from \"./CompoundModal\";\nimport CardTitle from \"./CardTitle\";\nimport Card from \"./Card\";\nimport OldSyrupTitle from \"./OldSyrupTitle\";\nimport HarvestButton from \"./HarvestButton\";\nimport CardFooter from \"./CardFooter\";\nimport ApyButton from \"../../Farms/components/FarmCard/ApyButton\";\nimport { BASE_ADD_LIQUIDITY_URL } from \"../../../config\";\n\ninterface HarvestProps {\n  pool: Pool;\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool;\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const TranslateString = useI18n();\n  const stakingTokenContract = useERC20(\n    stakingToken.address ? getAddress(stakingToken.address) : \"\"\n  );\n  const { account } = useWeb3React();\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId);\n  const { onStake } = useSousStake(sousId, isBnbPool);\n  const { onUnstake } = useSousUnstake(sousId);\n  const { onReward } = useSousHarvest(sousId, isBnbPool);\n\n  // APY\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol);\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol);\n  const apy = getPoolApy(\n    stakingTokenPrice,\n    rewardTokenPrice,\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\n    parseFloat(pool.tokenPerBlock)\n  );\n\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n\n  const allowance = new BigNumber(userData?.allowance || 0);\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0);\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0);\n  const earnings = new BigNumber(userData?.pendingReward || 0);\n\n  const isOldSyrup = stakingToken.symbol === tokens.foam.symbol;\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0;\n  const needsApproval =\n    !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n  const isCardActive = isFinished && accountHasStakedBalance;\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(\n    new BigNumber(10).pow(earningToken.decimals)\n  );\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={\n        stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit)\n          ? convertedLimit\n          : stakingTokenBalance\n      }\n      onConfirm={onStake}\n      tokenName={\n        stakingLimit\n          ? `${stakingToken.symbol} (${stakingLimit} max)`\n          : stakingToken.symbol\n      }\n      stakingTokenDecimals={stakingToken.decimals}\n    />\n  );\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal\n      earnings={earnings}\n      onConfirm={onStake}\n      tokenName={stakingToken.symbol}\n    />\n  );\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase();\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />\n  );\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove();\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n\n  const farmAPY =\n    apy && apy.toLocaleString(\"en-US\", { maximumFractionDigits: 2 });\n\n  const addLiquidityUrl = `https://bscscan.com/address/${pool.earningToken.address[56]}`;\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: \"24px\" }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && \"[OLD]\"} {earningToken.symbol}{\" \"}\n          {TranslateString(348, \"Pool\")}\n          {stakingToken.symbol === \"JAZZ\" ? (\n            <Text fontSize=\"12px\">\n              You need at least 1% in your wallet for computing\n            </Text>\n          ) : (\n            \"\"\n          )}\n        </CardTitle>\n        <div\n          style={{ marginBottom: \"8px\", display: \"flex\", alignItems: \"center\" }}\n        >\n          <div style={{ flex: 1 }}>\n            <Image\n              src={`/images/pools/${poolImage}`}\n              alt={earningToken.symbol}\n              width={64}\n              height={64}\n            />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={\n                pendingTx\n                  ? TranslateString(999, \"Collecting\")\n                  : TranslateString(562, \"Harvest\")\n              }\n              onClick={async () => {\n                setPendingTx(true);\n                await onReward();\n                setPendingTx(false);\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance\n              value={getBalanceNumber(earnings, earningToken.decimals)}\n              isDisabled={isFinished}\n            />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={\n                  pendingTx\n                    ? TranslateString(999, \"Compounding\")\n                    : TranslateString(704, \"Compound\")\n                }\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label\n          isFinished={isFinished && sousId !== 0}\n          text={TranslateString(330, `${earningToken.symbol} earned`)}\n        />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button\n                  disabled={isFinished || requestedApproval}\n                  onClick={handleApprove}\n                  width=\"100%\"\n                >\n                  {`Approve ${stakingToken.symbol}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true);\n                          await onUnstake(\"0\", stakingToken.decimals);\n                          setPendingTx(false);\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingToken.symbol}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton\n                    disabled={isFinished && sousId !== 0}\n                    onClick={onPresentDeposit}\n                  >\n                    <AddIcon color=\"white\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div>{TranslateString(736, \"APR\")}:</div>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            {apy ? (\n              <>\n                <ApyButton\n                  lpLabel=\"\"\n                  addLiquidityUrl={addLiquidityUrl}\n                  cakePrice={new BigNumber(stakingTokenPrice)}\n                  apy={apy}\n                />\n                <Text bold fontSize=\"14px\">\n                  {farmAPY}%\n                </Text>\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </div>\n        </StyledDetails>\n        <StyledDetails>\n          <div>{TranslateString(384, \"Your Stake\")}:</div>\n          <Balance\n            fontSize=\"14px\"\n            isDisabled={isFinished}\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\n          />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={earningToken.projectLink}\n        decimals={stakingToken.decimals}\n        totalStaked={totalStaked}\n        startBlock={startBlock}\n        endBlock={endBlock}\n        isFinished={isFinished}\n        poolCategory={poolCategory}\n        tokenName={earningToken.symbol}\n        tokenAddress={\n          earningToken.address ? getAddress(earningToken.address) : \"\"\n        }\n        tokenDecimals={earningToken.decimals}\n        stakingTokenPrice={stakingTokenPrice}\n        rewardTokenPrice={rewardTokenPrice}\n      />\n    </Card>\n  );\n};\n\nconst PoolFinishedSash = styled.div`\n  background-image: url(\"/images/pool-finished-sash.svg\");\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`;\n\nexport default PoolCard;\n"]},"metadata":{},"sourceType":"module"}