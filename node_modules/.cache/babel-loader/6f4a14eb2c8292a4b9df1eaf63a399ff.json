{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$(),\n    _s21 = $RefreshSig$(),\n    _s22 = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { kebabCase } from 'lodash';\nimport { useWeb3React } from '@web3-react/core';\nimport { toastTypes } from '@mozartfinance/uikit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getWeb3NoAccount } from 'utils/web3';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, push as pushToast, remove as removeToast, clear as clearToast, setBlock } from './actions';\nimport { fetchProfile } from './profile';\nimport { fetchTeam, fetchTeams } from './teams';\nimport { fetchAchievements } from './achievements';\nimport { fetchPrices } from './prices';\nimport { getBalanceNumber } from '../utils/formatBalance';\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync());\n    dispatch(fetchPoolsPublicDataAsync());\n  }, [dispatch, slowRefresh]);\n  useEffect(() => {\n    const web3 = getWeb3NoAccount();\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber();\n      dispatch(setBlock(blockNumber));\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n}; // Farms\n\n_s(useFetchPublicData, \"wuS4Y8EKVAeAtW/NPPlvO8B968o=\", false, function () {\n  return [useDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms.data);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  };\n}; // Pools\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePools = account => {\n  _s6();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const pools = useSelector(state => state.pools.data);\n  return pools;\n};\n\n_s6(usePools, \"WIyMD4ufrhPkRVRaHSFmHSaimvo=\", false, function () {\n  return [useRefresh, useDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s7();\n\n  const pool = useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n  return pool;\n}; // Toasts\n\n_s7(usePoolFromPid, \"NElEvYvoNsaNFrfsmEnHfa4jRII=\", false, function () {\n  return [useSelector];\n});\n\nexport const useToast = () => {\n  _s8();\n\n  const dispatch = useDispatch();\n  const helpers = useMemo(() => {\n    const push = toast => dispatch(pushToast(toast));\n\n    return {\n      toastError: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description\n        });\n      },\n      toastInfo: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description\n        });\n      },\n      toastSuccess: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description\n        });\n      },\n      toastWarning: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description\n        });\n      },\n      push,\n      remove: id => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast())\n    };\n  }, [dispatch]);\n  return helpers;\n}; // Profile\n\n_s8(useToast, \"sUDVWQm6KuNx8WS5X7Vf7K7gwmw=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useFetchProfile = () => {\n  _s9();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchProfile(account));\n  }, [account, dispatch]);\n};\n\n_s9(useFetchProfile, \"vU9PSvh4B+dXA6jrPCjdHHFXuTY=\", false, function () {\n  return [useWeb3React, useDispatch];\n});\n\nexport const useProfile = () => {\n  _s10();\n\n  const {\n    isInitialized,\n    isLoading,\n    data,\n    hasRegistered\n  } = useSelector(state => state.profile);\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading\n  };\n}; // Teams\n\n_s10(useProfile, \"IKFRbj5HxYVQqavhAzR0F+CGiS4=\", false, function () {\n  return [useSelector];\n});\n\nexport const useTeam = id => {\n  _s11();\n\n  const team = useSelector(state => state.teams.data[id]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeam(id));\n  }, [id, dispatch]);\n  return team;\n};\n\n_s11(useTeam, \"6Ydgnb/W+c1o8rmdL98MENaH9iY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useTeams = () => {\n  _s12();\n\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.teams);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n  return {\n    teams: data,\n    isInitialized,\n    isLoading\n  };\n}; // Achievements\n\n_s12(useTeams, \"vMuTF9KT93zJ/SDKYNNM9rZzenw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useFetchAchievements = () => {\n  _s13();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account));\n    }\n  }, [account, dispatch]);\n};\n\n_s13(useFetchAchievements, \"vU9PSvh4B+dXA6jrPCjdHHFXuTY=\", false, function () {\n  return [useWeb3React, useDispatch];\n});\n\nexport const useAchievements = () => {\n  _s14();\n\n  const achievements = useSelector(state => state.achievements.data);\n  return achievements;\n}; // Prices\n\n_s14(useAchievements, \"YSK51t5rwnyiHZ93Q8BnGfHM9jA=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFetchPriceList = () => {\n  _s15();\n\n  const {\n    slowRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPrices());\n  }, [dispatch, slowRefresh]);\n};\n\n_s15(useFetchPriceList, \"ODIO3TDCpvQIMp0pAFTOj2x4j3w=\", false, function () {\n  return [useRefresh, useDispatch];\n});\n\nexport const useGetApiPrices = () => {\n  _s16();\n\n  const prices = useSelector(state => state.prices.data);\n  return prices;\n};\n\n_s16(useGetApiPrices, \"FfFSnB6kLWyrPuGGju2q0Rwh7JY=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetApiPrice = token => {\n  _s17();\n\n  const prices = useGetApiPrices();\n\n  if (!prices) {\n    return null;\n  }\n\n  return prices[token.toLowerCase()];\n};\n\n_s17(useGetApiPrice, \"4RSofgi5q8qs6bn/kfSx+OTTFNc=\", false, function () {\n  return [useGetApiPrices];\n});\n\nexport const usePriceCakeBusd = () => {\n  _s18();\n\n  const ZERO = new BigNumber(0);\n  const cakeBnbFarm = useFarmFromPid(1);\n  const bnbBusdFarm = useFarmFromPid(5);\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO;\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO;\n  console.log(bnbBusdFarm);\n  return cakeBusdPrice;\n}; // Block\n\n_s18(usePriceCakeBusd, \"gaf6wI8Oz2XiGuYdNsaenyONh3A=\", false, function () {\n  return [useFarmFromPid, useFarmFromPid];\n});\n\nexport const useBlock = () => {\n  _s19();\n\n  return useSelector(state => state.block);\n};\n\n_s19(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useInitialBlock = () => {\n  _s20();\n\n  return useSelector(state => state.block.initialBlock);\n};\n\n_s20(useInitialBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const usePoolsEx = () => {\n  _s21();\n\n  const pools = useSelector(state => state.pools.data);\n  return pools;\n};\n\n_s21(usePoolsEx, \"f44cuJRDRDD22YD+qUOB7G1mlfY=\", false, function () {\n  return [useSelector];\n});\n\nexport const useTotalValue = () => {\n  _s22();\n\n  const prices = useGetApiPrices();\n  const farms = useFarms();\n  const pools = usePoolsEx();\n  let value = new BigNumber(0);\n\n  if (prices) {\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i];\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()];\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd);\n      value = value.plus(totalLiquidity);\n    }\n\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i];\n      const quoteTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()];\n      const totalLiquidity = new BigNumber(getBalanceNumber(pool.totalStaked, pool.stakingToken.decimals)).times(quoteTokenPriceUsd);\n      value = value.plus(totalLiquidity);\n    }\n  }\n\n  return value;\n};\n\n_s22(useTotalValue, \"VsA9n3jhD5IGuWMk9zmz6YKBiFU=\", false, function () {\n  return [useGetApiPrices, useFarms, usePoolsEx];\n});","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/state/hooks.ts"],"names":["useEffect","useMemo","BigNumber","kebabCase","useWeb3React","toastTypes","useSelector","useDispatch","getWeb3NoAccount","useRefresh","fetchFarmsPublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","push","pushToast","remove","removeToast","clear","clearToast","setBlock","fetchProfile","fetchTeam","fetchTeams","fetchAchievements","fetchPrices","getBalanceNumber","useFetchPublicData","dispatch","slowRefresh","web3","interval","setInterval","blockNumber","eth","getBlockNumber","clearInterval","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","pool","p","useToast","helpers","toast","toastError","title","description","id","type","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","useFetchProfile","useProfile","isInitialized","isLoading","hasRegistered","profile","hasProfile","useTeam","team","teams","useTeams","useFetchAchievements","useAchievements","achievements","useFetchPriceList","useGetApiPrices","prices","useGetApiPrice","token","toLowerCase","usePriceCakeBusd","ZERO","cakeBnbFarm","bnbBusdFarm","bnbBusdPrice","tokenPriceVsQuote","div","cakeBusdPrice","times","console","log","useBlock","block","useInitialBlock","initialBlock","usePoolsEx","useTotalValue","value","i","length","quoteTokenPriceUsd","quoteToken","symbol","totalLiquidity","lpTotalInQuoteToken","plus","stakingToken","totalStaked","decimals"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAAgBC,UAAhB,QAAkC,sBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,uBAHF,EAIEC,IAAI,IAAIC,SAJV,EAKEC,MAAM,IAAIC,WALZ,EAMEC,KAAK,IAAIC,UANX,EAOEC,QAPF,QAQO,WARP;AAUA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,SAAtC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAkBnB,UAAU,EAAlC;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,QAAQ,CAACjB,yBAAyB,EAA1B,CAAR;AACAiB,IAAAA,QAAQ,CAAChB,yBAAyB,EAA1B,CAAR;AACD,GAHQ,EAGN,CAACgB,QAAD,EAAWC,WAAX,CAHM,CAAT;AAKA5B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,IAAI,GAAGrB,gBAAgB,EAA7B;AACA,UAAMsB,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvC,YAAMC,WAAW,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,cAAT,EAA1B;AACAP,MAAAA,QAAQ,CAACR,QAAQ,CAACa,WAAD,CAAT,CAAR;AACD,KAH2B,EAGzB,IAHyB,CAA5B;AAKA,WAAO,MAAMG,aAAa,CAACL,QAAD,CAA1B;AACD,GARQ,EAQN,CAACH,QAAD,CARM,CAAT;AASD,CAjBM,C,CAmBP;;GAnBaD,kB;UACMnB,W,EACOE,U;;;AAmB1B,OAAO,MAAM2B,QAAQ,GAAG,MAAc;AAAA;;AACpC,QAAMC,KAAK,GAAG/B,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACD,KAAN,CAAYE,IAA/B,CAAzB;AACA,SAAOF,KAAP;AACD,CAHM;;IAAMD,Q;UACG9B,W;;;AAIhB,OAAO,MAAMkC,cAAc,GAAIC,GAAD,IAAe;AAAA;;AAC3C,QAAMC,IAAI,GAAGpC,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACD,KAAN,CAAYE,IAAZ,CAAiBI,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACH,GAAF,KAAUA,GAAvC,CAAnB,CAAxB;AACA,SAAOC,IAAP;AACD,CAHM;;IAAMF,c;UACElC,W;;;AAIf,OAAO,MAAMuC,iBAAiB,GAAIC,QAAD,IAA4B;AAAA;;AAC3D,QAAMJ,IAAI,GAAGpC,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACD,KAAN,CAAYE,IAAZ,CAAiBI,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACE,QAAF,KAAeA,QAA5C,CAAnB,CAAxB;AACA,SAAOJ,IAAP;AACD,CAHM;;IAAMG,iB;UACEvC,W;;;AAIf,OAAO,MAAMyC,WAAW,GAAIN,GAAD,IAAS;AAAA;;AAClC,QAAMC,IAAI,GAAGF,cAAc,CAACC,GAAD,CAA3B;AAEA,SAAO;AACLO,IAAAA,SAAS,EAAEN,IAAI,CAACO,QAAL,GAAgB,IAAI/C,SAAJ,CAAcwC,IAAI,CAACO,QAAL,CAAcD,SAA5B,CAAhB,GAAyD,IAAI9C,SAAJ,CAAc,CAAd,CAD/D;AAELgD,IAAAA,YAAY,EAAER,IAAI,CAACO,QAAL,GAAgB,IAAI/C,SAAJ,CAAcwC,IAAI,CAACO,QAAL,CAAcC,YAA5B,CAAhB,GAA4D,IAAIhD,SAAJ,CAAc,CAAd,CAFrE;AAGLiD,IAAAA,aAAa,EAAET,IAAI,CAACO,QAAL,GAAgB,IAAI/C,SAAJ,CAAcwC,IAAI,CAACO,QAAL,CAAcE,aAA5B,CAAhB,GAA6D,IAAIjD,SAAJ,CAAc,CAAd,CAHvE;AAILkD,IAAAA,QAAQ,EAAEV,IAAI,CAACO,QAAL,GAAgB,IAAI/C,SAAJ,CAAcwC,IAAI,CAACO,QAAL,CAAcG,QAA5B,CAAhB,GAAwD,IAAIlD,SAAJ,CAAc,CAAd;AAJ7D,GAAP;AAMD,CATM,C,CAWP;;IAXa6C,W;UACEP,c;;;AAYf,OAAO,MAAMa,QAAQ,GAAIC,OAAD,IAAqB;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAkB9C,UAAU,EAAlC;AACA,QAAMkB,QAAQ,GAAGpB,WAAW,EAA5B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsD,OAAJ,EAAa;AACX3B,MAAAA,QAAQ,CAACf,uBAAuB,CAAC0C,OAAD,CAAxB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,EAAU3B,QAAV,EAAoB4B,WAApB,CAJM,CAAT;AAMA,QAAMC,KAAK,GAAGlD,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACkB,KAAN,CAAYjB,IAA/B,CAAzB;AACA,SAAOiB,KAAP;AACD,CAXM;;IAAMH,Q;UACa5C,U,EACPF,W,EAOHD,W;;;AAIhB,OAAO,MAAMmD,cAAc,GAAIC,MAAD,IAAkB;AAAA;;AAC9C,QAAMC,IAAI,GAAGrD,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACkB,KAAN,CAAYjB,IAAZ,CAAiBI,IAAjB,CAAuBiB,CAAD,IAAOA,CAAC,CAACF,MAAF,KAAaA,MAA1C,CAAnB,CAAxB;AACA,SAAOC,IAAP;AACD,CAHM,C,CAKP;;IALaF,c;UACEnD,W;;;AAKf,OAAO,MAAMuD,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMlC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMuD,OAAO,GAAG7D,OAAO,CAAC,MAAM;AAC5B,UAAMY,IAAI,GAAIkD,KAAD,IAAkBpC,QAAQ,CAACb,SAAS,CAACiD,KAAD,CAAV,CAAvC;;AAEA,WAAO;AACLC,MAAAA,UAAU,EAAE,CAACC,KAAD,EAAgBC,WAAhB,KAAyC;AACnD,eAAOrD,IAAI,CAAC;AACVsD,UAAAA,EAAE,EAAEhE,SAAS,CAAC8D,KAAD,CADH;AAEVG,UAAAA,IAAI,EAAE/D,UAAU,CAACgE,MAFP;AAGVJ,UAAAA,KAHU;AAIVC,UAAAA;AAJU,SAAD,CAAX;AAMD,OARI;AASLI,MAAAA,SAAS,EAAE,CAACL,KAAD,EAAgBC,WAAhB,KAAyC;AAClD,eAAOrD,IAAI,CAAC;AACVsD,UAAAA,EAAE,EAAEhE,SAAS,CAAC8D,KAAD,CADH;AAEVG,UAAAA,IAAI,EAAE/D,UAAU,CAACkE,IAFP;AAGVN,UAAAA,KAHU;AAIVC,UAAAA;AAJU,SAAD,CAAX;AAMD,OAhBI;AAiBLM,MAAAA,YAAY,EAAE,CAACP,KAAD,EAAgBC,WAAhB,KAAyC;AACrD,eAAOrD,IAAI,CAAC;AACVsD,UAAAA,EAAE,EAAEhE,SAAS,CAAC8D,KAAD,CADH;AAEVG,UAAAA,IAAI,EAAE/D,UAAU,CAACoE,OAFP;AAGVR,UAAAA,KAHU;AAIVC,UAAAA;AAJU,SAAD,CAAX;AAMD,OAxBI;AAyBLQ,MAAAA,YAAY,EAAE,CAACT,KAAD,EAAgBC,WAAhB,KAAyC;AACrD,eAAOrD,IAAI,CAAC;AACVsD,UAAAA,EAAE,EAAEhE,SAAS,CAAC8D,KAAD,CADH;AAEVG,UAAAA,IAAI,EAAE/D,UAAU,CAACsE,OAFP;AAGVV,UAAAA,KAHU;AAIVC,UAAAA;AAJU,SAAD,CAAX;AAMD,OAhCI;AAiCLrD,MAAAA,IAjCK;AAkCLE,MAAAA,MAAM,EAAGoD,EAAD,IAAgBxC,QAAQ,CAACX,WAAW,CAACmD,EAAD,CAAZ,CAlC3B;AAmCLlD,MAAAA,KAAK,EAAE,MAAMU,QAAQ,CAACT,UAAU,EAAX;AAnChB,KAAP;AAqCD,GAxCsB,EAwCpB,CAACS,QAAD,CAxCoB,CAAvB;AA0CA,SAAOmC,OAAP;AACD,CA7CM,C,CA+CP;;IA/CaD,Q;UACMtD,W;;;AAgDnB,OAAO,MAAMqE,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAM;AAAEtB,IAAAA;AAAF,MAAclD,YAAY,EAAhC;AACA,QAAMuB,QAAQ,GAAGpB,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,QAAQ,CAACP,YAAY,CAACkC,OAAD,CAAb,CAAR;AACD,GAFQ,EAEN,CAACA,OAAD,EAAU3B,QAAV,CAFM,CAAT;AAGD,CAPM;;IAAMiD,e;UACSxE,Y,EACHG,W;;;AAOnB,OAAO,MAAMsE,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BxC,IAAAA,IAA5B;AAAkCyC,IAAAA;AAAlC,MAAkE1E,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAAC2C,OAAzB,CAAnF;AACA,SAAO;AACLA,IAAAA,OAAO,EAAE1C,IADJ;AAEL2C,IAAAA,UAAU,EAAEJ,aAAa,IAAIE,aAFxB;AAGLF,IAAAA,aAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CARM,C,CAUP;;KAVaF,U;UAC6DvE,W;;;AAW1E,OAAO,MAAM6E,OAAO,GAAIhB,EAAD,IAAgB;AAAA;;AACrC,QAAMiB,IAAU,GAAG9E,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAAC+C,KAAN,CAAY9C,IAAZ,CAAiB4B,EAAjB,CAAnB,CAA9B;AACA,QAAMxC,QAAQ,GAAGpB,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,QAAQ,CAACN,SAAS,CAAC8C,EAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACA,EAAD,EAAKxC,QAAL,CAFM,CAAT;AAIA,SAAOyD,IAAP;AACD,CATM;;KAAMD,O;UACQ7E,W,EACFC,W;;;AASnB,OAAO,MAAM+E,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAER,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BxC,IAAAA;AAA5B,MAAiDjC,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAAC+C,KAAzB,CAAlE;AACA,QAAM1D,QAAQ,GAAGpB,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA,SAAO;AAAE0D,IAAAA,KAAK,EAAE9C,IAAT;AAAeuC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,GAAP;AACD,CATM,C,CAWP;;KAXaO,Q;UAC4ChF,W,EACtCC,W;;;AAWnB,OAAO,MAAMgF,oBAAoB,GAAG,MAAM;AAAA;;AACxC,QAAM;AAAEjC,IAAAA;AAAF,MAAclD,YAAY,EAAhC;AACA,QAAMuB,QAAQ,GAAGpB,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsD,OAAJ,EAAa;AACX3B,MAAAA,QAAQ,CAACJ,iBAAiB,CAAC+B,OAAD,CAAlB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,EAAU3B,QAAV,CAJM,CAAT;AAKD,CATM;;KAAM4D,oB;UACSnF,Y,EACHG,W;;;AASnB,OAAO,MAAMiF,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAMC,YAAsC,GAAGnF,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACmD,YAAN,CAAmBlD,IAAtC,CAA1D;AACA,SAAOkD,YAAP;AACD,CAHM,C,CAKP;;KALaD,e;UACoClF,W;;;AAKjD,OAAO,MAAMoF,iBAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAE9D,IAAAA;AAAF,MAAkBnB,UAAU,EAAlC;AACA,QAAMkB,QAAQ,GAAGpB,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,EAAWC,WAAX,CAFM,CAAT;AAGD,CAPM;;KAAM8D,iB;UACajF,U,EACPF,W;;;AAOnB,OAAO,MAAMoF,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAMC,MAA0B,GAAGtF,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACsD,MAAN,CAAarD,IAAhC,CAA9C;AACA,SAAOqD,MAAP;AACD,CAHM;;KAAMD,e;UACwBrF,W;;;AAIrC,OAAO,MAAMuF,cAAc,GAAIC,KAAD,IAAmB;AAAA;;AAC/C,QAAMF,MAAM,GAAGD,eAAe,EAA9B;;AAEA,MAAI,CAACC,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,SAAOA,MAAM,CAACE,KAAK,CAACC,WAAN,EAAD,CAAb;AACD,CARM;;KAAMF,c;UACIF,e;;;AASjB,OAAO,MAAMK,gBAAgB,GAAG,MAAiB;AAAA;;AAC/C,QAAMC,IAAI,GAAG,IAAI/F,SAAJ,CAAc,CAAd,CAAb;AACA,QAAMgG,WAAW,GAAG1D,cAAc,CAAC,CAAD,CAAlC;AACA,QAAM2D,WAAW,GAAG3D,cAAc,CAAC,CAAD,CAAlC;AAEA,QAAM4D,YAAY,GAAGD,WAAW,CAACE,iBAAZ,GAAgC,IAAInG,SAAJ,CAAc,CAAd,EAAiBoG,GAAjB,CAAqBH,WAAW,CAACE,iBAAjC,CAAhC,GAAsFJ,IAA3G;AACA,QAAMM,aAAa,GAAGL,WAAW,CAACG,iBAAZ,GAAgCD,YAAY,CAACI,KAAb,CAAmBN,WAAW,CAACG,iBAA/B,CAAhC,GAAoFJ,IAA1G;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEA,SAAOI,aAAP;AACD,CAXM,C,CAaP;;KAbaP,gB;UAESxD,c,EACAA,c;;;AAWtB,OAAO,MAAMmE,QAAQ,GAAG,MAAM;AAAA;;AAC5B,SAAOrG,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACsE,KAAzB,CAAlB;AACD,CAFM;;KAAMD,Q;UACJrG,W;;;AAGT,OAAO,MAAMuG,eAAe,GAAG,MAAM;AAAA;;AACnC,SAAOvG,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACsE,KAAN,CAAYE,YAA/B,CAAlB;AACD,CAFM;;KAAMD,e;UACJvG,W;;;AAGT,OAAO,MAAMyG,UAAU,GAAG,MAAc;AAAA;;AACtC,QAAMvD,KAAK,GAAGlD,WAAW,CAAEgC,KAAD,IAAkBA,KAAK,CAACkB,KAAN,CAAYjB,IAA/B,CAAzB;AACA,SAAOiB,KAAP;AACD,CAHM;;KAAMuD,U;UACGzG,W;;;AAIhB,OAAO,MAAM0G,aAAa,GAAG,MAAiB;AAAA;;AAC5C,QAAMpB,MAAM,GAAGD,eAAe,EAA9B;AACA,QAAMtD,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMoB,KAAK,GAAGuD,UAAU,EAAxB;AAEA,MAAIE,KAAK,GAAG,IAAI/G,SAAJ,CAAc,CAAd,CAAZ;;AACA,MAAI0F,MAAJ,EAAY;AACV,SAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7E,KAAK,CAAC8E,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAMxE,IAAI,GAAGL,KAAK,CAAC6E,CAAD,CAAlB;AACA,YAAME,kBAAkB,GAAGxB,MAAM,CAAClD,IAAI,CAAC2E,UAAL,CAAgBC,MAAhB,CAAuBvB,WAAvB,EAAD,CAAjC;AACA,YAAMwB,cAAc,GAAG,IAAIrH,SAAJ,CAAcwC,IAAI,CAAC8E,mBAAnB,EAAwChB,KAAxC,CAA8CY,kBAA9C,CAAvB;AACAH,MAAAA,KAAK,GAAGA,KAAK,CAACQ,IAAN,CAAWF,cAAX,CAAR;AACD;;AACD,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1D,KAAK,CAAC2D,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAMvD,IAAI,GAAGH,KAAK,CAAC0D,CAAD,CAAlB;AACA,YAAME,kBAAkB,GAAGxB,MAAM,CAACjC,IAAI,CAAC+D,YAAL,CAAkBJ,MAAlB,CAAyBvB,WAAzB,EAAD,CAAjC;AACA,YAAMwB,cAAc,GAAG,IAAIrH,SAAJ,CAAcuB,gBAAgB,CAACkC,IAAI,CAACgE,WAAN,EAAmBhE,IAAI,CAAC+D,YAAL,CAAkBE,QAArC,CAA9B,EAA8EpB,KAA9E,CACrBY,kBADqB,CAAvB;AAGAH,MAAAA,KAAK,GAAGA,KAAK,CAACQ,IAAN,CAAWF,cAAX,CAAR;AACD;AACF;;AACD,SAAON,KAAP;AACD,CAvBM;;KAAMD,a;UACIrB,e,EACDvD,Q,EACA2E,U","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { Toast, toastTypes } from '@mozartfinance/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport { getBalanceNumber } from '../utils/formatBalance'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description,\n        })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description,\n        })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description,\n        })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description,\n        })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading,\n  }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[token.toLowerCase()]\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const ZERO = new BigNumber(0)\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdFarm = useFarmFromPid(5)\n\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\n\n  console.log(bnbBusdFarm)\n\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\nexport const usePoolsEx = (): Pool[] => {\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const prices = useGetApiPrices()\n  const farms = useFarms()\n  const pools = usePoolsEx()\n\n  let value = new BigNumber(0)\n  if (prices) {\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i]\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n      value = value.plus(totalLiquidity)\n    }\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i]\n      const quoteTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()]\n      const totalLiquidity = new BigNumber(getBalanceNumber(pool.totalStaked, pool.stakingToken.decimals)).times(\n        quoteTokenPriceUsd,\n      )\n      value = value.plus(totalLiquidity)\n    }\n  }\n  return value\n}\n"]},"metadata":{},"sourceType":"module"}