{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Pools/components/WithdrawModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { Button, Modal } from \"@mozartfinance/uikit\";\nimport ModalActions from \"components/ModalActions\";\nimport TokenInput from \"components/TokenInput\";\nimport useI18n from \"hooks/useI18n\";\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithdrawModal = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = \"\",\n  stakingTokenDecimals = 18\n}) => {\n  _s();\n\n  const [val, setVal] = useState(\"\");\n  const [pendingTx, setPendingTx] = useState(false);\n  const TranslateString = useI18n();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals);\n  }, [max, stakingTokenDecimals]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Withdraw ${tokenName}`,\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(TokenInput, {\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      value: val,\n      max: fullBalance,\n      symbol: tokenName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        children: TranslateString(462, \"Cancel\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onConfirm(val, stakingTokenDecimals);\n          setPendingTx(false);\n          onDismiss();\n        },\n        children: pendingTx ? TranslateString(488, \"Pending Confirmation\") : TranslateString(464, \"Confirm\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WithdrawModal, \"mdmQwIFn3J3Vq8WQJPBhztZpwKI=\", false, function () {\n  return [useI18n];\n});\n\n_c = WithdrawModal;\nexport default WithdrawModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithdrawModal\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Pools/components/WithdrawModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","TokenInput","useI18n","getFullDisplayBalance","WithdrawModal","onConfirm","onDismiss","max","tokenName","stakingTokenDecimals","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,sBAA9B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;AAUA,MAAMC,aAA2C,GAAG,CAAC;AACnDC,EAAAA,SADmD;AAEnDC,EAAAA,SAFmD;AAGnDC,EAAAA,GAHmD;AAInDC,EAAAA,SAAS,GAAG,EAJuC;AAKnDC,EAAAA,oBAAoB,GAAG;AAL4B,CAAD,KAM9C;AAAA;;AACJ,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMiB,eAAe,GAAGZ,OAAO,EAA/B;AACA,QAAMa,WAAW,GAAGnB,OAAO,CAAC,MAAM;AAChC,WAAOO,qBAAqB,CAACI,GAAD,EAAME,oBAAN,CAA5B;AACD,GAF0B,EAExB,CAACF,GAAD,EAAME,oBAAN,CAFwB,CAA3B;AAIA,QAAMO,YAAY,GAAGrB,WAAW,CAC7BsB,CAAD,IAA0C;AACxCN,IAAAA,MAAM,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN;AACD,GAH6B,EAI9B,CAACR,MAAD,CAJ8B,CAAhC;AAOA,QAAMS,eAAe,GAAGzB,WAAW,CAAC,MAAM;AACxCgB,IAAAA,MAAM,CAACI,WAAD,CAAN;AACD,GAFkC,EAEhC,CAACA,WAAD,EAAcJ,MAAd,CAFgC,CAAnC;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAG,YAAWH,SAAU,EAApC;AAAuC,IAAA,SAAS,EAAEF,SAAlD;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,WAAW,EAAEc,eADf;AAEE,MAAA,QAAQ,EAAEJ,YAFZ;AAGE,MAAA,KAAK,EAAEN,GAHT;AAIE,MAAA,GAAG,EAAEK,WAJP;AAKE,MAAA,MAAM,EAAEP;AALV;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEF,SAArC;AAAA,kBACGQ,eAAe,CAAC,GAAD,EAAM,QAAN;AADlB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEF,SADZ;AAEE,QAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMR,SAAS,CAACK,GAAD,EAAMD,oBAAN,CAAf;AACAI,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAP,UAAAA,SAAS;AACV,SAPH;AAAA,kBASGM,SAAS,GACNE,eAAe,CAAC,GAAD,EAAM,sBAAN,CADT,GAENA,eAAe,CAAC,GAAD,EAAM,SAAN;AAXrB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtDD;;GAAMV,a;UASoBF,O;;;KATpBE,a;AAwDN,eAAeA,aAAf","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { Button, Modal } from \"@mozartfinance/uikit\";\nimport ModalActions from \"components/ModalActions\";\nimport TokenInput from \"components/TokenInput\";\nimport useI18n from \"hooks/useI18n\";\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\n\ninterface WithdrawModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string, decimals: number) => void;\n  onDismiss?: () => void;\n  tokenName?: string;\n  stakingTokenDecimals?: number;\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = \"\",\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState(\"\");\n  const [pendingTx, setPendingTx] = useState(false);\n  const TranslateString = useI18n();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals);\n  }, [max, stakingTokenDecimals]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal]\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, \"Cancel\")}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true);\n            await onConfirm(val, stakingTokenDecimals);\n            setPendingTx(false);\n            onDismiss();\n          }}\n        >\n          {pendingTx\n            ? TranslateString(488, \"Pending Confirmation\")\n            : TranslateString(464, \"Confirm\")}\n        </Button>\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default WithdrawModal;\n"]},"metadata":{},"sourceType":"module"}