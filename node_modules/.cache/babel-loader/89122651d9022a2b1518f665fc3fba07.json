{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Home/components/EarnAPYCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@jazzdefi/uikit';\nimport max from 'lodash/max';\nimport { NavLink } from 'react-router-dom';\nimport useI18n from 'hooks/useI18n';\nimport BigNumber from 'bignumber.js';\nimport { getFarmApy } from 'utils/apy';\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`;\n_c = StyledFarmStakingCard;\nconst CardMidContent = styled(Heading).attrs({\n  size: 'xl'\n})`\n  line-height: 44px;\n`;\n_c2 = CardMidContent;\n\nconst EarnAPYCard = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const farmsLP = useFarms();\n  const prices = useGetApiPrices();\n  const cakePrice = usePriceCakeBusd();\n  const highestApy = useMemo(() => {\n    const apys = farmsLP // Filter inactive farms, because their theoretical APY is super high. In practice, it's 0.\n    .filter(farm => farm.pid !== 0 && farm.multiplier !== '0X').map(farm => {\n      if (farm.lpTotalInQuoteToken && prices) {\n        const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()];\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd);\n        return getFarmApy(farm.poolWeight, cakePrice, totalLiquidity);\n      }\n\n      return null;\n    });\n    const maxApy = max(apys);\n    return maxApy === null || maxApy === void 0 ? void 0 : maxApy.toLocaleString('en-US', {\n      maximumFractionDigits: 2\n    });\n  }, [cakePrice, farmsLP, prices]);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        color: \"contrast\",\n        size: \"lg\",\n        children: \"Earn up to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMidContent, {\n        color: \"primary\",\n        children: highestApy ? `${highestApy}% ${TranslateString(736, 'APR')}` : /*#__PURE__*/_jsxDEV(Skeleton, {\n          animation: \"pulse\",\n          variant: \"rect\",\n          height: \"44px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"contrast\",\n          size: \"lg\",\n          children: \"in Farms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          activeClassName: \"active\",\n          to: \"/farms\",\n          id: \"farm-apy-cta\",\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            mt: 30,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EarnAPYCard, \"WuT6uMqfh/KVEHFul7xukhed67M=\", false, function () {\n  return [useI18n, useFarms, useGetApiPrices, usePriceCakeBusd];\n});\n\n_c3 = EarnAPYCard;\nexport default EarnAPYCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"CardMidContent\");\n$RefreshReg$(_c3, \"EarnAPYCard\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Home/components/EarnAPYCard.tsx"],"names":["React","useMemo","styled","Heading","Card","CardBody","Flex","ArrowForwardIcon","Skeleton","max","NavLink","useI18n","BigNumber","getFarmApy","useFarms","usePriceCakeBusd","useGetApiPrices","StyledFarmStakingCard","theme","mediaQueries","lg","CardMidContent","attrs","size","EarnAPYCard","TranslateString","farmsLP","prices","cakePrice","highestApy","apys","filter","farm","pid","multiplier","map","lpTotalInQuoteToken","quoteTokenPriceUsd","quoteToken","symbol","toLowerCase","totalLiquidity","times","poolWeight","maxApy","toLocaleString","maximumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@jazzdefi/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { getFarmApy } from 'utils/apy'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPYCard = () => {\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const prices = useGetApiPrices()\n  const cakePrice = usePriceCakeBusd()\n\n  const highestApy = useMemo(() => {\n    const apys = farmsLP\n      // Filter inactive farms, because their theoretical APY is super high. In practice, it's 0.\n      .filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n      .map((farm) => {\n        if (farm.lpTotalInQuoteToken && prices) {\n          const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n          return getFarmApy(farm.poolWeight, cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n    const maxApy = max(apys)\n    return maxApy?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }, [cakePrice, farmsLP, prices])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn up to\n        </Heading>\n        <CardMidContent color=\"primary\">\n          {highestApy ? (\n            `${highestApy}% ${TranslateString(736, 'APR')}`\n          ) : (\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\n          )}\n        </CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Farms\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apy-cta\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPYCard\n"]},"metadata":{},"sourceType":"module"}