{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/ApproveCakeView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AutoRenewIcon, Button, Flex, Text } from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport { useCake } from \"hooks/useContract\";\nimport { useProfile, useToast } from \"state/hooks\";\nimport { getPancakeProfileAddress } from \"utils/addressHelpers\";\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\nimport useGetProfileCosts from \"hooks/useGetProfileCosts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApproveCakePage = ({\n  goToChange,\n  onDismiss\n}) => {\n  _s();\n\n  const [isApproving, setIsApproving] = useState(false);\n  const {\n    profile\n  } = useProfile();\n  const TranslateString = useI18n();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    numberCakeToUpdate,\n    numberCakeToReactivate\n  } = useGetProfileCosts();\n  const cakeContract = useCake();\n  const {\n    toastError\n  } = useToast();\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate;\n\n  const handleApprove = () => {\n    cakeContract.methods.approve(getPancakeProfileAddress(), cost.times(2).toJSON()).send({\n      from: account\n    }).on(\"sending\", () => {\n      setIsApproving(true);\n    }).on(\"receipt\", () => {\n      goToChange();\n    }).on(\"error\", error => {\n      toastError(\"Error\", error === null || error === void 0 ? void 0 : error.message);\n      setIsApproving(false);\n    });\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: profile.isActive ? TranslateString(999, \"Cost to update:\") : TranslateString(999, \"Cost to reactivate:\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: isApproving,\n      isLoading: isApproving,\n      endIcon: isApproving ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this) : null,\n      width: \"100%\",\n      mb: \"8px\",\n      onClick: handleApprove,\n      children: TranslateString(999, \"Approve\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      width: \"100%\",\n      onClick: onDismiss,\n      disabled: isApproving,\n      children: TranslateString(999, \"Close Window\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApproveCakePage, \"lBLTg7KLqzyNlfyf9cdWjKNaUgQ=\", false, function () {\n  return [useProfile, useI18n, useWeb3React, useGetProfileCosts, useCake, useToast];\n});\n\n_c = ApproveCakePage;\nexport default ApproveCakePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApproveCakePage\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Profile/components/EditProfileModal/ApproveCakeView.tsx"],"names":["React","useState","useWeb3React","AutoRenewIcon","Button","Flex","Text","useI18n","useCake","useProfile","useToast","getPancakeProfileAddress","getFullDisplayBalance","useGetProfileCosts","ApproveCakePage","goToChange","onDismiss","isApproving","setIsApproving","profile","TranslateString","account","numberCakeToUpdate","numberCakeToReactivate","cakeContract","toastError","cost","isActive","handleApprove","methods","approve","times","toJSON","send","from","on","error","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport {\n  AutoRenewIcon,\n  Button,\n  Flex,\n  InjectedModalProps,\n  Text,\n} from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport { useCake } from \"hooks/useContract\";\nimport { useProfile, useToast } from \"state/hooks\";\nimport { getPancakeProfileAddress } from \"utils/addressHelpers\";\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\nimport useGetProfileCosts from \"hooks/useGetProfileCosts\";\nimport { UseEditProfileResponse } from \"./reducer\";\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse[\"goToChange\"];\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({\n  goToChange,\n  onDismiss,\n}) => {\n  const [isApproving, setIsApproving] = useState(false);\n  const { profile } = useProfile();\n  const TranslateString = useI18n();\n  const { account } = useWeb3React();\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts();\n  const cakeContract = useCake();\n  const { toastError } = useToast();\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate;\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on(\"sending\", () => {\n        setIsApproving(true);\n      })\n      .on(\"receipt\", () => {\n        goToChange();\n      })\n      .on(\"error\", (error) => {\n        toastError(\"Error\", error?.message);\n        setIsApproving(false);\n      });\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive\n            ? TranslateString(999, \"Cost to update:\")\n            : TranslateString(999, \"Cost to reactivate:\")}\n        </Text>\n        <Text>\n          {TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}\n        </Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={\n          isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null\n        }\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, \"Approve\")}\n      </Button>\n      <Button\n        variant=\"text\"\n        width=\"100%\"\n        onClick={onDismiss}\n        disabled={isApproving}\n      >\n        {TranslateString(999, \"Close Window\")}\n      </Button>\n    </Flex>\n  );\n};\n\nexport default ApproveCakePage;\n"]},"metadata":{},"sourceType":"module"}