{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from \"state/actions\";\nimport { unstake, sousUnstake, sousEmegencyUnstake } from \"utils/callHelpers\";\nimport { useMasterchef, useSousChef } from \"./useContract\";\n\nconst useUnstake = pid => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const masterChefContract = useMasterchef();\n  const handleUnstake = useCallback(async amount => {\n    const txHash = await unstake(masterChefContract, pid, amount, account);\n    dispatch(fetchFarmUserDataAsync(account));\n    console.info(txHash);\n  }, [account, dispatch, masterChefContract, pid]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n\n_s(useUnstake, \"49K/6tNJelimdnN2xtfldf/04Eo=\", false, function () {\n  return [useDispatch, useWeb3React, useMasterchef];\n});\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 78];\nexport const useSousUnstake = sousId => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const masterChefContract = useMasterchef();\n  const sousChefContract = useSousChef(sousId);\n  const isOldSyrup = SYRUPIDS.includes(sousId);\n  const handleUnstake = useCallback(async (amount, decimals) => {\n    if (sousId === 0) {\n      const txHash = await unstake(masterChefContract, 0, amount, account);\n      console.info(txHash);\n    } else if (isOldSyrup) {\n      const txHash = await sousEmegencyUnstake(sousChefContract, amount, account);\n      console.info(txHash);\n    } else {\n      const txHash = await sousUnstake(sousChefContract, amount, decimals, account);\n      console.info(txHash);\n    }\n\n    dispatch(updateUserStakedBalance(sousId, account));\n    dispatch(updateUserBalance(sousId, account));\n    dispatch(updateUserPendingReward(sousId, account));\n  }, [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n\n_s2(useSousUnstake, \"PLuOW3d1fHY7fSidEzAGkydaJ4E=\", false, function () {\n  return [useDispatch, useWeb3React, useMasterchef, useSousChef];\n});\n\nexport default useUnstake;","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/hooks/useUnstake.ts"],"names":["useCallback","useWeb3React","useDispatch","fetchFarmUserDataAsync","updateUserStakedBalance","updateUserBalance","updateUserPendingReward","unstake","sousUnstake","sousEmegencyUnstake","useMasterchef","useSousChef","useUnstake","pid","dispatch","account","masterChefContract","handleUnstake","amount","txHash","console","info","onUnstake","SYRUPIDS","useSousUnstake","sousId","sousChefContract","isOldSyrup","includes","decimals"],"mappings":"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","sourcesContent":["import { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from \"state/actions\";\nimport { unstake, sousUnstake, sousEmegencyUnstake } from \"utils/callHelpers\";\nimport { useMasterchef, useSousChef } from \"./useContract\";\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const masterChefContract = useMasterchef();\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account);\n      dispatch(fetchFarmUserDataAsync(account));\n      console.info(txHash);\n    },\n    [account, dispatch, masterChefContract, pid]\n  );\n\n  return { onUnstake: handleUnstake };\n};\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 78];\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const masterChefContract = useMasterchef();\n  const sousChefContract = useSousChef(sousId);\n  const isOldSyrup = SYRUPIDS.includes(sousId);\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account);\n        console.info(txHash);\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(\n          sousChefContract,\n          amount,\n          account\n        );\n        console.info(txHash);\n      } else {\n        const txHash = await sousUnstake(\n          sousChefContract,\n          amount,\n          decimals,\n          account\n        );\n        console.info(txHash);\n      }\n      dispatch(updateUserStakedBalance(sousId, account));\n      dispatch(updateUserBalance(sousId, account));\n      dispatch(updateUserPendingReward(sousId, account));\n    },\n    [\n      account,\n      dispatch,\n      isOldSyrup,\n      masterChefContract,\n      sousChefContract,\n      sousId,\n    ]\n  );\n\n  return { onUnstake: handleUnstake };\n};\n\nexport default useUnstake;\n"]},"metadata":{},"sourceType":"module"}