{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport Web3 from 'web3';\nimport { useWeb3React } from '@web3-react/core';\nimport { getWeb3NoAccount } from 'utils/web3';\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\n\nconst useWeb3 = () => {\n  _s();\n\n  const {\n    library\n  } = useWeb3React();\n  const refEth = useRef(library);\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount());\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount());\n      refEth.current = library;\n    }\n  }, [library]);\n  return web3;\n};\n\n_s(useWeb3, \"eclADet6IK75aenPiutvEzCcso4=\", false, function () {\n  return [useWeb3React];\n});\n\nexport default useWeb3;","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/hooks/useWeb3.ts"],"names":["useEffect","useState","useRef","Web3","useWeb3React","getWeb3NoAccount","useWeb3","library","refEth","web3","setweb3","current"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcH,YAAY,EAAhC;AACA,QAAMI,MAAM,GAAGN,MAAM,CAACK,OAAD,CAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACM,OAAO,GAAG,IAAIJ,IAAJ,CAASI,OAAT,CAAH,GAAuBF,gBAAgB,EAA/C,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,KAAKC,MAAM,CAACG,OAAvB,EAAgC;AAC9BD,MAAAA,OAAO,CAACH,OAAO,GAAG,IAAIJ,IAAJ,CAASI,OAAT,CAAH,GAAuBF,gBAAgB,EAA/C,CAAP;AACAG,MAAAA,MAAM,CAACG,OAAP,GAAiBJ,OAAjB;AACD;AACF,GALQ,EAKN,CAACA,OAAD,CALM,CAAT;AAOA,SAAOE,IAAP;AACD,CAbD;;GAAMH,O;UACgBF,Y;;;AActB,eAAeE,OAAf","sourcesContent":["import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n"]},"metadata":{},"sourceType":"module"}