{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { connectorLocalStorageKey, ConnectorNames } from '@jazzdefi/uikit';\nimport useAuth from 'hooks/useAuth';\n\nconst useEagerConnect = () => {\n  _s();\n\n  const {\n    login\n  } = useAuth();\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey); // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId);\n    }\n  }, [login]);\n};\n\n_s(useEagerConnect, \"Wgz/Ryr6BWZJCDTHbflgjoyTd1g=\", false, function () {\n  return [useAuth];\n});\n\nexport default useEagerConnect;","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/hooks/useEagerConnect.ts"],"names":["useEffect","connectorLocalStorageKey","ConnectorNames","useAuth","useEagerConnect","login","connectorId","window","localStorage","getItem","BSC"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,wBAAT,EAAmCC,cAAnC,QAAyD,iBAAzD;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAYF,OAAO,EAAzB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,WAAW,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,wBAA5B,CAApB,CADc,CAGd;AACA;AACA;;AACA,QAAIK,WAAW,IAAIA,WAAW,KAAKJ,cAAc,CAACQ,GAAlD,EAAuD;AACrDL,MAAAA,KAAK,CAACC,WAAD,CAAL;AACD;AACF,GATQ,EASN,CAACD,KAAD,CATM,CAAT;AAUD,CAbD;;GAAMD,e;UACcD,O;;;AAcpB,eAAeC,eAAf","sourcesContent":["import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@jazzdefi/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n"]},"metadata":{},"sourceType":"module"}