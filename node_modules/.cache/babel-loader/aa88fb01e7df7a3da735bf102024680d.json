{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { getLotteryAddress } from \"utils/addressHelpers\";\nimport { useCake } from \"./useContract\";\nimport useRefresh from \"./useRefresh\"; // Retrieve lottery allowance\n\nexport const useLotteryAllowance = () => {\n  _s();\n\n  const [allowance, setAllowance] = useState(new BigNumber(0));\n  const {\n    account\n  } = useWeb3React();\n  const cakeContract = useCake();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call();\n      setAllowance(new BigNumber(res));\n    };\n\n    if (account) {\n      fetchAllowance();\n    }\n  }, [account, cakeContract, fastRefresh]);\n  return allowance;\n}; // Retrieve IFO allowance\n\n_s(useLotteryAllowance, \"Kz+Ir0O/tnZiccPOZR3Hs1fQMZI=\", false, function () {\n  return [useWeb3React, useCake, useRefresh];\n});\n\nexport const useIfoAllowance = (tokenContract, spenderAddress, dependency) => {\n  _s2();\n\n  const {\n    account\n  } = useWeb3React();\n  const [allowance, setAllowance] = useState(new BigNumber(0));\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call();\n        setAllowance(new BigNumber(res));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    fetch();\n  }, [account, spenderAddress, tokenContract, dependency]);\n  return allowance;\n};\n\n_s2(useIfoAllowance, \"6J7D6XN/XkrOfDkiuSfDCLjTIr8=\", false, function () {\n  return [useWeb3React];\n});","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/hooks/useAllowance.ts"],"names":["useEffect","useState","BigNumber","useWeb3React","getLotteryAddress","useCake","useRefresh","useLotteryAllowance","allowance","setAllowance","account","cakeContract","fastRefresh","fetchAllowance","res","methods","call","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch","e","console","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAA1C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,YAAY,EAAhC;AACA,QAAMQ,YAAY,GAAGN,OAAO,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBN,UAAU,EAAlC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,cAAc,GAAG,YAAY;AACjC,YAAMC,GAAG,GAAG,MAAMH,YAAY,CAACI,OAAb,CACfP,SADe,CACLE,OADK,EACIN,iBAAiB,EADrB,EAEfY,IAFe,EAAlB;AAGAP,MAAAA,YAAY,CAAC,IAAIP,SAAJ,CAAcY,GAAd,CAAD,CAAZ;AACD,KALD;;AAOA,QAAIJ,OAAJ,EAAa;AACXG,MAAAA,cAAc;AACf;AACF,GAXQ,EAWN,CAACH,OAAD,EAAUC,YAAV,EAAwBC,WAAxB,CAXM,CAAT;AAaA,SAAOJ,SAAP;AACD,CApBM,C,CAsBP;;GAtBaD,mB;UAESJ,Y,EACCE,O,EACGC,U;;;AAmB1B,OAAO,MAAMW,eAAe,GAAG,CAC7BC,aAD6B,EAE7BC,cAF6B,EAG7BC,UAH6B,KAIf;AAAA;;AACd,QAAM;AAAEV,IAAAA;AAAF,MAAcP,YAAY,EAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,KAAK,GAAG,YAAY;AACxB,UAAI;AACF,cAAMP,GAAG,GAAG,MAAMI,aAAa,CAACH,OAAd,CACfP,SADe,CACLE,OADK,EACIS,cADJ,EAEfH,IAFe,EAAlB;AAGAP,QAAAA,YAAY,CAAC,IAAIP,SAAJ,CAAcY,GAAd,CAAD,CAAZ;AACD,OALD,CAKE,OAAOQ,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KATD;;AAUAD,IAAAA,KAAK;AACN,GAZQ,EAYN,CAACX,OAAD,EAAUS,cAAV,EAA0BD,aAA1B,EAAyCE,UAAzC,CAZM,CAAT;AAcA,SAAOZ,SAAP;AACD,CAvBM;;IAAMS,e;UAKSd,Y","sourcesContent":["import { useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"web3-eth-contract\";\nimport { getLotteryAddress } from \"utils/addressHelpers\";\nimport { useCake } from \"./useContract\";\nimport useRefresh from \"./useRefresh\";\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0));\n  const { account } = useWeb3React();\n  const cakeContract = useCake();\n  const { fastRefresh } = useRefresh();\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods\n        .allowance(account, getLotteryAddress())\n        .call();\n      setAllowance(new BigNumber(res));\n    };\n\n    if (account) {\n      fetchAllowance();\n    }\n  }, [account, cakeContract, fastRefresh]);\n\n  return allowance;\n};\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (\n  tokenContract: Contract,\n  spenderAddress: string,\n  dependency?: any\n): BigNumber => {\n  const { account } = useWeb3React();\n  const [allowance, setAllowance] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods\n          .allowance(account, spenderAddress)\n          .call();\n        setAllowance(new BigNumber(res));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetch();\n  }, [account, spenderAddress, tokenContract, dependency]);\n\n  return allowance;\n};\n"]},"metadata":{},"sourceType":"module"}