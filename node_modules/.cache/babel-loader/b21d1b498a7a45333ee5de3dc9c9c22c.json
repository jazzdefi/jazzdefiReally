{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/ContributeModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport { Modal, LinkExternal, Box, Text } from 'jazzdefi/jazzdefi-uikit';\nimport BalanceInput from 'components/BalanceInput';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport useI18n from 'hooks/useI18n';\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { useERC20 } from 'hooks/useContract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributeModal = ({\n  currency,\n  contract,\n  currencyAddress,\n  onDismiss,\n  onSuccess\n}) => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const {\n    account\n  } = useWeb3React();\n  const raisingTokenContract = useERC20(currencyAddress);\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress));\n  const TranslateString = useI18n();\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18));\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call();\n        const currentAllowance = new BigNumber(response);\n        return currentAllowance.gt(0);\n      } catch (error) {\n        return false;\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods.approve(contract.options.address, ethers.constants.MaxUint256).send({\n        from: account\n      });\n    },\n    onConfirm: () => {\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({\n        from: account\n      });\n    },\n    onSuccess: async () => {\n      onDismiss();\n      onSuccess(valueWithTokenDecimals);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Contribute ${currency}`,\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxWidth: \"400px\",\n      children: [/*#__PURE__*/_jsxDEV(BalanceInput, {\n        title: TranslateString(999, 'Contribute'),\n        value: value,\n        onChange: e => setValue(e.currentTarget.value),\n        symbol: currency,\n        max: balance,\n        onSelectMax: () => setValue(balance.toString()),\n        mb: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        mb: \"24px\",\n        children: TranslateString(999, \"If you don't contribute enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n        isApproveDisabled: isConfirmed || isConfirming || isApproved,\n        isApproving: isApproving,\n        isConfirmDisabled: !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0),\n        isConfirming: isConfirming,\n        onApprove: handleApprove,\n        onConfirm: handleConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n        href: \"https://exchange.pancakeswap.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\",\n        style: {\n          margin: '16px auto 0'\n        },\n        children: `Get ${currency}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContributeModal, \"5A9PF1tnG4U4bECOVXeTVoUqTl8=\", false, function () {\n  return [useWeb3React, useERC20, useTokenBalance, useI18n, useApproveConfirmTransaction];\n});\n\n_c = ContributeModal;\nexport default ContributeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeModal\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Ifos/components/IfoCard/ContributeModal.tsx"],"names":["React","useState","useWeb3React","BigNumber","ethers","Modal","LinkExternal","Box","Text","BalanceInput","useTokenBalance","getBalanceNumber","useI18n","ApproveConfirmButtons","useApproveConfirmTransaction","useERC20","ContributeModal","currency","contract","currencyAddress","onDismiss","onSuccess","value","setValue","account","raisingTokenContract","balance","TranslateString","valueWithTokenDecimals","times","pow","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","methods","allowance","options","address","call","currentAllowance","gt","error","onApprove","approve","constants","MaxUint256","send","from","onConfirm","deposit","toString","e","currentTarget","isNaN","eq","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, LinkExternal, Box, Text } from 'jazzdefi/jazzdefi-uikit'\nimport BalanceInput from 'components/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC20 } from 'hooks/useContract'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss, onSuccess }) => {\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const raisingTokenContract = useERC20(currencyAddress)\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress))\n  const TranslateString = useI18n()\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods\n        .approve(contract.options.address, ethers.constants.MaxUint256)\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\n    },\n    onSuccess: async () => {\n      onDismiss()\n      onSuccess(valueWithTokenDecimals)\n    },\n  })\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <Box maxWidth=\"400px\">\n        <BalanceInput\n          title={TranslateString(999, 'Contribute')}\n          value={value}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          symbol={currency}\n          max={balance}\n          onSelectMax={() => setValue(balance.toString())}\n          mb=\"24px\"\n        />\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            \"If you don't contribute enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.\",\n          )}\n        </Text>\n        <ApproveConfirmButtons\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\n          isApproving={isApproving}\n          isConfirmDisabled={\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\n          }\n          isConfirming={isConfirming}\n          onApprove={handleApprove}\n          onConfirm={handleConfirm}\n        />\n        <LinkExternal\n          href=\"https://exchange.pancakeswap.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n          style={{ margin: '16px auto 0' }}\n        >\n          {`Get ${currency}`}\n        </LinkExternal>\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n"]},"metadata":{},"sourceType":"module"}