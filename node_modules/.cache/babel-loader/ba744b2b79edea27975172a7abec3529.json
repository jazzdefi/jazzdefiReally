{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ChevronDownIcon, ChevronUpIcon, Text } from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({\n  theme\n}) => theme.colors.primary};\n  }\n`;\n_c = Wrapper;\n\nconst ExpandableSectionButton = ({\n  onClick,\n  expanded\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    \"aria-label\": \"Hide or show expandable content\",\n    role: \"button\",\n    onClick: () => onClick(),\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"primary\",\n      bold: true,\n      children: expanded ? TranslateString(999, \"Hide\") : TranslateString(658, \"Details\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), expanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpandableSectionButton, \"SC/Zc+rnUQSfBje7TuuyRy0lI/g=\", false, function () {\n  return [useI18n];\n});\n\n_c2 = ExpandableSectionButton;\nExpandableSectionButton.defaultProps = {\n  expanded: false\n};\nexport default ExpandableSectionButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ExpandableSectionButton\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx"],"names":["React","styled","ChevronDownIcon","ChevronUpIcon","Text","useI18n","Wrapper","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","TranslateString","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,IAAzC,QAAqD,sBAArD;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAOA,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,OAAQ;AAChD;AACA,CATA;KAAMJ,O;;AAWN,MAAMK,uBAA+D,GAAG,CAAC;AACvEC,EAAAA,OADuE;AAEvEC,EAAAA;AAFuE,CAAD,KAGlE;AAAA;;AACJ,QAAMC,eAAe,GAAGT,OAAO,EAA/B;AAEA,sBACE,QAAC,OAAD;AACE,kBAAW,iCADb;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMO,OAAO,EAHxB;AAAA,4BAKE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAsB,MAAA,IAAI,MAA1B;AAAA,gBACGC,QAAQ,GACLC,eAAe,CAAC,GAAD,EAAM,MAAN,CADV,GAELA,eAAe,CAAC,GAAD,EAAM,SAAN;AAHrB;AAAA;AAAA;AAAA;AAAA,YALF,EAUGD,QAAQ,gBAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAuB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAVlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApBD;;GAAMF,uB;UAIoBN,O;;;MAJpBM,uB;AAsBNA,uBAAuB,CAACI,YAAxB,GAAuC;AACrCF,EAAAA,QAAQ,EAAE;AAD2B,CAAvC;AAIA,eAAeF,uBAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { ChevronDownIcon, ChevronUpIcon, Text } from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void;\n  expanded?: boolean;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({\n  onClick,\n  expanded,\n}) => {\n  const TranslateString = useI18n();\n\n  return (\n    <Wrapper\n      aria-label=\"Hide or show expandable content\"\n      role=\"button\"\n      onClick={() => onClick()}\n    >\n      <Text color=\"primary\" bold>\n        {expanded\n          ? TranslateString(999, \"Hide\")\n          : TranslateString(658, \"Details\")}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  );\n};\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n};\n\nexport default ExpandableSectionButton;\n"]},"metadata":{},"sourceType":"module"}