{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/StakeAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport useStake from \"hooks/useStake\";\nimport useUnstake from \"hooks/useUnstake\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport DepositModal from \"../DepositModal\";\nimport WithdrawModal from \"../WithdrawModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`;\n_c = IconButtonWrapper;\n\nconst StakeAction = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  depositFeeBP\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    onStake\n  } = useStake(pid);\n  const {\n    onUnstake\n  } = useUnstake(pid);\n  const rawStakedBalance = getBalanceNumber(stakedBalance);\n  const displayBalance = rawStakedBalance.toLocaleString();\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: tokenBalance,\n    onConfirm: onStake,\n    tokenName: tokenName,\n    addLiquidityUrl: addLiquidityUrl,\n    depositFeeBP: depositFeeBP\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: tokenName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onPresentDeposit,\n      children: TranslateString(999, \"Stake LP\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(IconButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"tertiary\",\n        onClick: onPresentWithdraw,\n        mr: \"6px\",\n        children: /*#__PURE__*/_jsxDEV(MinusIcon, {\n          color: \"primary\",\n          width: \"14px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"tertiary\",\n        onClick: onPresentDeposit,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          color: \"primary\",\n          width: \"14px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      color: rawStakedBalance === 0 ? \"textDisabled\" : \"text\",\n      children: displayBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), renderStakingButtons()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StakeAction, \"WxmC5ksX9Rezbx1Edxpgm7HpZZE=\", false, function () {\n  return [useI18n, useStake, useUnstake, useModal, useModal];\n});\n\n_c2 = StakeAction;\nexport default StakeAction;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IconButtonWrapper\");\n$RefreshReg$(_c2, \"StakeAction\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmCard/StakeAction.tsx"],"names":["React","styled","Button","Flex","Heading","IconButton","AddIcon","MinusIcon","useModal","useI18n","useStake","useUnstake","getBalanceNumber","DepositModal","WithdrawModal","IconButtonWrapper","div","StakeAction","stakedBalance","tokenBalance","tokenName","pid","addLiquidityUrl","depositFeeBP","TranslateString","onStake","onUnstake","rawStakedBalance","displayBalance","toLocaleString","onPresentDeposit","onPresentWithdraw","renderStakingButtons"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  Button,\n  Flex,\n  Heading,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n} from \"@mozartfinance/uikit\";\nimport useI18n from \"hooks/useI18n\";\nimport useStake from \"hooks/useStake\";\nimport useUnstake from \"hooks/useUnstake\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport DepositModal from \"../DepositModal\";\nimport WithdrawModal from \"../WithdrawModal\";\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber;\n  tokenBalance?: BigNumber;\n  tokenName?: string;\n  pid?: number;\n  addLiquidityUrl?: string;\n  depositFeeBP?: number;\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`;\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  depositFeeBP,\n}) => {\n  const TranslateString = useI18n();\n  const { onStake } = useStake(pid);\n  const { onUnstake } = useUnstake(pid);\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance);\n  const displayBalance = rawStakedBalance.toLocaleString();\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={onStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      depositFeeBP={depositFeeBP}\n    />\n  );\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={tokenName}\n    />\n  );\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>\n        {TranslateString(999, \"Stake LP\")}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    );\n  };\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? \"textDisabled\" : \"text\"}>\n        {displayBalance}\n      </Heading>\n      {renderStakingButtons()}\n    </Flex>\n  );\n};\n\nexport default StakeAction;\n"]},"metadata":{},"sourceType":"module"}