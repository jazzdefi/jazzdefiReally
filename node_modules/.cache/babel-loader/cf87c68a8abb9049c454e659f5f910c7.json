{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useModal } from \"@mozartfinance/uikit\";\nimport useGetBullHiccupClaimableStatus from \"../hooks/useGetBullHiccupClaimableStatus\";\nimport ClaimBullHiccupNftModal from \"./ClaimBullHiccupNftModal\";\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  _s();\n\n  const hasDisplayedModal = useRef(false);\n  const {\n    isSomeClaimable,\n    isBullClaimable,\n    isHiccupClaimable\n  } = useGetBullHiccupClaimableStatus();\n  const [onPresentGiftModal] = useModal( /*#__PURE__*/_jsxDEV(ClaimBullHiccupNftModal, {\n    isBullClaimable: isBullClaimable,\n    isHiccupClaimable: isHiccupClaimable\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n  const {\n    account\n  } = useWeb3React();\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    if (!pathname.includes(\"/collectibles\") && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal();\n      hasDisplayedModal.current = true;\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal]); // Reset the check flag when account changes\n\n  useEffect(() => {\n    hasDisplayedModal.current = false;\n  }, [account, hasDisplayedModal]);\n  return null;\n};\n\n_s(GlobalCheckBullHiccupClaimStatus, \"DIisGh5eUcbdwO5fSSVVAfEUXBc=\", false, function () {\n  return [useGetBullHiccupClaimableStatus, useModal, useWeb3React, useLocation];\n});\n\n_c = GlobalCheckBullHiccupClaimStatus;\nexport default GlobalCheckBullHiccupClaimStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalCheckBullHiccupClaimStatus\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx"],"names":["React","useEffect","useRef","useLocation","useWeb3React","useModal","useGetBullHiccupClaimableStatus","ClaimBullHiccupNftModal","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","isSomeClaimable","isBullClaimable","isHiccupClaimable","onPresentGiftModal","account","pathname","includes","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,+BAAP,MAA4C,0CAA5C;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,gCAAgC,GAAG,MAAM;AAAA;;AAC7C,QAAMC,iBAAiB,GAAGP,MAAM,CAAC,KAAD,CAAhC;AACA,QAAM;AACJQ,IAAAA,eADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA;AAHI,MAIFN,+BAA+B,EAJnC;AAKA,QAAM,CAACO,kBAAD,IAAuBR,QAAQ,eACnC,QAAC,uBAAD;AACE,IAAA,eAAe,EAAEM,eADnB;AAEE,IAAA,iBAAiB,EAAEC;AAFrB;AAAA;AAAA;AAAA;AAAA,UADmC,CAArC;AAMA,QAAM;AAAEE,IAAAA;AAAF,MAAcV,YAAY,EAAhC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeZ,WAAW,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QACE,CAACc,QAAQ,CAACC,QAAT,CAAkB,eAAlB,CAAD,IACAN,eADA,IAEA,CAACD,iBAAiB,CAACQ,OAHrB,EAIE;AACAJ,MAAAA,kBAAkB;AAClBJ,MAAAA,iBAAiB,CAACQ,OAAlB,GAA4B,IAA5B;AACD;AACF,GATQ,EASN,CAACF,QAAD,EAAWL,eAAX,EAA4BD,iBAA5B,EAA+CI,kBAA/C,CATM,CAAT,CAhB6C,CA2B7C;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,iBAAiB,CAACQ,OAAlB,GAA4B,KAA5B;AACD,GAFQ,EAEN,CAACH,OAAD,EAAUL,iBAAV,CAFM,CAAT;AAIA,SAAO,IAAP;AACD,CAjCD;;GAAMD,gC;UAMAF,+B,EACyBD,Q,EAMTD,Y,EACCD,W;;;KAdjBK,gC;AAmCN,eAAeA,gCAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useModal } from \"@mozartfinance/uikit\";\nimport useGetBullHiccupClaimableStatus from \"../hooks/useGetBullHiccupClaimableStatus\";\nimport ClaimBullHiccupNftModal from \"./ClaimBullHiccupNftModal\";\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false);\n  const {\n    isSomeClaimable,\n    isBullClaimable,\n    isHiccupClaimable,\n  } = useGetBullHiccupClaimableStatus();\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal\n      isBullClaimable={isBullClaimable}\n      isHiccupClaimable={isHiccupClaimable}\n    />\n  );\n  const { account } = useWeb3React();\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (\n      !pathname.includes(\"/collectibles\") &&\n      isSomeClaimable &&\n      !hasDisplayedModal.current\n    ) {\n      onPresentGiftModal();\n      hasDisplayedModal.current = true;\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal]);\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false;\n  }, [account, hasDisplayedModal]);\n\n  return null;\n};\n\nexport default GlobalCheckBullHiccupClaimStatus;\n"]},"metadata":{},"sourceType":"module"}