{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Row.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useMatchBreakpoints } from '@jazzdefi/uikit';\nimport useI18n from 'hooks/useI18n';\nimport Apr from './Apr';\nimport Farm from './Farm';\nimport Earned from './Earned';\nimport Details from './Details';\nimport Multiplier from './Multiplier';\nimport Liquidity from './Liquidity';\nimport ActionPanel from './Actions/ActionPanel';\nimport CellLayout from './CellLayout';\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity\n};\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`;\n_c = CellInner;\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({\n  theme\n}) => theme.colors.borderColor};\n`;\n_c2 = StyledTr;\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`;\n_c3 = EarnedMobileCell;\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`;\n_c4 = AprMobileCell;\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`;\n_c5 = FarmMobileCell;\n\nconst Row = props => {\n  _s();\n\n  const {\n    details\n  } = props;\n  const [actionPanelToggled, setActionPanelToggled] = useState(false);\n  const TranslateString = useI18n();\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled);\n  };\n\n  const {\n    isXl,\n    isXs\n  } = useMatchBreakpoints();\n  const isMobile = !isXl;\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema;\n  const columnNames = tableSchema.map(column => column.name);\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return /*#__PURE__*/_jsxDEV(StyledTr, {\n        onClick: toggleActionPanel,\n        children: Object.keys(props).map(key => {\n          const columnIndex = columnNames.indexOf(key);\n\n          if (columnIndex === -1) {\n            return null;\n          }\n\n          switch (key) {\n            case 'details':\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(CellInner, {\n                  children: /*#__PURE__*/_jsxDEV(CellLayout, {\n                    children: /*#__PURE__*/_jsxDEV(Details, {\n                      actionPanelToggled: actionPanelToggled\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this);\n\n            case 'apr':\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(CellInner, {\n                  children: /*#__PURE__*/_jsxDEV(CellLayout, {\n                    label: TranslateString(736, 'APR'),\n                    children: /*#__PURE__*/_jsxDEV(Apr, { ...props.apr,\n                      hideButton: isMobile\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this);\n\n            default:\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(CellInner, {\n                  children: /*#__PURE__*/_jsxDEV(CellLayout, {\n                    label: TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label),\n                    children: /*#__PURE__*/React.createElement(cells[key], props[key])\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(StyledTr, {\n      onClick: toggleActionPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(FarmMobileCell, {\n            children: /*#__PURE__*/_jsxDEV(CellLayout, {\n              children: /*#__PURE__*/_jsxDEV(Farm, { ...props.farm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(EarnedMobileCell, {\n            children: /*#__PURE__*/_jsxDEV(CellLayout, {\n              label: TranslateString(1072, 'Earned'),\n              children: /*#__PURE__*/_jsxDEV(Earned, { ...props.earned\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AprMobileCell, {\n            children: /*#__PURE__*/_jsxDEV(CellLayout, {\n              label: TranslateString(736, 'APR'),\n              children: /*#__PURE__*/_jsxDEV(Apr, { ...props.apr,\n                hideButton: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(CellInner, {\n          children: /*#__PURE__*/_jsxDEV(CellLayout, {\n            children: /*#__PURE__*/_jsxDEV(Details, {\n              actionPanelToggled: actionPanelToggled\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [handleRenderRow(), actionPanelToggled && details && /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(ActionPanel, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Row, \"kk7GNVIWAEXeSWVv58V+EHA/dKo=\", false, function () {\n  return [useI18n, useMatchBreakpoints];\n});\n\n_c6 = Row;\nexport default Row;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CellInner\");\n$RefreshReg$(_c2, \"StyledTr\");\n$RefreshReg$(_c3, \"EarnedMobileCell\");\n$RefreshReg$(_c4, \"AprMobileCell\");\n$RefreshReg$(_c5, \"FarmMobileCell\");\n$RefreshReg$(_c6, \"Row\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Farms/components/FarmTable/Row.tsx"],"names":["React","useState","styled","useMatchBreakpoints","useI18n","Apr","Farm","Earned","Details","Multiplier","Liquidity","ActionPanel","CellLayout","DesktopColumnSchema","MobileColumnSchema","cells","apr","farm","earned","details","multiplier","liquidity","CellInner","div","theme","mediaQueries","xl","StyledTr","tr","colors","borderColor","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","props","actionPanelToggled","setActionPanelToggled","TranslateString","toggleActionPanel","isXl","isXs","isMobile","tableSchema","columnNames","map","column","name","handleRenderRow","Object","keys","key","columnIndex","indexOf","translationId","label","createElement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@jazzdefi/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowProps> = (props) => {\n  const { details } = props\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled)\n  }\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelToggled} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={TranslateString(736, 'APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout\n                        label={TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label)}\n                      >\n                        {React.createElement(cells[key], props[key])}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(1072, 'Earned')}>\n                <Earned {...props.earned} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={TranslateString(736, 'APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelToggled} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {actionPanelToggled && details && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}