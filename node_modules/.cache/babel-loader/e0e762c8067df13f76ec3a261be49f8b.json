{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/views/Pools/Syrup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { Heading } from 'jazzdefi/jazzdefi-uikit';\nimport orderBy from 'lodash/orderBy';\nimport partition from 'lodash/partition';\nimport useI18n from 'hooks/useI18n';\nimport { usePools, useBlock } from 'state/hooks';\nimport FlexLayout from 'components/layout/Flex';\nimport Page from 'components/layout/Page';\nimport PoolCard from './components/PoolCard';\nimport PoolTabButtons from './components/PoolTabButtons';\nimport Divider from './components/Divider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Farm = () => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const TranslateString = useI18n();\n  const {\n    account\n  } = useWeb3React();\n  const pools = usePools(account);\n  const {\n    currentBlock\n  } = useBlock();\n  const [stackedOnly, setStackedOnly] = useState(false);\n  const [finishedPools, openPools] = useMemo(() => partition(pools, pool => pool.isFinished || currentBlock > pool.endBlock), [currentBlock, pools]);\n  const stackedOnlyPools = useMemo(() => openPools.filter(pool => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)), [openPools]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"xxl\",\n          mb: \"16px\",\n          children: TranslateString(738, 'JAZZ Pool')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: TranslateString(580, 'Stake JAZZ to earn new tokens.')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: TranslateString(486, 'You can unstake at any time.')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: TranslateString(406, 'Rewards are calculated per block.')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"object\", {\n        type: \"image/svg+xml\",\n        width: 256,\n        height: 256,\n        data: \"/images/saxophone-pool-full.svg\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/saxophone-pool-full.svg\",\n          alt: \"JAZZ saxophone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PoolTabButtons, {\n      stackedOnly: stackedOnly,\n      setStackedOnly: setStackedOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${path}`,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: stackedOnly ? orderBy(stackedOnlyPools, ['sortOrder']).map(pool => /*#__PURE__*/_jsxDEV(PoolCard, {\n            pool: pool\n          }, pool.sousId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 72\n          }, this)) : orderBy(openPools, ['sortOrder']).map(pool => /*#__PURE__*/_jsxDEV(PoolCard, {\n            pool: pool\n          }, pool.sousId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 65\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/history`,\n        children: orderBy(finishedPools, ['sortOrder']).map(pool => /*#__PURE__*/_jsxDEV(PoolCard, {\n          pool: pool\n        }, pool.sousId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Farm, \"mewSBCRO2f8xf5DBsN1A0UizBwY=\", false, function () {\n  return [useRouteMatch, useI18n, useWeb3React, usePools, useBlock];\n});\n\n_c = Farm;\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`;\n_c2 = Hero;\nexport default Farm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Farm\");\n$RefreshReg$(_c2, \"Hero\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/views/Pools/Syrup.tsx"],"names":["React","useState","useMemo","Route","useRouteMatch","BigNumber","styled","useWeb3React","Heading","orderBy","partition","useI18n","usePools","useBlock","FlexLayout","Page","PoolCard","PoolTabButtons","Divider","Farm","path","TranslateString","account","pools","currentBlock","stackedOnly","setStackedOnly","finishedPools","openPools","pool","isFinished","endBlock","stackedOnlyPools","filter","userData","stakedBalance","isGreaterThan","map","sousId","Hero","div","theme","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading } from 'jazzdefi/jazzdefi-uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { currentBlock } = useBlock()\n  const [stackedOnly, setStackedOnly] = useState(false)\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || currentBlock > pool.endBlock),\n    [currentBlock, pools],\n  )\n  const stackedOnlyPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(738, 'JAZZ Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake JAZZ to earn new tokens.')}</li>\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <object type=\"image/svg+xml\" width={256} height={256} data=\"/images/saxophone-pool-full.svg\">\n          <img src=\"images/saxophone-pool-full.svg\" alt=\"JAZZ saxophone\" />\n        </object>\n      </Hero>\n      <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stackedOnly\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"]},"metadata":{},"sourceType":"module"}