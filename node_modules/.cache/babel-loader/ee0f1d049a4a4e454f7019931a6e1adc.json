{"ast":null,"code":"var _jsxFileName = \"/home/drab/Documents/jazzdefi/src/components/Balance.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport CountUp from 'react-countup';\nimport { Text } from '@mozartfinance/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Balance = ({\n  value,\n  fontSize,\n  color,\n  decimals,\n  isDisabled,\n  unit,\n  reverse = false\n}) => {\n  _s();\n\n  const previousValue = useRef(0);\n  useEffect(() => {\n    previousValue.current = value;\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(Text, {\n    bold: true,\n    color: isDisabled ? 'textDisabled' : color,\n    fontSize: fontSize,\n    children: [reverse && value && unit ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 35\n    }, this) : '', /*#__PURE__*/_jsxDEV(CountUp, {\n      start: previousValue.current,\n      end: value,\n      decimals: decimals,\n      duration: 1,\n      separator: \",\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), !reverse && value && unit ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 36\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balance, \"7sxqKrCAfH7mvAmhUempIz0vd8c=\");\n\n_c = Balance;\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3\n};\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/components/Balance.tsx"],"names":["React","useEffect","useRef","CountUp","Text","Balance","value","fontSize","color","decimals","isDisabled","unit","reverse","previousValue","current","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,IAAT,QAAqB,sBAArB;;;AAeA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA,UAApC;AAAgDC,EAAAA,IAAhD;AAAsDC,EAAAA,OAAO,GAAG;AAAhE,CAAD,KAA6E;AAAA;;AACnH,QAAMC,aAAa,GAAGX,MAAM,CAAC,CAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACC,OAAd,GAAwBR,KAAxB;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,KAAK,EAAEI,UAAU,GAAG,cAAH,GAAoBF,KAAhD;AAAuD,IAAA,QAAQ,EAAED,QAAjE;AAAA,eACGK,OAAO,IAAIN,KAAX,IAAoBK,IAApB,gBAA2B;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAA3B,GAAiD,EADpD,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEE,aAAa,CAACC,OAA9B;AAAuC,MAAA,GAAG,EAAER,KAA5C;AAAmD,MAAA,QAAQ,EAAEG,QAA7D;AAAuE,MAAA,QAAQ,EAAE,CAAjF;AAAoF,MAAA,SAAS,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,YAFF,EAGG,CAACG,OAAD,IAAYN,KAAZ,IAAqBK,IAArB,gBAA4B;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAA5B,GAAkD,EAHrD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;GAAMN,O;;KAAAA,O;AAgBNA,OAAO,CAACU,YAAR,GAAuB;AACrBR,EAAAA,QAAQ,EAAE,MADW;AAErBG,EAAAA,UAAU,EAAE,KAFS;AAGrBF,EAAAA,KAAK,EAAE,MAHc;AAIrBC,EAAAA,QAAQ,EAAE;AAJW,CAAvB;AAOA,eAAeJ,OAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text } from '@mozartfinance/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n  reverse?: boolean\n}\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit, reverse = false }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text bold color={isDisabled ? 'textDisabled' : color} fontSize={fontSize}>\n      {reverse && value && unit ? <span>{unit}</span> : ''}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {!reverse && value && unit ? <span>{unit}</span> : ''}\n    </Text>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n"]},"metadata":{},"sourceType":"module"}