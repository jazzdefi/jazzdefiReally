{"ast":null,"code":"import { request, gql } from \"graphql-request\";\nimport { campaignMap } from \"config/constants/campaigns\";\nimport { getAchievementTitle, getAchievementDescription } from \"utils/achievements\";\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE;\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\n\nexport const getUserPointIncreaseEvents = async (account) => {\n  try {\n    const data = await request(profileSubgraphApi, gql`\n        {\n          user(id: \"${account.toLowerCase()}\") {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `);\n    return data.user.points;\n  } catch (error) {\n    return null;\n  }\n};\n/**\n * Gets all user point increase events and adds achievement meta\n */\n\nexport const getAchievements = async (account) => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account);\n\n  if (!pointIncreaseEvents) {\n    return [];\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId);\n    return [...accum, {\n      id: userPoint.campaignId,\n      type: campaignMeta.type,\n      address: userPoint.id,\n      title: getAchievementTitle(campaignMeta),\n      description: getAchievementDescription(campaignMeta),\n      badge: campaignMeta.badge,\n      points: Number(userPoint.points)\n    }];\n  }, []);\n};","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/state/achievements/helpers.ts"],"names":["request","gql","campaignMap","getAchievementTitle","getAchievementDescription","profileSubgraphApi","process","env","REACT_APP_SUBGRAPH_PROFILE","getUserPointIncreaseEvents","account","data","toLowerCase","user","points","error","getAchievements","pointIncreaseEvents","reduce","accum","userPoint","campaignMeta","get","campaignId","id","type","address","title","description","badge","Number"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,GAAlB,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SACEC,mBADF,EAEEC,yBAFF,QAGO,oBAHP;AAWA,MAAMC,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAvC;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,0BAA0B,GAAG,OACxCC,OADwC,KAEF;AACtC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMX,OAAO,CACxBK,kBADwB,EAExBJ,GAAI;AACV;AACA,sBAAsBS,OAAO,CAACE,WAAR,EAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAZ8B,CAA1B;AAcA,WAAOD,IAAI,CAACE,IAAL,CAAUC,MAAjB;AACD,GAhBD,CAgBE,OAAOC,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF,CAtBM;AAwBP;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,OAC7BN,OAD6B,KAEF;AAC3B,QAAMO,mBAAmB,GAAG,MAAMR,0BAA0B,CAACC,OAAD,CAA5D;;AAEA,MAAI,CAACO,mBAAL,EAA0B;AACxB,WAAO,EAAP;AACD;;AAED,SAAOA,mBAAmB,CAACC,MAApB,CAA2B,CAACC,KAAD,EAAQC,SAAR,KAAsB;AACtD,UAAMC,YAAY,GAAGnB,WAAW,CAACoB,GAAZ,CAAgBF,SAAS,CAACG,UAA1B,CAArB;AAEA,WAAO,CACL,GAAGJ,KADE,EAEL;AACEK,MAAAA,EAAE,EAAEJ,SAAS,CAACG,UADhB;AAEEE,MAAAA,IAAI,EAAEJ,YAAY,CAACI,IAFrB;AAGEC,MAAAA,OAAO,EAAEN,SAAS,CAACI,EAHrB;AAIEG,MAAAA,KAAK,EAAExB,mBAAmB,CAACkB,YAAD,CAJ5B;AAKEO,MAAAA,WAAW,EAAExB,yBAAyB,CAACiB,YAAD,CALxC;AAMEQ,MAAAA,KAAK,EAAER,YAAY,CAACQ,KANtB;AAOEf,MAAAA,MAAM,EAAEgB,MAAM,CAACV,SAAS,CAACN,MAAX;AAPhB,KAFK,CAAP;AAYD,GAfM,EAeJ,EAfI,CAAP;AAgBD,CAzBM","sourcesContent":["import { request, gql } from \"graphql-request\";\nimport { campaignMap } from \"config/constants/campaigns\";\nimport { Achievement } from \"state/types\";\nimport {\n  getAchievementTitle,\n  getAchievementDescription,\n} from \"utils/achievements\";\n\ninterface UserPointIncreaseEvent {\n  campaignId: string;\n  id: string; // wallet address\n  points: string;\n}\n\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE;\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (\n  account: string\n): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const data = await request(\n      profileSubgraphApi,\n      gql`\n        {\n          user(id: \"${account.toLowerCase()}\") {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `\n    );\n    return data.user.points;\n  } catch (error) {\n    return null;\n  }\n};\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (\n  account: string\n): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account);\n\n  if (!pointIncreaseEvents) {\n    return [];\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId);\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ];\n  }, []);\n};\n"]},"metadata":{},"sourceType":"module"}