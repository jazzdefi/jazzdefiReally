{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from \"state/actions\";\nimport { stake, sousStake, sousStakeBnb } from \"utils/callHelpers\";\nimport { useMasterchef, useSousChef } from \"./useContract\";\n\nconst useStake = pid => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const masterChefContract = useMasterchef();\n  const handleStake = useCallback(async amount => {\n    const txHash = await stake(masterChefContract, pid, amount, account);\n    dispatch(fetchFarmUserDataAsync(account));\n    console.info(txHash);\n  }, [account, dispatch, masterChefContract, pid]);\n  return {\n    onStake: handleStake\n  };\n};\n\n_s(useStake, \"UqUwZSBkvZXPpdFRjWPyW/3ESfM=\", false, function () {\n  return [useDispatch, useWeb3React, useMasterchef];\n});\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const masterChefContract = useMasterchef();\n  const sousChefContract = useSousChef(sousId);\n  const handleStake = useCallback(async (amount, decimals) => {\n    if (sousId === 0) {\n      await stake(masterChefContract, 0, amount, account);\n    } else if (isUsingBnb) {\n      await sousStakeBnb(sousChefContract, amount, account);\n    } else {\n      await sousStake(sousChefContract, amount, decimals, account);\n    }\n\n    dispatch(updateUserStakedBalance(sousId, account));\n    dispatch(updateUserBalance(sousId, account));\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId]);\n  return {\n    onStake: handleStake\n  };\n};\n\n_s2(useSousStake, \"KZ98sBSMgKyLlGBqu07NHitBt0o=\", false, function () {\n  return [useDispatch, useWeb3React, useMasterchef, useSousChef];\n});\n\nexport default useStake;","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/hooks/useStake.ts"],"names":["useCallback","useWeb3React","useDispatch","fetchFarmUserDataAsync","updateUserStakedBalance","updateUserBalance","stake","sousStake","sousStakeBnb","useMasterchef","useSousChef","useStake","pid","dispatch","account","masterChefContract","handleStake","amount","txHash","console","info","onStake","useSousStake","sousId","isUsingBnb","sousChefContract","decimals"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,sBADF,EAEEC,uBAFF,EAGEC,iBAHF,QAIO,eAJP;AAKA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,YAA3B,QAA+C,mBAA/C;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,eAA3C;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAiB;AAAA;;AAChC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAcb,YAAY,EAAhC;AACA,QAAMc,kBAAkB,GAAGN,aAAa,EAAxC;AAEA,QAAMO,WAAW,GAAGhB,WAAW,CAC7B,MAAOiB,MAAP,IAA0B;AACxB,UAAMC,MAAM,GAAG,MAAMZ,KAAK,CAACS,kBAAD,EAAqBH,GAArB,EAA0BK,MAA1B,EAAkCH,OAAlC,CAA1B;AACAD,IAAAA,QAAQ,CAACV,sBAAsB,CAACW,OAAD,CAAvB,CAAR;AACAK,IAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACD,GAL4B,EAM7B,CAACJ,OAAD,EAAUD,QAAV,EAAoBE,kBAApB,EAAwCH,GAAxC,CAN6B,CAA/B;AASA,SAAO;AAAES,IAAAA,OAAO,EAAEL;AAAX,GAAP;AACD,CAfD;;GAAML,Q;UACaT,W,EACGD,Y,EACOQ,a;;;AAc7B,OAAO,MAAMa,YAAY,GAAG,CAACC,MAAD,EAASC,UAAU,GAAG,KAAtB,KAAgC;AAAA;;AAC1D,QAAMX,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAcb,YAAY,EAAhC;AACA,QAAMc,kBAAkB,GAAGN,aAAa,EAAxC;AACA,QAAMgB,gBAAgB,GAAGf,WAAW,CAACa,MAAD,CAApC;AAEA,QAAMP,WAAW,GAAGhB,WAAW,CAC7B,OAAOiB,MAAP,EAAuBS,QAAvB,KAA4C;AAC1C,QAAIH,MAAM,KAAK,CAAf,EAAkB;AAChB,YAAMjB,KAAK,CAACS,kBAAD,EAAqB,CAArB,EAAwBE,MAAxB,EAAgCH,OAAhC,CAAX;AACD,KAFD,MAEO,IAAIU,UAAJ,EAAgB;AACrB,YAAMhB,YAAY,CAACiB,gBAAD,EAAmBR,MAAnB,EAA2BH,OAA3B,CAAlB;AACD,KAFM,MAEA;AACL,YAAMP,SAAS,CAACkB,gBAAD,EAAmBR,MAAnB,EAA2BS,QAA3B,EAAqCZ,OAArC,CAAf;AACD;;AACDD,IAAAA,QAAQ,CAACT,uBAAuB,CAACmB,MAAD,EAAST,OAAT,CAAxB,CAAR;AACAD,IAAAA,QAAQ,CAACR,iBAAiB,CAACkB,MAAD,EAAST,OAAT,CAAlB,CAAR;AACD,GAX4B,EAY7B,CACEA,OADF,EAEED,QAFF,EAGEW,UAHF,EAIET,kBAJF,EAKEU,gBALF,EAMEF,MANF,CAZ6B,CAA/B;AAsBA,SAAO;AAAEF,IAAAA,OAAO,EAAEL;AAAX,GAAP;AACD,CA7BM;;IAAMM,Y;UACMpB,W,EACGD,Y,EACOQ,a,EACFC,W;;;AA2B3B,eAAeC,QAAf","sourcesContent":["import { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n} from \"state/actions\";\nimport { stake, sousStake, sousStakeBnb } from \"utils/callHelpers\";\nimport { useMasterchef, useSousChef } from \"./useContract\";\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const masterChefContract = useMasterchef();\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account);\n      dispatch(fetchFarmUserDataAsync(account));\n      console.info(txHash);\n    },\n    [account, dispatch, masterChefContract, pid]\n  );\n\n  return { onStake: handleStake };\n};\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const masterChefContract = useMasterchef();\n  const sousChefContract = useSousChef(sousId);\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account);\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account);\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account);\n      }\n      dispatch(updateUserStakedBalance(sousId, account));\n      dispatch(updateUserBalance(sousId, account));\n    },\n    [\n      account,\n      dispatch,\n      isUsingBnb,\n      masterChefContract,\n      sousChefContract,\n      sousId,\n    ]\n  );\n\n  return { onStake: handleStake };\n};\n\nexport default useStake;\n"]},"metadata":{},"sourceType":"module"}