{"ast":null,"code":"import BigNumber from \"bignumber.js\";\nimport { ethers } from \"ethers\";\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({\n    from: account\n  });\n};\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods.enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n      from: account,\n      gas: 200000\n    }).on(\"transactionHash\", tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  return masterChefContract.methods.deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account,\n    gas: 200000\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods.deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString()).send({\n    from: account,\n    gas: 200000\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.deposit().send({\n    from: account,\n    gas: 200000,\n    value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods.leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n      from: account,\n      gas: 200000\n    }).on(\"transactionHash\", tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  return masterChefContract.methods.withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account,\n    gas: 200000\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === \"0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC\") {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on(\"transactionHash\", tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  if (sousChefContract.options.address === \"0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831\") {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on(\"transactionHash\", tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  if (sousChefContract.options.address === \"0x453a75908fb5a36d482d5f8fe88eca836f32ead5\") {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on(\"transactionHash\", tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  return sousChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString()).send({\n    from: account,\n    gas: 200000\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.emergencyWithdraw().send({\n    from: account\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods.leaveStaking(\"0\").send({\n      from: account,\n      gas: 200000\n    }).on(\"transactionHash\", tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  return masterChefContract.methods.deposit(pid, \"0\").send({\n    from: account,\n    gas: 200000\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit(\"0\").send({\n    from: account,\n    gas: 200000\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit().send({\n    from: account,\n    gas: 200000,\n    value: new BigNumber(0)\n  }).on(\"transactionHash\", tx => {\n    return tx.transactionHash;\n  });\n};","map":{"version":3,"sources":["/home/drab/Documents/jazzdefi/src/utils/callHelpers.ts"],"names":["BigNumber","ethers","approve","lpContract","masterChefContract","account","methods","options","address","constants","MaxUint256","send","from","stake","pid","amount","enterStaking","times","pow","toString","gas","on","tx","transactionHash","deposit","sousStake","sousChefContract","decimals","sousStakeBnb","value","unstake","leaveStaking","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb"],"mappings":"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","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport { ethers } from \"ethers\";\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account });\n};\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(\n        new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n      )\n      .send({ from: account, gas: 200000 })\n      .on(\"transactionHash\", (tx) => {\n        return tx.transactionHash;\n      });\n  }\n\n  return masterChefContract.methods\n    .deposit(\n      pid,\n      new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n    )\n    .send({ from: account, gas: 200000 })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const sousStake = async (\n  sousChefContract,\n  amount,\n  decimals = 18,\n  account\n) => {\n  return sousChefContract.methods\n    .deposit(\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString()\n    )\n    .send({ from: account, gas: 200000 })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: 200000,\n      value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n    })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(\n        new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n      )\n      .send({ from: account, gas: 200000 })\n      .on(\"transactionHash\", (tx) => {\n        return tx.transactionHash;\n      });\n  }\n\n  return masterChefContract.methods\n    .withdraw(\n      pid,\n      new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n    )\n    .send({ from: account, gas: 200000 })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const sousUnstake = async (\n  sousChefContract,\n  amount,\n  decimals = 18,\n  account\n) => {\n  // shit code: hard fix for old CTK and BLK\n  if (\n    sousChefContract.options.address ===\n    \"0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC\"\n  ) {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on(\"transactionHash\", (tx) => {\n        return tx.transactionHash;\n      });\n  }\n  if (\n    sousChefContract.options.address ===\n    \"0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831\"\n  ) {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on(\"transactionHash\", (tx) => {\n        return tx.transactionHash;\n      });\n  }\n  if (\n    sousChefContract.options.address ===\n    \"0x453a75908fb5a36d482d5f8fe88eca836f32ead5\"\n  ) {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on(\"transactionHash\", (tx) => {\n        return tx.transactionHash;\n      });\n  }\n\n  return sousChefContract.methods\n    .withdraw(\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString()\n    )\n    .send({ from: account, gas: 200000 })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const sousEmegencyUnstake = async (\n  sousChefContract,\n  amount,\n  account\n) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(\"0\")\n      .send({ from: account, gas: 200000 })\n      .on(\"transactionHash\", (tx) => {\n        return tx.transactionHash;\n      });\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, \"0\")\n    .send({ from: account, gas: 200000 })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit(\"0\")\n    .send({ from: account, gas: 200000 })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}